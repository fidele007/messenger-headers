/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:50 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBAnnotatedBlockController.h>
#import <Messenger/FBHTMLEmbedNodeDelegate.h>
#import <Messenger/FBReuseInstanceProvider.h>
#import <Messenger/FBTransitioningBlockController.h>
#import <Messenger/FBReusePoolBlockController.h>

@protocol FBReuseInstanceProvider;
@class NSString, FBUserSession, FBRichStoryBlockDisplayContext, NSURL, NSMutableDictionary, NSMutableArray, FBHTMLEmbedNode, FBHTMLEmbedSize;

@interface FBHTMLEmbedBlockController : FBAnnotatedBlockController <FBHTMLEmbedNodeDelegate, FBReuseInstanceProvider, FBTransitioningBlockController, FBReusePoolBlockController> {

	FBUserSession* _session;
	FBRichStoryBlockDisplayContext* _displayContext;
	NSURL* _baseURL;
	NSString* _htmlString;
	BOOL _toggleVisibilityViaViewport;
	BOOL _contentWasCached;
	BOOL _needsToFirePerfEvent;
	int _pendingRequestCount;
	BOOL _hasLoadedContent;
	BOOL _didPopModal;
	CGSize _loadedContentSize;
	CGSize _renderedContentSize;
	CGSize _lastSizeDiff;
	NSMutableDictionary* _perfAnalyticsInfo;
	NSMutableArray* _webviewErrors;
	double _contentLoadingStartTime;
	NSString* _reuseIdentifier;
	id<FBReuseInstanceProvider> reuseProvider;
	FBHTMLEmbedNode* _embedNode;
	FBHTMLEmbedSize* _embedSize;

}

@property (nonatomic,readonly) FBHTMLEmbedNode * embedNode;                                 //@synthesize embedNode=_embedNode - In the implementation block
@property (nonatomic,readonly) FBHTMLEmbedSize * embedSize;                                 //@synthesize embedSize=_embedSize - In the implementation block
@property (nonatomic,readonly) unsigned long long interactionType; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * reuseIdentifier;                             //@synthesize reuseIdentifier=_reuseIdentifier - In the implementation block
@property (assign,nonatomic,__weak) id<FBReuseInstanceProvider> reuseProvider; 
+(BOOL)blockControllerCanRenderStoryBlock:(id)arg1 presentationAttributes:(id)arg2 ;
+(Class)reuseClass;
+(Class)targetBlockControllerClass;
+(id)generateReuseInstanceWithContext:(id)arg1 ;
+(void)prepareInstanceForReuse:(id)arg1 ;
+(unsigned long long)initialCapacity;
+(id)blockRenderableLayoutForStoryBlock:(id)arg1 constrainingSize:(CGSize)arg2 presentationAttributes:(id)arg3 displayContext:(id)arg4 ;
+(unsigned long long)maximumCapacity;
-(void)didEnterWorkingRange;
-(void)didExitWorkingRange;
-(void)didReceiveFocusWithInteraction:(unsigned long long)arg1 ;
-(void)didLoseFocusWithInteraction:(unsigned long long)arg1 ;
-(void)didGainInteractiveFocus;
-(void)didLoseInteractiveFocus;
-(id)eligiblePresentationAttributesFromTransitioningToPresentationAttributes:(id)arg1 ;
-(void)didBeginTransitionToPresentationAttributes:(id)arg1 withGestureAtPoint:(CGPoint)arg2 originLayout:(id)arg3 destinationLayout:(id)arg4 ;
-(void)didReclaimInstance;
-(id<FBReuseInstanceProvider>)reuseProvider;
-(void)setReuseProvider:(id<FBReuseInstanceProvider>)arg1 ;
-(id)initWithStoryBlock:(id)arg1 presentationAttributes:(id)arg2 session:(id)arg3 displayContext:(id)arg4 ;
-(id)blockRenderable;
-(BOOL)blockCanRespondToGestureInDirection:(long long)arg1 withTouches:(id)arg2 ;
-(void)didLoadLastRequestWithFinishTime:(double)arg1 ;
-(BOOL)htmlEmbedNode:(id)arg1 shouldStartNavigationRequest:(id)arg2 navigationType:(long long)arg3 sourceFrame:(id)arg4 targetFrame:(id)arg5 ;
-(id)analyticsExtrasForRequest:(id)arg1 ;
-(FBHTMLEmbedSize *)embedSize;
-(id)dequeueInstance:(id)arg1 ;
-(FBHTMLEmbedNode *)embedNode;
-(void)htmlEmbedNode:(id)arg1 didUpdateContentSize:(CGSize)arg2 ;
-(BOOL)shouldOpenRequestInFullscreenWebview:(id)arg1 navigationType:(long long)arg2 sourceFrame:(id)arg3 targetFrame:(id)arg4 ;
-(void)htmlEmbedNode:(id)arg1 didFinishNavigationRequest:(id)arg2 ;
-(CGSize)_embedConstrainingSize:(CGSize)arg1 ;
-(void)setEmbedSize:(FBHTMLEmbedSize *)arg1 ;
-(void)_logWebViewLoadingAnalytics;
-(CGSize)_currentSizeDiff;
-(BOOL)_shouldUpdateLayout;
-(void)didInitializeEmbedNode;
-(void)_logWebViewPerfEventWithAnalyticsExtras:(id)arg1 ;
-(void)_cleanupWebViewLoadingAnalyticValues;
-(void)_updateLayoutIfNecessary;
-(BOOL)_didVoiceOverActivate;
-(void)_logLoadingTimesIfLastRequest;
-(BOOL)_canPanScrollView:(id)arg1 inDirection:(long long)arg2 ;
-(void)enqueueInstance:(id)arg1 ;
-(void)htmlEmbedNode:(id)arg1 didStartNavigationRequest:(id)arg2 ;
-(void)htmlEmbedNode:(id)arg1 didFailNavigationRequest:(id)arg2 withError:(id)arg3 ;
-(NSString *)reuseIdentifier;
-(unsigned long long)interactionType;
-(void)_loadContent;
@end

