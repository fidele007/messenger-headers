/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:55 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FBSharedFramework/FBValueObject.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSArray;

@interface FBLoopingIconsConfig : FBValueObject <NSCopying> {

	BOOL _shouldLoopInfinitely;
	NSArray* _loopThroughImages;
	NSArray* _highLightedImages;
	unsigned long long _numberOfLoops;
	double _delayForDefaultImage;
	double _delayForOtherImages;

}

@property (nonatomic,copy,readonly) NSArray * loopThroughImages;              //@synthesize loopThroughImages=_loopThroughImages - In the implementation block
@property (nonatomic,copy,readonly) NSArray * highLightedImages;              //@synthesize highLightedImages=_highLightedImages - In the implementation block
@property (nonatomic,readonly) unsigned long long numberOfLoops;              //@synthesize numberOfLoops=_numberOfLoops - In the implementation block
@property (nonatomic,readonly) double delayForDefaultImage;                   //@synthesize delayForDefaultImage=_delayForDefaultImage - In the implementation block
@property (nonatomic,readonly) double delayForOtherImages;                    //@synthesize delayForOtherImages=_delayForOtherImages - In the implementation block
@property (nonatomic,readonly) BOOL shouldLoopInfinitely;                     //@synthesize shouldLoopInfinitely=_shouldLoopInfinitely - In the implementation block
-(id)initWithLoopThroughImages:(id)arg1 highLightedImages:(id)arg2 numberOfLoops:(unsigned long long)arg3 delayForDefaultImage:(double)arg4 delayForOtherImages:(double)arg5 shouldLoopInfinitely:(BOOL)arg6 ;
-(NSArray *)loopThroughImages;
-(NSArray *)highLightedImages;
-(double)delayForDefaultImage;
-(double)delayForOtherImages;
-(BOOL)shouldLoopInfinitely;
-(unsigned long long)numberOfLoops;
@end

