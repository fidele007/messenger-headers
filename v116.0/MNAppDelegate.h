/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:47 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIApplicationDelegate.h>
#import <Messenger/OrcaLogoutHandler.h>

@protocol FBBackgroundURLSessionHandlingListener, FBProvider, FBEventListener;
@class UIWindow, FBApplicationAnalyticsCoordinator, FBApplicationActivityMonitorCoordinator, MNWatchAppContextUpdater, FBUsageTimeMonitor, MNNetworkUsageTimeMonitor, MNBugReportConduit, FBAnalyticsUserFBIDListener, FBProviderMap, MNAppSession, FBExceptionHandler, FBSessionController, NSDictionary, FBRunloopIdleDetector, MNPlatformConversionTrackingCoordinator, MNMontageComposerLaunchCoordinator, MNApplicationDelegateListenerAnnouncer, MNApplicationWindow, NSString;

@interface MNAppDelegate : NSObject <UIApplicationDelegate, OrcaLogoutHandler> {

	BOOL _backgroundInit;
	BOOL _canTapPushNotification;
	BOOL _didColdStart;
	BOOL _uiPresented;
	FBApplicationAnalyticsCoordinator* _analyticsCoordinator;
	FBApplicationActivityMonitorCoordinator* _activityMonitorCoordinator;
	MNWatchAppContextUpdater* _watchAppContextUpdater;
	FBUsageTimeMonitor* _usageTimeMonitor;
	id<FBBackgroundURLSessionHandlingListener> _backgroundURLSessionAnnouncer;
	MNNetworkUsageTimeMonitor* _networkUsageTimeMonitor;
	MNBugReportConduit* _bugReportConduit;
	FBAnalyticsUserFBIDListener* _userFBIDListener;
	FBProviderMap* _providerMap;
	id<FBProvider> _appNotificationHandlerProvider;
	id<FBProvider> _loggedOutURLHandlerProvider;
	id<FBProvider> _applicationShortcutItemHandlerProvider;
	id<FBProvider> _urlHandlerProvider;
	id<FBProvider> _appleIntentHandlerProvider;
	MNAppSession* _appSession;
	FBExceptionHandler* _exceptionHandler;
	FBSessionController* _sessionController;
	id<FBEventListener> _timeSpentListener;
	NSDictionary* _launchOptions;
	FBRunloopIdleDetector* _idleDetectorForProviderMapSanityCheck;
	MNPlatformConversionTrackingCoordinator* _platformConversionTrackingCoordinator;
	MNMontageComposerLaunchCoordinator* _montageComposerLaunchCoordinator;
	MNApplicationDelegateListenerAnnouncer* _announcer;
	MNApplicationWindow* _window;

}

@property (nonatomic,retain) MNApplicationWindow * window;              //@synthesize window=_window - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)keysConfiguration;
-(void)_prepareAnalyticsCoordinatorAndLogApplicationLaunchForApplication:(id)arg1 ;
-(id)_prepareProviderMap;
-(void)_processLaunchOptions:(id)arg1 ;
-(void)_prepareMontageComposerLaunchCoordinatorWithLaunchOptions:(id)arg1 ;
-(void)_startAppSessionWithLaunchOptions:(id)arg1 ;
-(void)dynamicTypeSizeChanged:(id)arg1 ;
-(BOOL)_hasValidCredentials;
-(void)_logDataUsageInApnsPayload:(id)arg1 ;
-(void)_application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 withResponseInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)_application:(id)arg1 didReceiveLocalNotification:(id)arg2 actionIdentifier:(id)arg3 withResponseInfo:(id)arg4 ;
-(void)_performProviderMapSanityCheck;
-(void)_logApplicationLaunchWithOptions:(id)arg1 ;
-(void)logOutManagerDidCompleteLogout:(id)arg1 ;
-(void)dealloc;
-(MNApplicationWindow *)window;
-(BOOL)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(BOOL)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(/*^block*/id)arg3 ;
-(BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(void)setWindow:(MNApplicationWindow *)arg1 ;
-(void)application:(id)arg1 performFetchWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 withResponseInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)application:(id)arg1 didReceiveLocalNotification:(id)arg2 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 withResponseInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2 ;
-(void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2 ;
-(void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2 ;
-(void)keyboardInputChanged:(id)arg1 ;
@end

