/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:52 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <FBSharedFramework/FBContainerViewController.h>
#import <FBSharedFramework/FBClassInjectable.h>
#import <FBSharedFramework/FBKeyboardObserverDelegate.h>
#import <FBSharedFramework/FBModallyPresentableItem.h>
#import <FBSharedFramework/FBPopoverControllerDelegate.h>
#import <Messenger/MNComposerActionViewDelegate.h>
#import <Messenger/MNComposerAutoCollapseMonitorDelegate.h>
#import <Messenger/MNComposerBannerViewPresenterDelegate.h>
#import <Messenger/MNComposerControlExtensionProvidingDelegate.h>
#import <Messenger/MNComposerControlExtensionStateListener.h>
#import <Messenger/MNComposerDismissableDelegate.h>
#import <Messenger/MNComposerDrawerPresentationManagerDelegate.h>
#import <Messenger/MNComposerDynamicContainerViewDelegate.h>
#import <Messenger/MNComposerExtensionEditDelegate.h>
#import <Messenger/MNComposerExtensionPresenter.h>
#import <Messenger/MNComposerExtensionProviderListener.h>
#import <Messenger/MNComposerExtensionSendDelegate.h>
#import <Messenger/MNComposerExtensionTrayPresentationStrategyDelegate.h>
#import <Messenger/MNComposerKeyboardExtensionDelegate.h>
#import <Messenger/MNComposerMoreDrawerBouncing.h>
#import <Messenger/MNComposerOverflowExtensionDelegate.h>
#import <Messenger/MNComposerPlatformAppsExtensionDelegate.h>
#import <Messenger/MNComposerPresentableDelegate.h>
#import <Messenger/MNComposerPreviewViewControllerDelegate.h>
#import <Messenger/MNComposerSearchBarDelegate.h>
#import <Messenger/MNComposerTabControllerDelegate.h>
#import <Messenger/MNComposerTextParserListening.h>
#import <Messenger/MNComposerTourControllerDelegate.h>
#import <Messenger/MNGrowingTextViewDelegate.h>
#import <Messenger/MNHawtLikeNuxControllerDelegate.h>
#import <Messenger/MNLikeComposingListener.h>
#import <Messenger/MNLikeStickerControllerDelegate.h>
#import <Messenger/MNMentionTypeaheadViewControllerDelegate.h>
#import <Messenger/MNComposerExtensionSegmentedControlCoordinatorDelegate.h>
#import <Messenger/MNComposerBadgingDelegate.h>
#import <FBSharedFramework/FBKeyboardPresenting.h>

@protocol MNComposerLayoutStrategy, MNComposerContaining, FBTextInputView, MNComposerExtensionPresentationStrategy, MNComposerExtensionProviding, MNComposerControlExtensionIconActionHandling, MNComposerControlExtensionProviding, MNComposerExtension, MNComposerConfiguring, MNComposerControlExtension, MNComposeViewControllerDelegate, MNTypingStateListener, MNComposerExtensionOverflowStrategy, MNComposingContext;
@class UIView, UIViewController, MNComposeViewControllerInjector, FBKeyboardResettingTracker, FBKeyboardObserver, MNComposeView, MNTabBar, MNInputWrapperView, FBPopoverController, FBInteractionLagTracker, NSDate, FBViewStateDebouncer, MNComposerExtensionOrder, MNComposerControlExtensionBannerView, MNComposerTriggersLogger, MNComposerKeyboardFrameDebouncer, NSArray, MNComposerDrawerPresentationManager, MNComposerAutoCollapseMonitor, MNComposerBarLongPressBehaviorCollection, MNComposerTourController, NSString, UIColor, MNComposerLayoutConfiguration, MNComposerLayoutContext, MNComposerDrawerListenerAnnouncer, FBStringWithRedactedDescription;

@interface MNComposeViewController : FBContainerViewController <FBClassInjectable, FBKeyboardObserverDelegate, FBModallyPresentableItem, FBPopoverControllerDelegate, MNComposerActionViewDelegate, MNComposerAutoCollapseMonitorDelegate, MNComposerBannerViewPresenterDelegate, MNComposerControlExtensionProvidingDelegate, MNComposerControlExtensionStateListener, MNComposerDismissableDelegate, MNComposerDrawerPresentationManagerDelegate, MNComposerDynamicContainerViewDelegate, MNComposerExtensionEditDelegate, MNComposerExtensionPresenter, MNComposerExtensionProviderListener, MNComposerExtensionSendDelegate, MNComposerExtensionTrayPresentationStrategyDelegate, MNComposerKeyboardExtensionDelegate, MNComposerMoreDrawerBouncing, MNComposerOverflowExtensionDelegate, MNComposerPlatformAppsExtensionDelegate, MNComposerPresentableDelegate, MNComposerPreviewViewControllerDelegate, MNComposerSearchBarDelegate, MNComposerTabControllerDelegate, MNComposerTextParserListening, MNComposerTourControllerDelegate, MNGrowingTextViewDelegate, MNHawtLikeNuxControllerDelegate, MNLikeComposingListener, MNLikeStickerControllerDelegate, MNMentionTypeaheadViewControllerDelegate, MNComposerExtensionSegmentedControlCoordinatorDelegate, MNComposerBadgingDelegate, FBKeyboardPresenting> {

	MNComposeViewControllerInjector* _injector;
	FBKeyboardResettingTracker* _keyboardResettingTracker;
	FBKeyboardObserver* _keyboardObserver;
	id<MNComposerLayoutStrategy> _layoutStrategy;
	UIView*<MNComposerContaining> _containerView;
	MNComposeView* _composeView;
	MNTabBar* _composerTabBar;
	UIView* _composerControlsView;
	MNInputWrapperView* _inputWrapperView;
	FBPopoverController* _popoverController;
	FBInteractionLagTracker* _typingLagTracker;
	BOOL _typingLagTrackingEnabled;
	unsigned long long _keyboardUpdateCounter;
	NSDate* _lastKeyTypedTime;
	KeyboardConfiguration _lastKeyboardConfiguration;
	FBViewStateDebouncer* _sendAndLikeButtonVisibilityDebouncer;
	UIView*<FBTextInputView> _currentTextInputView;
	id<MNComposerExtensionPresentationStrategy> _currentPresentationStrategy;
	id<MNComposerExtensionProviding> _extensionProvider;
	MNComposerExtensionOrder* _extensionOrder;
	id<MNComposerControlExtensionIconActionHandling> _composerControlExtensionIconActionHandler;
	id<MNComposerControlExtensionProviding> _composerControlExtensionProvider;
	MNComposerControlExtensionBannerView* _composerControlExtensionBannerView;
	MNComposerTriggersLogger* _triggersLogger;
	BOOL _shouldLogTypingWhileInSearchMode;
	MNComposerKeyboardFrameDebouncer* _keyboardFrameDebouncer;
	NSArray* _previewViewControllers;
	BOOL _isInContentSearchMode;
	id<MNComposerExtension> _composerExtensionToRestore;
	MNComposerDrawerPresentationManager* _drawerPresentationManager;
	id<MNComposerExtension> _composerDrawerExtension;
	UIView* _keyboardAccessoryView;
	BOOL _needsDrawerLayout;
	MNComposerAutoCollapseMonitor* _autoCollapseMonitor;
	id<MNComposerConfiguring> _composerConfiguration;
	BOOL _textInputHasExplicitFocus;
	BOOL _didPrepareTextView;
	MNComposerBarLongPressBehaviorCollection* _longPressHandlers;
	MNComposerTourController* _tourController;
	BOOL _interactiveTransitionStartedAndDidNotFinish;
	BOOL _disableComposing;
	BOOL _disableSending;
	BOOL _canSendLike;
	BOOL _isDoingLongPressMediaIntearaction;
	BOOL _transitioningToNewSize;
	BOOL _needsApplyExtension;
	BOOL _readyForKeyboardPresentation;
	id<MNComposerExtension> _currentComposerExtension;
	id<MNComposerControlExtension> _composerControlExtension;
	NSString* _customLikeEmoji;
	UIColor* _themeColor;
	id<MNComposeViewControllerDelegate> _delegate;
	id<MNTypingStateListener> _typingStateListener;
	NSString* _placeholderTextOverride;
	MNComposerLayoutConfiguration* _layoutConfiguration;
	MNComposerLayoutContext* _layoutContext;
	id<MNComposerExtensionOverflowStrategy> _extensionOverflowStrategy;
	unsigned long long _appearanceState;
	id<MNComposingContext> _composingContext;
	CGRect _keyboardFrame;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) MNComposerLayoutConfiguration * layoutConfiguration;                              //@synthesize layoutConfiguration=_layoutConfiguration - In the implementation block
@property (assign,nonatomic) BOOL transitioningToNewSize;                                                    //@synthesize transitioningToNewSize=_transitioningToNewSize - In the implementation block
@property (assign,nonatomic) BOOL needsApplyExtension;                                                       //@synthesize needsApplyExtension=_needsApplyExtension - In the implementation block
@property (assign,nonatomic) BOOL readyForKeyboardPresentation;                                              //@synthesize readyForKeyboardPresentation=_readyForKeyboardPresentation - In the implementation block
@property (assign,nonatomic) CGRect keyboardFrame;                                                           //@synthesize keyboardFrame=_keyboardFrame - In the implementation block
@property (nonatomic,copy) MNComposerLayoutContext * layoutContext;                                          //@synthesize layoutContext=_layoutContext - In the implementation block
@property (nonatomic,retain) id<MNComposerExtensionOverflowStrategy> extensionOverflowStrategy;              //@synthesize extensionOverflowStrategy=_extensionOverflowStrategy - In the implementation block
@property (assign,nonatomic) unsigned long long appearanceState;                                             //@synthesize appearanceState=_appearanceState - In the implementation block
@property (nonatomic,copy) id<MNComposingContext> composingContext;                                          //@synthesize composingContext=_composingContext - In the implementation block
@property (nonatomic,copy,readonly) NSString * composerExtensionIdentifier; 
@property (nonatomic,readonly) id<MNComposerExtension> currentComposerExtension;                             //@synthesize currentComposerExtension=_currentComposerExtension - In the implementation block
@property (nonatomic,readonly) id<MNComposerControlExtension> composerControlExtension;                      //@synthesize composerControlExtension=_composerControlExtension - In the implementation block
@property (assign,nonatomic) BOOL disableComposing;                                                          //@synthesize disableComposing=_disableComposing - In the implementation block
@property (assign,nonatomic) BOOL disableSending;                                                            //@synthesize disableSending=_disableSending - In the implementation block
@property (assign,nonatomic) BOOL canSendLike;                                                               //@synthesize canSendLike=_canSendLike - In the implementation block
@property (nonatomic,copy) NSString * customLikeEmoji;                                                       //@synthesize customLikeEmoji=_customLikeEmoji - In the implementation block
@property (nonatomic,copy) UIColor * themeColor;                                                             //@synthesize themeColor=_themeColor - In the implementation block
@property (assign,nonatomic,__weak) id<MNComposeViewControllerDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MNComposerDrawerListenerAnnouncer * drawerListenerAnnouncer; 
@property (nonatomic,retain) id<MNTypingStateListener> typingStateListener;                                  //@synthesize typingStateListener=_typingStateListener - In the implementation block
@property (nonatomic,readonly) BOOL isNuxVisible; 
@property (nonatomic,copy) FBStringWithRedactedDescription * text; 
@property (nonatomic,copy) NSString * placeholderTextOverride;                                               //@synthesize placeholderTextOverride=_placeholderTextOverride - In the implementation block
@property (nonatomic,readonly) BOOL isDoingLongPressMediaIntearaction;                                       //@synthesize isDoingLongPressMediaIntearaction=_isDoingLongPressMediaIntearaction - In the implementation block
@property (nonatomic,readonly) UIView * modalPresentationView; 
@property (nonatomic,readonly) UIViewController * modalPresentationViewController; 
@property (nonatomic,readonly) UIView*<FBTextInputView> textInputView; 
@property (assign,nonatomic) BOOL showsKeyboard; 
+(Class)injectorClass;
-(void)handleLikeLongPress:(id)arg1 ;
-(void)searchBarDidBeginEditing:(id)arg1 ;
-(void)setThemeColor:(UIColor *)arg1 ;
-(BOOL)growingTextViewShouldBeginEditing:(id)arg1 ;
-(BOOL)growingTextViewShouldEndEditing:(id)arg1 ;
-(void)growingTextViewDidBeginEditing:(id)arg1 ;
-(void)growingTextViewDidEndEditing:(id)arg1 ;
-(BOOL)growingTextView:(id)arg1 shouldChangeTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(void)growingTextViewDidChange:(id)arg1 ;
-(BOOL)growingTextView:(id)arg1 shouldChangeHeight:(double)arg2 ;
-(void)growingTextView:(id)arg1 willChangeHeight:(double)arg2 ;
-(void)growingTextViewDidChangeSelection:(id)arg1 ;
-(BOOL)growingTextViewShouldReturn:(id)arg1 ;
-(void)growingTextViewDidBeginScrolling:(id)arg1 ;
-(void)growingTextViewDidEndScrolling:(id)arg1 ;
-(BOOL)growingTextViewShouldHandlePaste:(id)arg1 ;
-(BOOL)growingTextView:(id)arg1 didPaste:(id)arg2 ;
-(void)setAppearanceState:(unsigned long long)arg1 ;
-(void)didUpdateAvailableExtensions;
-(id)_availableExtensions;
-(id)composingContextForComposerExtension:(id)arg1 ;
-(id)newestMessageIdForComposerExtension:(id)arg1 ;
-(void)composerExtensionEligibilityDidChange:(id)arg1 ;
-(void)composerExtension:(id)arg1 didDismissVC:(id)arg2 ;
-(id)composerExtensionDidBeginSending:(id)arg1 ;
-(void)composerExtensionWillLeaveApp:(id)arg1 ;
-(void)setTypingStateListener:(id<MNTypingStateListener>)arg1 ;
-(id<MNComposerControlExtension>)composerControlExtension;
-(void)addLikeComposingListener:(id)arg1 ;
-(void)setUpWithComposingContext:(id)arg1 overrideExtensionProvider:(id)arg2 overrideControlExtensionProvider:(id)arg3 ;
-(void)updateWithComposingContext:(id)arg1 ;
-(void)setPlaceholderTextOverride:(NSString *)arg1 ;
-(void)setCanSendLike:(BOOL)arg1 ;
-(void)setCustomLikeEmoji:(NSString *)arg1 ;
-(NSString *)composerExtensionIdentifier;
-(void)setComposerExtensionTarget:(id)arg1 userInitiated:(BOOL)arg2 ;
-(void)tearDownComposerExtension;
-(BOOL)canDismissKeyboardInteractively;
-(void)setDisableComposing:(BOOL)arg1 ;
-(void)setDisableSending:(BOOL)arg1 ;
-(void)saveStickyComposerExtension;
-(void)restoreStickyComposerExtensionWithInitialExtensionTarget:(id)arg1 contextExtensionTarget:(id)arg2 ;
-(void)dismissDrawerWithCompletion:(/*^block*/id)arg1 ;
-(MNComposerDrawerListenerAnnouncer *)drawerListenerAnnouncer;
-(void)updateLayoutWithContext:(id)arg1 ;
-(BOOL)isNuxVisible;
-(BOOL)disableComposing;
-(BOOL)disableSending;
-(BOOL)isInputViewPresented;
-(BOOL)isPresentingTrayFullScreen;
-(BOOL)shouldIgnoreKeyboardFrameChange;
-(BOOL)isTextInputViewInitialized;
-(void)presentDrawerWithViewController:(id)arg1 drawerMode:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)canPresentDrawer;
-(void)minimizeDrawerWithCompletion:(/*^block*/id)arg1 ;
-(void)maximizeDrawerWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)isDoingLongPressMediaIntearaction;
-(id)tabViewForExtensionWithIdentifier:(id)arg1 includesOverflownTabs:(BOOL)arg2 ;
-(id<MNComposerExtension>)currentComposerExtension;
-(void)didBeginComposingLikeStickerWithType:(unsigned long long)arg1 maxDuration:(double)arg2 emoji:(id)arg3 ;
-(void)didCancelComposingLikeStickerTimedOut:(BOOL)arg1 ;
-(void)didEndComposingLikeStickerWithType:(unsigned long long)arg1 emoji:(id)arg2 sender:(id)arg3 ;
-(BOOL)_isSearching;
-(BOOL)_isSearchBarVisible;
-(void)_initComposeContainerView;
-(id)_trimmedText;
-(void)composerActionViewDidPressSend:(id)arg1 ;
-(void)composerActionViewDidPressMenu:(id)arg1 ;
-(void)mn_invalidateLayoutForView:(id)arg1 animated:(BOOL)arg2 ;
-(void)presentDrawerWithViewController:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)threadViewModelForComposerExtension:(id)arg1 ;
-(id)composerExtension:(id)arg1 didCommitSendingWithText:(id)arg2 attachment:(id)arg3 attribution:(id)arg4 clientTags:(id)arg5 extensibleMessageData:(id)arg6 sendingContextToken:(id)arg7 ;
-(void)composerExtensionDidCancelSending:(id)arg1 ;
-(void)composerExtensionNeedsTearDown:(id)arg1 ;
-(void)composerExtension:(id)arg1 willPresentVC:(id)arg2 ;
-(id<MNTypingStateListener>)typingStateListener;
-(MNComposerLayoutConfiguration *)layoutConfiguration;
-(void)composerExtensionDidSendRequest:(id)arg1 ;
-(void)_dismissPopover;
-(BOOL)primaryExtensionWithTypeIsSupported:(long long)arg1 ;
-(void)selectPrimaryExtensionWithType:(long long)arg1 initiator:(id)arg2 ;
-(void)composerExtensionDidSendAttachmentsWithKeyboardExpected:(id)arg1 ;
-(void)composerExtensionWillBeginLongPressMediaInteraction:(id)arg1 ;
-(void)composerExtensionDidEndLongPressMediaInteraction:(id)arg1 ;
-(id)primaryActionButtonForPrimaryExtensionType:(long long)arg1 ;
-(void)composerBadgingDidUpdateBadgeCount:(id)arg1 ;
-(void)composerExtension:(id)arg1 didSelectLightweightActionType:(id)arg2 ;
-(BOOL)composerSearchBarHasText;
-(void)composerExtension:(id)arg1 didSearchForQuery:(id)arg2 ;
-(void)composerExtension:(id)arg1 didOpenContentSearchWithPreviewViewControllers:(id)arg2 ;
-(void)composerExtensionDidCloseContentSearch:(id)arg1 ;
-(void)composerAutoCollapseMonitorShouldCollapse:(id)arg1 ;
-(void)dismissable:(id)arg1 didTriggerDismissWithSource:(long long)arg2 ;
-(void)presentableDidTriggerPresent:(id)arg1 ;
-(void)composerDrawerPresentationManagerDidPerformDeferredDismiss:(id)arg1 ;
-(void)composerDrawerPresentationManagerWillPerformDeferredDismiss:(id)arg1 ;
-(void)composerDrawerPresentationManager:(id)arg1 willPresentDrawerWithViewController:(id)arg2 animated:(BOOL)arg3 ;
-(void)composerDrawerPresentationManager:(id)arg1 willCompletePresentDrawerAnimated:(BOOL)arg2 ;
-(void)composerDrawerPresentationManager:(id)arg1 willCompleteDismissDrawerAnimated:(BOOL)arg2 ;
-(void)composerDrawerPresentationManager:(id)arg1 willDismissDrawerAnimated:(BOOL)arg2 ;
-(void)composerDrawerPresentationManager:(id)arg1 didPresentDrawerAnimated:(BOOL)arg2 ;
-(void)composerDrawerPresentationManager:(id)arg1 didDismissDrawerWithViewController:(id)arg2 animated:(BOOL)arg3 ;
-(void)composerDrawerPresentationManagerPrepareKeyboardAccessoryView:(id)arg1 ;
-(void)composerDrawerPresentationManager:(id)arg1 willUpdateFromDrawerMode:(long long)arg2 toDrawerMode:(long long)arg3 animated:(BOOL)arg4 ;
-(void)composerDrawerPresentationManager:(id)arg1 didUpdateFromDrawerMode:(long long)arg2 toDrawerMode:(long long)arg3 animated:(BOOL)arg4 ;
-(void)composerDrawerPresentationManager:(id)arg1 willAnimateDrawerVisible:(BOOL)arg2 ;
-(void)didParseSearchQuery:(id)arg1 ;
-(void)didParseBotMentionTriggerQuery:(id)arg1 ;
-(void)composerOverflowExtensionWillDisplayExtensionList:(id)arg1 ;
-(void)composerOverflowExtension:(id)arg1 presentDrawerWithViewController:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)composerOverflowExtensionDidDisplayExtensionList:(id)arg1 ;
-(void)composerOverflowExtension:(id)arg1 dismissDrawerWithCompletion:(/*^block*/id)arg2 ;
-(void)composerOverflowExtension:(id)arg1 didSelectExtension:(id)arg2 ;
-(void)composerOverflowExtensionDidBecomeActive:(id)arg1 ;
-(BOOL)composerExtensionCanSelectContent:(id)arg1 ;
-(void)composerExtensionWillSelectContent:(id)arg1 ;
-(void)composerExtension:(id)arg1 didSelectContent:(id)arg2 ;
-(void)presentKeyboard:(id)arg1 ;
-(void)dismissKeyboard:(id)arg1 ;
-(BOOL)isKeyboardPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForKeyboard:(id)arg1 ;
-(void)presentPopup:(id)arg1 ;
-(void)dismissPopup:(id)arg1 ;
-(BOOL)isPopupPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForPopup:(id)arg1 ;
-(void)presentTray:(id)arg1 ;
-(void)dismissTray:(id)arg1 ;
-(BOOL)isTrayPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForTray:(id)arg1 ;
-(void)composerExtensionTrayPresentationStrategyWillPresentKeyboard:(id)arg1 withKeyboardPresentationBlock:(/*^block*/id)arg2 ;
-(void)composerExtensionTrayPresentationStrategyWillDismissKeyboard:(id)arg1 withKeyboardDismissalBlock:(/*^block*/id)arg2 withInputViewToModalHostStackBlock:(/*^block*/id)arg3 ;
-(void)composerExtension:(id)arg1 didInsertStringAtCurrentCursor:(id)arg2 ;
-(void)composerExtensionDidDeleteCharacterBeforeCursor:(id)arg1 ;
-(void)composerExtensionDidUpdateTabBarItem:(id)arg1 ;
-(void)composerKeyboardExtension:(id)arg1 didSetInitialMessage:(id)arg2 overridesDraftMessage:(BOOL)arg3 ;
-(void)composerKeyboardExtensionNeedsReset:(id)arg1 ;
-(void)composerKeyboardExtension:(id)arg1 didSelectSubExtension:(id)arg2 ;
-(id)_textExtension;
-(void)_updateSendAndLikeButtonVisibility;
-(void)_handleLongPressGestureWithState:(long long)arg1 ;
-(id)_primaryExtensionsInSegmentedControl;
-(id)_segmentedControlPrimaryExtensionWithType:(long long)arg1 ;
-(void)_resizeComposerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)_performSelectionForComposerExtension:(id)arg1 selectedFromMoreTab:(BOOL)arg2 implicitPresentation:(BOOL)arg3 ;
-(void)_updateComposerTabBarItems;
-(id)_composerExtensionWithIdentifier:(id)arg1 ;
-(id)_dynamicComposerTabViewForExtension:(id)arg1 includesOverflowTabs:(BOOL)arg2 ;
-(id)_twoLineComposerTabViewForExtension:(id)arg1 includesOverflowTabs:(BOOL)arg2 ;
-(id)_allExtensionsIncludingKeyboardAndOverflow;
-(void)_updateEligibleExtensionsWithAvailableExtensions:(id)arg1 ;
-(id)_keyboardExtensions;
-(id)_primaryExtensionWithType:(long long)arg1 ;
-(void)_setUpDelegatesForComposerExtensions:(id)arg1 ;
-(void)_updatePrimaryExtensionActionButtonsWithExtensions:(id)arg1 ;
-(void)_updateLayoutConfiguration;
-(void)_updateExtensionOrder:(id)arg1 ;
-(void)_updateEligibleExtensionsIfNeeded;
-(id)_expressionExtensionIdentifierForExtensionIdentifier:(id)arg1 ;
-(long long)_lastActiveExpressionPrimaryExtensionType;
-(void)_prepareTextViewDelayed;
-(void)_initComposeView;
-(void)_initComposerTabBar;
-(void)_updateComposerControlsView;
-(void)_handleTextViewFocus;
-(void)_windowDidBecomeKey:(id)arg1 ;
-(void)_handleTextInputCurrentInputModeDidChangeNotification:(id)arg1 ;
-(void)_startViewObservation;
-(void)_updateComposeViewIfNeeded;
-(void)_setNeedsApplyComposerExtension;
-(void)setReadyForKeyboardPresentation:(BOOL)arg1 ;
-(void)_dismissMoreDrawerViewControllerWithCompletion:(/*^block*/id)arg1 ;
-(void)_layoutDrawerIfNeeded;
-(void)_positionPopoverController;
-(void)_showTourIfNeeded;
-(void)_showDrawerBounceIfNeeded;
-(void)_showCameraExtensionArtPromoTooltipIfNeeded;
-(void)endBouncingMoreDrawer;
-(void)_stopViewObservation;
-(void)_updateDrawerContentInsets;
-(void)_updateMaxNumberOfLinesForOrientation:(long long)arg1 ;
-(void)_updateSendAndLikeButton;
-(void)setTransitioningToNewSize:(BOOL)arg1 ;
-(void)_cancelTextViewPreparation;
-(void)_prepareTextView;
-(void)_updateComposeViewAttributedText;
-(void)_updateTextInputContextIdentifier;
-(void)_setExtensionProvider:(id)arg1 ;
-(void)_setControlExtensionProvider:(id)arg1 ;
-(void)_initExtensionOverflowStrategyIfNeeded;
-(void)_loadComposerExtensionOrder;
-(void)setComposingContext:(id<MNComposingContext>)arg1 ;
-(void)_setUpExtensionSegmentedControlCoordinatorIfNeeded;
-(void)_endComposerBarReparenting;
-(BOOL)_setComposerExtension:(id)arg1 withInitiator:(id)arg2 implicitPresentation:(BOOL)arg3 ;
-(void)_updateTypingLagTracker;
-(void)_enableSendAndLikeButton;
-(void)setSendAndLikeButtonEnabled:(BOOL)arg1 ;
-(void)_tearDownExtensionSegmentedControlCoordinatorIfNeeded;
-(void)_setSearchMode:(long long)arg1 ;
-(void)_setText:(id)arg1 shouldNotifyDelegate:(BOOL)arg2 ;
-(void)_textDidChangeShouldNotifyDelegate:(BOOL)arg1 ;
-(BOOL)_hasNonEmptyText;
-(BOOL)_isComposeViewVisible;
-(void)_updateContainerViewUserInteraction;
-(void)_updateContainerViewTintColor;
-(void)_updateComposingContextForExtensions;
-(void)_presentInputView:(id)arg1 ;
-(void)_beginUpdatingKeyboard;
-(void)_endUpdatingKeyboard;
-(void)_initInputContainerViewIfNeeded;
-(void)_updateAssistantItemsWithInputView:(id)arg1 ;
-(void)_matchComposerTrayHeightIfNeeded;
-(id)_analyticsExtrasWith:(id)arg1 ;
-(void)_setTextInputHasExplicitFocus:(BOOL)arg1 ;
-(void)_forceReapplyComposerExtension;
-(void)_updateComposerOverflowBadgeCount;
-(void)_updateComposerBarModeAnimated:(BOOL)arg1 ;
-(long long)_getComposerBarMode;
-(void)_setComposerBarMode:(long long)arg1 animated:(BOOL)arg2 ;
-(void)_updateComposeViewPlaceholder;
-(void)_showSearchPreviews;
-(void)_presentComposerControlExtensionBannerView;
-(void)_dismissComposerControlExtensionBannerView;
-(BOOL)_setComposerExtension:(id)arg1 withInitiator:(id)arg2 implicitPresentation:(BOOL)arg3 force:(BOOL)arg4 ;
-(id)_applicableComposerExtensionFor:(id)arg1 implicitPresentation:(BOOL)arg2 ;
-(BOOL)_setCurrentComposerExtensionAndNotifyDelegateIfChanged:(id)arg1 withInitiator:(id)arg2 force:(BOOL)arg3 ;
-(void)_updateComposerTabBarSelection;
-(void)_applyCurrentComposerExtensionIfPossible;
-(BOOL)_canApplyComposerExtension;
-(void)_applyCurrentComposerExtension;
-(void)_logSelectionForComposerExtension:(id)arg1 selectedFromMoreTab:(BOOL)arg2 ;
-(BOOL)_isComposerExtensionVisibleInTabBar:(id)arg1 ;
-(BOOL)_canPresentComposerExtension:(id)arg1 ;
-(void)_dismissTooltipIfNeeded;
-(void)_updateSearchBarPlaceholder;
-(void)_transitionFromPresentationStrategy:(id)arg1 toPresentationStrategy:(id)arg2 ;
-(void)_updateComposerState;
-(void)_dismissInputView;
-(BOOL)_isKeyboardPresented;
-(BOOL)_isDefaultInputViewPresented;
-(BOOL)_isTrayPresentedAsCustomInput:(id)arg1 ;
-(BOOL)_isTrayPresentedInModalHostStack:(id)arg1 ;
-(void)_updateComposerBarMode;
-(void)_presentDrawerWithViewController:(id)arg1 drawerMode:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)_dismissDrawerWithCompletion:(/*^block*/id)arg1 ;
-(void)_moveTrayViewFromInputViewToModalHostStack;
-(void)_updateModalPresentationView;
-(BOOL)_shouldAnimateKeyboardDismissal;
-(void)_dismissFullScreenTrayComposerAnimated:(BOOL)arg1 withKeyboardDismissalBlock:(/*^block*/id)arg2 withInputViewToModalHostStackBlock:(/*^block*/id)arg3 ;
-(void)_moveTrayViewFromModalHostStackToInputView;
-(CGRect)_modalPresentatationBounds;
-(void)_moveTrayViewWithBlock:(/*^block*/id)arg1 ;
-(void)_updateSendAndLikeButtonEnabledState;
-(BOOL)_actionButtonEnabled:(long long)arg1 ;
-(BOOL)_hasNonEmptyTextAndVisible;
-(BOOL)_menuToggleEnabled;
-(void)_updateSendAndLikeButtonVisibilityAnimated:(BOOL)arg1 ;
-(long long)_actionButtonOption;
-(void)_updateHawtLikeNux;
-(void)_updateLocaleSpecificComposeViewPlaceholder;
-(NSString *)placeholderTextOverride;
-(id)_getCurrentComposerExtension;
-(void)_updateInputFocusGestureRecognizer;
-(void)_updateComposerTabBarTapTarget;
-(void)_updateTextViewCaretVisibility;
-(void)_updateContentSearchMode;
-(void)setLayoutConfiguration:(MNComposerLayoutConfiguration *)arg1 ;
-(void)_applyComposerLayoutConfiguration;
-(void)_updateComposeViewContentEdgeInsets;
-(void)_updateSearchBar;
-(void)_showKeyboardIfOverflowExtensionEmpty;
-(void)_togglePrimaryExtensionWithType:(long long)arg1 withDismissSource:(long long)arg2 ;
-(void)_clearSearchBarText;
-(void)_composerActionViewDidPressSend;
-(void)_composerActionViewDidPressMenu;
-(void)_toggleExtension:(id)arg1 withDismissSource:(long long)arg2 ;
-(void)_checkWillPresentVCAndResignFirstResponder:(id)arg1 ;
-(void)_updateCurrentComposerExtension;
-(void)_updateComposerBarForDrawerVisible:(BOOL)arg1 animateLeftButton:(BOOL)arg2 ;
-(void)_beginComposerBarReparenting;
-(void)_setNeedsDrawerLayout;
-(void)beginBouncingMoreDrawer;
-(void)_dismissDrawerWithSource:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_presentExistingDrawerViewControllerWithDrawerMode:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_setupContentSearchMode;
-(void)_setupSearchBarIfNeeded;
-(void)_tearDownContentSearchMode;
-(BOOL)_textViewShouldBeginEditing;
-(void)_textViewDidBeginEditing;
-(BOOL)_textViewShouldEndEditing;
-(void)_textViewDidEndEditing;
-(id)_didCommitSendingWithText:(id)arg1 attachment:(id)arg2 attribution:(id)arg3 clientTags:(id)arg4 extensibleMessageData:(id)arg5 sendingContextToken:(id)arg6 loggingBlock:(/*^block*/id)arg7 ;
-(BOOL)_isViewVisibleInWindow;
-(BOOL)_isUpdatingKeyboard;
-(BOOL)_isKeyboardExtensionActiveWithSystemKeyboard;
-(void)_startTypingLagTrackerIfNeeded;
-(void)_stopTypingLagTrackerIfNeeded;
-(id)typingLagTracker;
-(void)_updateComposeViewForSearchMode;
-(void)_updateComposerPreviewView;
-(void)_logPreviewSearchResultNumberOfLoadedContents;
-(void)_hideSearchPreviews;
-(BOOL)_applyAutocorrectWithoutResetingKeyboard;
-(void)_resetKeyboard;
-(void)_resetComposeViewText;
-(void)_sendTextMessage;
-(void)_temporarilyDisableLikeSendUserInteraction;
-(void)_addChildViewControllerToParent:(id)arg1 ;
-(void)_removeChildViewControllerFromParent:(id)arg1 ;
-(void)_didPressSend;
-(void)_hardwareKeyboardDidPressSend;
-(void)_hardwareKeyboardNewline;
-(void)_resignFirstResponderIfNecessary;
-(void)_updateModalPresentationViewSize;
-(void)_updateModalPresentationViewInsetsWithKeyboardFrame:(CGRect)arg1 ;
-(void)_notifyComposerTextDidChange:(id)arg1 ;
-(void)bannerViewPresenter:(id)arg1 didDismissBannerView:(id)arg2 animated:(BOOL)arg3 ;
-(void)bannerViewPresenter:(id)arg1 didPresentBannerView:(id)arg2 animated:(BOOL)arg3 ;
-(void)bannerViewPresenter:(id)arg1 willDismissBannerView:(id)arg2 animated:(BOOL)arg3 ;
-(void)bannerViewPresenter:(id)arg1 willPresentBannerView:(id)arg2 animated:(BOOL)arg3 ;
-(void)composerControlExtensionSettingStateDidChange:(id)arg1 ;
-(void)composerControlExtensionIconDidPress:(id)arg1 ;
-(void)composerControlExtensionStateDidChange:(id)arg1 source:(id)arg2 loggingBlock:(/*^block*/id)arg3 ;
-(void)composerDynamicContainerView:(id)arg1 didTapButtonWithType:(long long)arg2 ;
-(void)composerDynamicContainerView:(id)arg1 didUpdateComposerBarModeAnimated:(BOOL)arg2 ;
-(BOOL)composerExtensionShouldBeginEditing:(id)arg1 ;
-(void)composerExtensionDidBeginEditing:(id)arg1 ;
-(BOOL)composerExtensionShouldEndEditing:(id)arg1 ;
-(void)composerExtensionDidEndEditing:(id)arg1 ;
-(void)presentPopover:(id)arg1 ;
-(void)dismissPopover:(id)arg1 ;
-(BOOL)isPopoverPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForPopover:(id)arg1 ;
-(void)presentModal:(id)arg1 ;
-(BOOL)isModalPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForModal:(id)arg1 ;
-(void)presentDrawer:(id)arg1 ;
-(void)dismissDrawer:(id)arg1 ;
-(BOOL)isDrawerPresented:(id)arg1 ;
-(BOOL)requiresTextEditingForDrawer:(id)arg1 ;
-(id)bannerViewPresenterForComposerExtension:(id)arg1 ;
-(void)composerOverflowExtension:(id)arg1 presentDrawerWithViewController:(id)arg2 drawerMode:(long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)composerPlatformAppsExtension:(id)arg1 didSelectExtension:(id)arg2 ;
-(void)composerPlatformAppsExtensionDidBecomeActive:(id)arg1 ;
-(void)composerPlatformAppsExtensionDidDisplayExtensionList:(id)arg1 ;
-(void)composerPreviewViewController:(id)arg1 didSelectContent:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(void)composerPreviewViewController:(id)arg1 didLoadNumberOfContents:(unsigned long long)arg2 elapsedTime:(double)arg3 ;
-(void)composerPreviewViewController:(id)arg1 didLoadContentAppID:(id)arg2 numberOfBytes:(unsigned long long)arg3 elapsedTime:(double)arg4 ;
-(void)composerPreviewViewController:(id)arg1 didLoadFirstPageWithElapsedTime:(double)arg2 ;
-(void)composerPreviewViewControllerDidUpdateVisibility:(id)arg1 ;
-(void)composerPreviewViewControllerNeedsResize:(id)arg1 ;
-(void)composerTabController:(id)arg1 didSelectTabAtIndex:(long long)arg2 ;
-(BOOL)composerTabController:(id)arg1 shouldSelectTabAtIndex:(long long)arg2 ;
-(void)composerTabControllerDidSetTabBarItems:(id)arg1 ;
-(void)composerTabControllerDidChangeTabWidth:(id)arg1 ;
-(BOOL)composerTourControllerShouldShowTooltip:(id)arg1 ;
-(void)composerTourController:(id)arg1 didSelectPrimaryExtensionWithType:(long long)arg2 ;
-(void)composerTourController:(id)arg1 didShowTooltipWithIdentifier:(id)arg2 ;
-(BOOL)composerTourController:(id)arg1 shouldSkipTooltipWithIdentifier:(id)arg2 ;
-(BOOL)hawtLikeNuxControllerCanPresentNux:(id)arg1 ;
-(void)hawtLikeNuxControllerWillShowNux:(id)arg1 ;
-(void)hawtLikeNuxControllerDidHideNux:(id)arg1 ;
-(BOOL)likeStickerControllerShouldDisableHawtLikes:(id)arg1 ;
-(void)mentionTypeaheadViewControllerDidUpdateVisibility:(id)arg1 ;
-(void)mentionTypeaheadViewControllerDidUpdateViewContent:(id)arg1 ;
-(void)mentionTypeaheadViewController:(id)arg1 didSelectBotMentionCommandText:(id)arg2 ;
-(void)mentionTypeaheadViewController:(id)arg1 didSelectMentionWithChange:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)mentionTypeaheadViewControllerComposingContext:(id)arg1 ;
-(id)mentionTypeaheadViewControllerThreadParticipantsNicknames:(id)arg1 ;
-(void)composerExtensionSegmentedControlCoordinatorNeedsResize:(id)arg1 ;
-(void)composerExtensionSegmentedControlCoordinator:(id)arg1 didSelectExtension:(id)arg2 ;
-(void)_showKeyboard;
-(void)composerRecentsExtensionDidSelectGetApps:(id)arg1 ;
-(void)composerLightweightActionExtensionWillSendLightweightActionType:(id)arg1 ;
-(void)_showDrawerBounceNow;
-(BOOL)canSendLike;
-(BOOL)transitioningToNewSize;
-(BOOL)needsApplyExtension;
-(void)setNeedsApplyExtension:(BOOL)arg1 ;
-(BOOL)readyForKeyboardPresentation;
-(id<MNComposerExtensionOverflowStrategy>)extensionOverflowStrategy;
-(void)setExtensionOverflowStrategy:(id<MNComposerExtensionOverflowStrategy>)arg1 ;
-(id<MNComposingContext>)composingContext;
-(id)initWithInjector:(id)arg1 ;
-(void)keyboardObserver:(id)arg1 keyboardWillShowWithBeginFrame:(CGRect)arg2 endFrame:(CGRect)arg3 duration:(double)arg4 curve:(long long)arg5 ;
-(void)keyboardObserverKeyboardDidShow:(id)arg1 ;
-(void)keyboardObserverKeyboardDidHide:(id)arg1 ;
-(void)keyboardObserver:(id)arg1 keyboardFrameWillChangeWithBeginFrame:(CGRect)arg2 endFrame:(CGRect)arg3 duration:(double)arg4 curve:(long long)arg5 ;
-(void)keyboardObserver:(id)arg1 keyboardFrameDidChangeWithBeginFrame:(CGRect)arg2 endFrame:(CGRect)arg3 duration:(double)arg4 curve:(long long)arg5 ;
-(void)fb_popoverControllerWillDismissPopover:(id)arg1 withInteraction:(unsigned long long)arg2 ;
-(void)mn_viewWillLayoutSubviewsDuringAppearing;
-(UIViewController *)modalPresentationViewController;
-(UIView *)modalPresentationView;
-(NSString *)customLikeEmoji;
-(void)setDelegate:(id<MNComposeViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNComposeViewControllerDelegate>)delegate;
-(BOOL)shouldAutorotate;
-(id)keyCommands;
-(void)loadView;
-(FBStringWithRedactedDescription *)text;
-(void)setText:(FBStringWithRedactedDescription *)arg1 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)viewWillLayoutSubviews;
-(void)viewDidLayoutSubviews;
-(UIView*<FBTextInputView>)textInputView;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewDidLoad;
-(void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(id)childViewControllerForStatusBarStyle;
-(BOOL)hasContent;
-(BOOL)showsKeyboard;
-(void)searchBar:(id)arg1 textDidChange:(id)arg2 ;
-(void)searchBarCancelButtonClicked:(id)arg1 ;
-(void)setShowsKeyboard:(BOOL)arg1 ;
-(MNComposerLayoutContext *)layoutContext;
-(void)setLayoutContext:(MNComposerLayoutContext *)arg1 ;
-(unsigned long long)appearanceState;
-(void)tearDown;
-(void)addListener:(id)arg1 ;
-(UIColor *)themeColor;
-(CGRect)keyboardFrame;
-(void)setKeyboardFrame:(CGRect)arg1 ;
-(void)dismissModal:(id)arg1 ;
@end

