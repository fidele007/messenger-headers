/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:28:00 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FBSharedFramework/FBClassInjectable.h>
#import <Messenger/MNMessageLiveLocationThreadSummaryListener.h>
#import <Messenger/MNUserSessionObserving.h>
#import <Messenger/MNPendingThreadRequestListening.h>
#import <FBSharedFramework/FBBackgroundingListener.h>
#import <FBSharedFramework/MNServiceControllable.h>

@protocol OS_dispatch_queue, MNUserSessionObserving, MNPendingThreadRequestListening, FBBackgroundingListener;
@class NSObject, MNMessageLiveLocationOutgoingManagerInjector, MNMessageLiveLocationLocationManager, MNMessageLiveLocationUpdaterEntryMap, MNMessageLiveLocationOutgoingListenerAnnouncer, MNMessageLiveLocationAnalyticsLogger, MNMessageLiveLocationUpdaterEventsLogHandler, NSNotificationCenter, NSDictionary, NSString;

@interface MNMessageLiveLocationOutgoingManager : NSObject <FBClassInjectable, MNMessageLiveLocationThreadSummaryListener, MNUserSessionObserving, MNPendingThreadRequestListening, FBBackgroundingListener, MNServiceControllable> {

	NSObject*<OS_dispatch_queue> _queue;
	MNMessageLiveLocationOutgoingManagerInjector* _injector;
	MNMessageLiveLocationLocationManager* _locationManager;
	MNMessageLiveLocationUpdaterEntryMap* _entryMap;
	MNMessageLiveLocationOutgoingListenerAnnouncer* _outgoingAnnouncer;
	MNMessageLiveLocationAnalyticsLogger* _analyticsLogger;
	MNMessageLiveLocationUpdaterEventsLogHandler* _eventLogHandler;
	id<MNUserSessionObserving> _dispatchedSelfUserSessionObserver;
	id<MNPendingThreadRequestListening> _dispatchedSelfPendingThreadListener;
	id<FBBackgroundingListener> _dispatchedSelfBackgroundingListener;
	NSNotificationCenter* _notificationCenter;
	NSDictionary* _pendingEntryMap;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSDictionary * pendingEntryMap;                    //@synthesize pendingEntryMap=_pendingEntryMap - In the implementation block
+(Class)injectorClass;
-(void)willCreateThreadForPendingThread:(id)arg1 ;
-(void)didCreateThreadWithKey:(id)arg1 forPendingThread:(id)arg2 ;
-(void)didFailToCreateThreadForPendingThread:(id)arg1 error:(id)arg2 ;
-(void)didCancelCreatingThreadForPendingThread:(id)arg1 ;
-(void)willRetryCreatingThreadForPendingThread:(id)arg1 ;
-(void)didScheduleSendingMessage:(id)arg1 toPendingThread:(id)arg2 ;
-(void)didCancelSendingMessage:(id)arg1 fromPendingThread:(id)arg2 ;
-(void)willEndUserSession;
-(void)didEndUserSession;
-(BOOL)isSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(void)stopSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 source:(long long)arg3 ;
-(BOOL)isSendingLocationUpdatesForThreadKey:(id)arg1 ;
-(BOOL)isSendingLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 ;
-(id)expirationTimeForLocationUpdatesForThreadKey:(id)arg1 ;
-(id)expirationTimeForLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 ;
-(void)startSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 duration:(double)arg3 ;
-(void)startSendingLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 duration:(double)arg2 ;
-(void)stopSendingLocationUpdatesForThreadKey:(id)arg1 source:(long long)arg2 ;
-(void)stopSendingLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 source:(long long)arg2 ;
-(void)updatedLiveLocationForThreadKey:(id)arg1 updatedLiveLocation:(id)arg2 allLiveLocations:(id)arg3 ;
-(void)purgedAllThreadSummaries;
-(void)_didReceiveLocationManagerUpdateWithLocation:(id)arg1 ;
-(void)_didReceiveLocationManagerError:(id)arg1 ;
-(void)_appWillTerminate;
-(id)_nonExpiredThreadKeyToOfflineThreadingIdMap;
-(void)_updatedLiveLocationAuthoredByViewerForThreadKey:(id)arg1 updatedLiveLocation:(id)arg2 allLiveLocations:(id)arg3 ;
-(void)_logUserLocationPermissionsForTodayIfNecessary;
-(void)_restoreFromDiskAndResumeLiveLocationsIfNecessary;
-(NSDictionary *)pendingEntryMap;
-(void)_removeEntryFromPendingMapWithOfflineThreadingId:(id)arg1 ;
-(void)_startSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 duration:(double)arg3 ;
-(void)_stopSendingLocationUpdatesForAllThreadKeysWithSource:(long long)arg1 ;
-(void)_resumeLiveLocationsIfNecessary;
-(void)_startSendingLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 duration:(double)arg2 ;
-(void)_stopSendingLocationUpdatesForThreadKey:(id)arg1 source:(long long)arg2 ;
-(void)_stopSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 source:(long long)arg3 ;
-(void)_stopSendingLocationUpdatesForPendingThreadWithOfflineThreadingId:(id)arg1 source:(long long)arg2 ;
-(BOOL)_shouldLogLocationPermissionsForToday;
-(void)_createLocationManagerIfNecessary;
-(void)_resumeSendingLocationUpdatesForThreadKey:(id)arg1 entry:(id)arg2 ;
-(void)_cancelAllSharesIfWeDontHaveAlwaysLocationPermissionAnymore;
-(BOOL)_shouldSendLocationUpdates;
-(id)_nonExpiredThreadKeys;
-(void)_locationSendMutationFailedWithError:(id)arg1 ;
-(void)_locationSendMutationDidSucceed;
-(void)_liveLocationTimerElapsedForThreadKey:(id)arg1 ;
-(void)setPendingEntryMap:(NSDictionary *)arg1 ;
-(void)_stopSendingLocationUpdatesForEntry:(id)arg1 threadKey:(id)arg2 source:(long long)arg3 ;
-(void)_stopRequestingLocationUpdatesIfNecessary;
-(void)_stopMutationDidCompleteWithResult:(id)arg1 entry:(id)arg2 threadKey:(id)arg3 source:(long long)arg4 ;
-(void)handleIdle;
-(id)initWithInjector:(id)arg1 ;
-(void)didEnterForeground;
-(void)stop;
-(void)start:(id)arg1 ;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)didEnterBackground;
@end

