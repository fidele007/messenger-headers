/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:59 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBAudioProcessor.h>

@class NSMutableArray, NSLock, NSString;

@interface FBAudioFilterSoundMixer : NSObject <FBAudioProcessor> {

	shared_ptr<facebook::audiofiltercore::AudioInputMixer<short> >* _mixer;
	int _sampleRate;
	NSMutableArray* _dspConfigurations;
	NSLock* _dspConfigurationLock;
	vector<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > >* _dspProcessors;
	shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<short, float> >* _inputConverter;
	shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<float, short> >* _outputConverter;
	shared_ptr<facebook::audiofiltercore::VolumeLevelAudioTransform<short> >* _volumeTransform;
	BOOL _isMixingStarted;
	float _volume;
	/*^block*/id _samplesReady;

}

@property (assign,nonatomic) float volume;                          //@synthesize volume=_volume - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) id samplesReady;                         //@synthesize samplesReady=_samplesReady - In the implementation block
-(void)processAudioSamples:(const short*)arg1 count:(unsigned long long)arg2 ;
-(void)setSamplesReady:(id)arg1 ;
-(void)configureSampleRate:(int)arg1 ;
-(id)samplesReady;
-(void)addAudioInput:(shared_ptr<facebook::audiofiltercore::AudioInput<short> >*)arg1 ;
-(void)removeAudioInput:(shared_ptr<facebook::audiofiltercore::AudioInput<short> >*)arg1 ;
-(void)addAudioProcessor:(id)arg1 ;
-(void)_writeSamples:(const short*)arg1 count:(unsigned long long)arg2 ;
-(void)_addAudioSourceToMixer:(id)arg1 ;
-(id)init;
-(void)flush;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(void)tearDown;
@end

