/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:59 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <FBSharedFramework/FBMQTTNetworkStatusChangedListening.h>
#import <FBSharedFramework/FBMQTTChannelCoordinating.h>

@protocol OS_dispatch_queue;
@class FBMQTTClientCapabilities, FBMQTTChannelEndpointCapabilities, FBMQTTNetworkStatusMonitor, JSONDecoder, NSObject, FBMQTTConfigurations, FBMQTTClientConfiguration, FBMQTTConnectionConfiguration, NSDictionary, NSMapTable, FBMQTTCredentials, NSString, NSMutableArray;

@interface FBMQTTChannelCoordinatorAdapter : NSObject <FBMQTTNetworkStatusChangedListening, FBMQTTChannelCoordinating> {

	FBMQTTClientCapabilities* _clientCapabilities;
	FBMQTTChannelEndpointCapabilities* _endpointCapabilities;
	FBMQTTNetworkStatusMonitor* _networkStatusMonitor;
	JSONDecoder* _jsonDecoder;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _jsonEncodingQueue;
	NSObject*<OS_dispatch_queue> _jsonDecodingQueue;
	shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor>* _executor;
	shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor>* _callbackExecutor;
	shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor>* _inlineExecutor;
	shared_ptr<FBMQTTChannelEventLogger>* _eventLogger;
	shared_ptr<FBMQTTChannelConnectionStateObserver>* _connectionStateObserver;
	shared_ptr<FBMQTTChannelConnectEventObserver>* _connectEventObserver;
	shared_ptr<FBMQTTChannelPublishEventObserver>* _publishEventObserver;
	shared_ptr<FBMQTTChannelSubscribeEventObserver>* _subscribeEventObserver;
	shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy>* _coordinator;
	shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics>* _channelAnalytics;
	shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics>* _connectSchedulerAnalytics;
	atomic<FBMQTTChannelCoordinatorState> _state;
	FBMQTTConfigurations* _config;
	FBMQTTClientConfiguration* _clientConfig;
	FBMQTTConnectionConfiguration* _connectionConfig;
	/*^block*/id _showOnlineInForegroundBlock;
	/*^block*/id _credentialsAvailableBlock;
	/*^block*/id _credentialsFetcherBlock;
	/*^block*/id _userAgentFormaterBlock;
	NSDictionary* _appSpecificInfo;
	NSMapTable* _listenerToTokenMap;
	FBMQTTCredentials* _userCredentials;
	NSString* _userAgent;
	NSMutableArray* _preStartListeners;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_startWithAvailableCredentials;
-(void)_addPreStartListeners:(id)arg1 ;
-(vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener> >, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener> > > >*)_addListeners:(id)arg1 ;
-(void)_removePreStartListeners:(id)arg1 ;
-(vector<unsigned long long, std::__1::allocator<unsigned long long> >*)_removeListeners:(id)arg1 ;
-(void)_startIfReady;
-(id)_flushPreStartListeners;
-(void)addPublisher:(id)arg1 ;
-(void)addListeners:(id)arg1 ;
-(void)removeListeners:(id)arg1 ;
-(void)networkStatusChangedFrom:(long long)arg1 to:(long long)arg2 ;
-(void)setInBackground:(BOOL)arg1 ;
-(id)endpointCapabilities;
-(id)mqttSessionIdForAnalytics;
-(id)connectionConfig;
-(void)configureWithClientConfig:(id)arg1 customConnectionConfiguration:(id)arg2 clientCapabilities:(unsigned long long)arg3 endpointCapabilities:(unsigned long long)arg4 appSpecificInfo:(id)arg5 showOnLineOnForegroundBlock:(/*^block*/id)arg6 credentialsAvailableBlock:(/*^block*/id)arg7 credentialsFetcherBlock:(/*^block*/id)arg8 userAgentFormatterBlock:(/*^block*/id)arg9 analyticsLogger:(id)arg10 ;
-(void)resetConnectionConfig:(id)arg1 ;
-(void)credentialsDidBecomeAvailable;
-(void)sendMQTTKeepAlive;
-(long long)state;
-(id)initWithQueue:(id)arg1 ;
-(void)stop;
-(void)start;
-(id)config;
-(unsigned long long)clientCapabilities;
-(BOOL)isConnected;
-(id)clientConfig;
-(void)addListener:(id)arg1 ;
-(BOOL)isStarted;
-(void)removeListener:(id)arg1 ;
-(BOOL)isReachable;
-(long long)networkStatus;
-(void)_startObserving;
-(void)_stopObserving;
-(id)debugInfo;
@end

