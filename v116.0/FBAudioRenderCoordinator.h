/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:59 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@class FBAudioFilterSoundMixer, NSNumber, NSLock, NSMutableDictionary;

@interface FBAudioRenderCoordinator : NSObject {

	FBAudioFilterSoundMixer* _mixer;
	int _channelCount;
	int _sampleRate;
	double _currentTimestamp;
	BOOL _isMonoCanonical;
	NSNumber* _lastSampleRate;
	opaqueCMFormatDescriptionRef _audioDescriptionRef;
	/*^block*/id _handler;
	BOOL _processorConfigured;
	BOOL _renderStarted;
	NSLock* _ambientAudioLock;
	NSMutableDictionary* _ambientAudioMap;
	map<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > >* _ambientAudioSourceMap;
	BOOL _microphoneDisabled;

}

@property (assign,nonatomic) BOOL microphoneDisabled;              //@synthesize microphoneDisabled=_microphoneDisabled - In the implementation block
+(id)newWithSampleReadyHandler:(/*^block*/id)arg1 ;
-(void)setMicrophoneDisabled:(BOOL)arg1 ;
-(void)processMicrophoneAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)addAmbientSound:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 audioURL:(id)arg2 volume:(float)arg3 audioProcessors:(id)arg4 ;
-(void)addTriggeredSound:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 audioURL:(id)arg2 volume:(float)arg3 isAmbient:(BOOL)arg4 audioProcessors:(id)arg5 ;
-(void)removeAmbientSound:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(void)setupAudioProcessors:(id)arg1 ;
-(void)setMicrophoneVolume:(float)arg1 ;
-(BOOL)microphoneDisabled;
-(void)_produceAudioSamples:(const short*)arg1 count:(unsigned long long)arg2 ;
-(id)initWithSampleReadyHandler:(/*^block*/id)arg1 ;
-(void)_addAudioSourceConfigureToMixer:(id)arg1 ;
-(void)_removeAudioSourceConfigureFromMixer:(id)arg1 ;
-(BOOL)_canProcessAudioBuffer;
-(void)_processAudioDataFromAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)dealloc;
-(void)reset;
@end

