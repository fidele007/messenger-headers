/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:59 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FBSharedFramework/MNSecureMessagingRegisteredDeviceStatusChangeListening.h>
#import <Messenger/MNSecureMessagingThreadEstablishingDelegate.h>

@protocol MNSecureMessagingSendHandling, MNSecureMessagingSingleDeviceCryptoEngine, MNSecureMessagingMultiDeviceCryptoEngine, MNSecureMessageSendListening, MNSecureMessageSendPreparationListening, MNSecureMessagingThreadEstablishing, OS_dispatch_queue;
@class MNSecureMessagingAddress, MNSecureMessagingPacketFactory, MNSecureThreadUpdater, MNSecureMessagingErrorHandler, MNSecureOutgoingMessageQueue, MNSecureMessagingSessionCryptoStateStore, MNSecureMessagingSendPreconditionsChecker, NSObject, NSString;

@interface MNSecureMessagingOutgoingMessageCoordinator : NSObject <MNSecureMessagingRegisteredDeviceStatusChangeListening, MNSecureMessagingThreadEstablishingDelegate> {

	MNSecureMessagingAddress* _localAddress;
	id<MNSecureMessagingSendHandling> _sendHandler;
	MNSecureMessagingPacketFactory* _factory;
	MNSecureThreadUpdater* _threadUpdater;
	id<MNSecureMessagingSingleDeviceCryptoEngine> _singleDeviceCryptoEngine;
	id<MNSecureMessagingMultiDeviceCryptoEngine> _multiDeviceCryptoEngine;
	id<MNSecureMessageSendListening> _sendListener;
	id<MNSecureMessageSendPreparationListening> _sendPreparationListener;
	MNSecureMessagingErrorHandler* _errorHandler;
	MNSecureOutgoingMessageQueue* _pendingMessageSendQueue;
	MNSecureMessagingSessionCryptoStateStore* _cryptoStateStore;
	id<MNSecureMessagingThreadEstablishing> _threadEstablisher;
	MNSecureMessagingSendPreconditionsChecker* _preconditionChecker;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)registeredPrimaryDeviceStatusDidChangeTo:(long long)arg1 from:(long long)arg2 ;
-(void)registeredDeviceStatusDidChangeTo:(long long)arg1 from:(long long)arg2 ;
-(void)didEstablishThreadWithThreadKey:(id)arg1 threadSummary:(id)arg2 cryptoState:(id)arg3 onlyDevice:(id)arg4 ;
-(void)didFailToEstablishThreadWithThreadKey:(id)arg1 error:(id)arg2 ;
-(void)didEstablishThreadWithThreadKey:(id)arg1 threadSummary:(id)arg2 multiCryptoState:(id)arg3 ;
-(void)retryMessage:(id)arg1 toDevice:(id)arg2 ;
-(id)_encryptedPayload:(id)arg1 withMultiCryptoState:(id)arg2 threadWithKey:(id)arg3 ;
-(id)_encryptedPayload:(id)arg1 toSingleDevice:(id)arg2 withCryptoState:(id)arg3 ;
-(void)_processEncryptionResult:(id)arg1 forSend:(id)arg2 andThread:(id)arg3 plaintextPacket:(id)arg4 ;
-(void)_failQueuedMessagesForThreadWithKey:(id)arg1 error:(id)arg2 ;
-(void)_sendAllQueuedMessages;
-(void)_failAllQueuedMessagesWithError:(id)arg1 ;
-(id)initWithLocalAddress:(id)arg1 preconditionChecker:(id)arg2 sendHandler:(id)arg3 packetFactory:(id)arg4 threadUpdater:(id)arg5 singleDeviceCryptoEngine:(id)arg6 multiDeviceCryptoEngine:(id)arg7 sendListener:(id)arg8 sendPreperationListener:(id)arg9 errorHandler:(id)arg10 pendingMessageQueue:(id)arg11 cryptoStateStore:(id)arg12 threadEstablisher:(id)arg13 queue:(id)arg14 ;
-(void)sendMessage:(id)arg1 ;
-(void)_sendMessage:(id)arg1 ;
@end

