/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:56 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@interface FBInfiniteHScrollComponentState : NSObject {

	vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >* _leftEdges;
	vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >* _rightEdges;
	FBInfiniteHScrollCursorInformation _tailCursorInformation;
	FBInfiniteHScrollCursorInformation _headCursorInformation;

}
-(id)initWithTailCursor:(id)arg1 headCursor:(id)arg2 hasNextPage:(BOOL)arg3 hasPreviousPage:(BOOL)arg4 ;
-(const vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)rightEdges;
-(const vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)leftEdges;
-(FBInfiniteHScrollCursorInformation)tailCursorInfo;
-(FBInfiniteHScrollCursorInformation)headCursorInfo;
-(id)updatedStateForCursorType:(unsigned long long)arg1 withNewEdges:(const vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)arg2 cursor:(id)arg3 hasMoreContent:(BOOL)arg4 lastCompletedLoadIdentifier:(unsigned long long)arg5 ;
-(id)updatedStateForCursorType:(unsigned long long)arg1 withEndReason:(unsigned long long)arg2 lastCompletedLoadIdentifier:(unsigned long long)arg3 ;
-(id)updatedStateWithNewEdge:(id)arg1 forHandle:(id)arg2 ;
-(id)initWithLeftEdges:(const vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)arg1 rightEdges:(const vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)arg2 tailCursorInformation:(FBInfiniteHScrollCursorInformation)arg3 headCursorInformation:(FBInfiniteHScrollCursorInformation)arg4 ;
-(vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)_updateEdges:(vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >*)arg1 withNewEdge:(id)arg2 forHandle:(id)arg3 ;
@end

