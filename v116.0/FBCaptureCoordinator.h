/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:57 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBCaptureCoordinatorBase.h>
#import <Messenger/FBCaptureEventListener.h>
#import <Messenger/FBMPPreviewDelegate.h>
#import <Messenger/FBCameraCaptureCoordinatorSubclassProtocol.h>
#import <Messenger/FBCaptureCameraController.h>
#import <Messenger/FBCaptureSessionController.h>
#import <Messenger/FBCapturePerformanceTrackerController.h>

@protocol OS_dispatch_queue, FBMPVideoRecorderProtocol, FBOrientationTracking;
@class FBCaptureManager, FBMPPreview, NSObject, FBFramePerformanceTracker, FBMPMovingPhotosCapturer, NSURL, FBMPYUVToBGRAFilter, NSString;

@interface FBCaptureCoordinator : FBCaptureCoordinatorBase <FBCaptureEventListener, FBMPPreviewDelegate, FBCameraCaptureCoordinatorSubclassProtocol, FBCaptureCameraController, FBCaptureSessionController, FBCapturePerformanceTrackerController> {

	FBCaptureManager* _captureManager;
	NSObject*<OS_dispatch_queue> _captureManagerActionsQueue;
	FBFramePerformanceTracker* _framePerformanceTracker;
	long long _framerateCap;
	id<FBMPVideoRecorderProtocol> _videoRecorder;
	FBMPMovingPhotosCapturer* _movingPhotosCapturer;
	id<FBOrientationTracking> _orientationTracker;
	NSURL* _directoryPathForVideoStorage;
	FBMPYUVToBGRAFilter* _yuvToBgraFilter;
	SCD_Struct_FB310 _recordingConfig;
	BOOL _supportsFilterRotation;
	FBMPPreview* _cameraPreview;

}

@property (nonatomic,retain) FBMPPreview * cameraPreview;                      //@synthesize cameraPreview=_cameraPreview - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) FBCaptureManager * captureManager;              //@synthesize captureManager=_captureManager - In the implementation block
-(void)addCaptureManagerListener:(id)arg1 ;
-(void)captureImageWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)performCameraAction:(id)arg1 ;
-(id)capturePreview;
-(FBCaptureManager *)captureManager;
-(id)initWithCaptureCoordinatorCameraConfiguration:(id)arg1 productAnalyticsName:(id)arg2 orientationTracker:(id)arg3 filterFactory:(id)arg4 captureCoordinatorLogger:(id)arg5 directoryPathForVideoStorage:(id)arg6 recordingConfig:(SCD_Struct_FB310)arg7 ;
-(id)framePerformanceResultDisplayer;
-(BOOL)doesCurrentDeviceSupportSessionPreset:(id)arg1 ;
-(void)prepareRecording;
-(void)cancelRecordingIfAny;
-(void)stopRecordingWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)connectOutputToVideoInput:(id)arg1 pixelFormat:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(double)maxZoomFactor;
-(void)captureImageInHighResolution:(BOOL)arg1 completion:(/*^block*/id)arg2 callbackQueue:(id)arg3 ;
-(void)startRecordingWithStartCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(void)startRecordingWithCompletion:(/*^block*/id)arg1 ;
-(id)lastRenderedBufferImage;
-(void)requestNextFrameDidRenderToPreviewCallback:(/*^block*/id)arg1 ;
-(void)removeCaptureManagerListener:(id)arg1 ;
-(BOOL)canZoomToZoomFactor:(double)arg1 ;
-(void)captureImageWithHighResolutionIfNoEffect:(BOOL)arg1 callbackQueue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)doesCurrentDeviceSupportTorchMode:(long long)arg1 ;
-(id)initWithCaptureCoordinator:(id)arg1 ;
-(void)setFramerateCap:(long long)arg1 ;
-(void)filterTopologyDidChange;
-(id)videoFilterChainInput;
-(id)videoFilterChainOutput;
-(id)audioFilterChainInput;
-(id)audioFilterChainOutput;
-(void)captureDeviceDidChangeTo:(id)arg1 ;
-(FBMPPreview *)cameraPreview;
-(void)_handleOrientationDidChangeNotification:(id)arg1 ;
-(void)_restartFramePerformanceTracking;
-(void)_captureImageInHighResolution:(BOOL)arg1 completion:(/*^block*/id)arg2 callbackQueue:(id)arg3 ;
-(id)_performanceLoggingParameters;
-(void)_handleCaptureManagerCapturedImageWithImage:(id)arg1 isHighResolution:(BOOL)arg2 previewSize:(CGSize)arg3 processImageBlock:(/*^block*/id)arg4 cameraPosition:(long long)arg5 orientation:(long long)arg6 error:(id)arg7 completion:(/*^block*/id)arg8 ;
-(void)_capturedImage:(id)arg1 highResolutionImage:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(id)_capturePhotoPerfParamsWithEffect:(BOOL)arg1 image:(id)arg2 ;
-(void)_captureFilteredImage:(id)arg1 highResolutionImage:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 imageInput:(id)arg5 degrees:(float)arg6 completion:(/*^block*/id)arg7 ;
-(void)_connectLocalImageInput:(id)arg1 ;
-(void)_disconnectLocalImageInput:(id)arg1 ;
-(void)_setupRecordingWithCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(BOOL)_audioCaptureWasDetermined;
-(void)_startRecordingWithCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(void)_didFinishStartRecordingVideoWithError:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_cancelRecording;
-(void)_stopRecordingWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)_handleVideoRecordingCompletionWithAsset:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)supportsCaptureSessionPreset:(id)arg1 cameraPosition:(long long)arg2 ;
-(void)preview:(id)arg1 didChangeSizeTo:(CGSize)arg2 ;
-(void)preview:(id)arg1 didChangeEffectSafeAreaInsetsTo:(FBMPEdgeInsets)arg2 ;
-(void)connectOutputToVideoInput:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)filterPerformanceExtras;
-(void)enableMovingPhotosCaptureModeWithPreferredFrameRate:(double)arg1 totalDuration:(double)arg2 cachingDuration:(double)arg3 completion:(/*^block*/id)arg4 ;
-(void)disableMovingPhotosCaptureModeWithCompletion:(/*^block*/id)arg1 ;
-(void)captureMovingPhotosWithInitialization:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setCameraPreview:(FBMPPreview *)arg1 ;
-(id)currentDevice;
-(void)dealloc;
-(BOOL)isRunning;
-(id)sessionID;
-(void)_initCommon;
-(id)preview;
-(void)startSession;
-(void)stopSession;
@end

