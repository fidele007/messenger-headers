/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:28:00 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBTarotCardEntityProtocol.h>

@class NSString, FBTarotImageEntity, NSDate, FBTarotPublisherEntity, FBTarotManageScreenCardEntity;

@interface FBTarotDigestCoverMediaCardEntity : NSObject <FBTarotCardEntityProtocol> {

	NSString* _cardID;
	NSString* _pageName;
	NSString* _digestTitle;
	FBTarotImageEntity* _publisherImageEntity;
	NSDate* _publishedDate;
	FBTarotPublisherEntity* _publisherEntity;
	FBTarotManageScreenCardEntity* _manageScreenEntity;
	Maybe<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >* _cardMedia;
	Signal<FBTarotFeedbackEntity *>* _feedbackEntity;
	Signal<FBTarotDigestCoverMediaCardEntitySurface>* _surface;
	vector<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *>, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > >* _coverMedia;
	vector<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > >* _tableOfContentsCardEntities;

}

@property (nonatomic,copy,readonly) NSString * pageName;                                                   //@synthesize pageName=_pageName - In the implementation block
@property (nonatomic,copy,readonly) NSString * digestTitle;                                                //@synthesize digestTitle=_digestTitle - In the implementation block
@property (nonatomic,readonly) FBTarotImageEntity * publisherImageEntity;                                  //@synthesize publisherImageEntity=_publisherImageEntity - In the implementation block
@property (nonatomic,readonly) NSDate * publishedDate;                                                     //@synthesize publishedDate=_publishedDate - In the implementation block
@property (nonatomic,readonly) vector<FB::Functional::Either<FBTarotImageEntity * coverMedia;              //@synthesize coverMedia=_coverMedia - In the implementation block
@property (nonatomic,readonly) vector<std::__1::tuple<NSString * tableOfContentsCardEntities;              //@synthesize tableOfContentsCardEntities=_tableOfContentsCardEntities - In the implementation block
@property (nonatomic,readonly) Signal<FBTarotFeedbackEntity *>* feedbackEntity;                            //@synthesize feedbackEntity=_feedbackEntity - In the implementation block
@property (nonatomic,readonly) FBTarotPublisherEntity * publisherEntity;                                   //@synthesize publisherEntity=_publisherEntity - In the implementation block
@property (nonatomic,readonly) Signal<FBTarotDigestCoverMediaCardEntitySurface>* surface;                  //@synthesize surface=_surface - In the implementation block
@property (nonatomic,readonly) FBTarotManageScreenCardEntity * manageScreenEntity;                         //@synthesize manageScreenEntity=_manageScreenEntity - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) Maybe<FB::Functional::Either<FBTarotImageEntity * cardMedia;                //@synthesize cardMedia=_cardMedia - In the implementation block
@property (nonatomic,copy,readonly) NSString * cardType; 
@property (nonatomic,copy,readonly) NSString * cardID;                                                     //@synthesize cardID=_cardID - In the implementation block
-(vector<FB::Functional::Either<FBTarotImageEntity *)coverMedia;
-(Signal<FBTarotFeedbackEntity *>*)feedbackEntity;
-(FBTarotImageEntity *)publisherImageEntity;
-(NSString *)digestTitle;
-(NSDate *)publishedDate;
-(vector<std::__1::tuple<NSString *)tableOfContentsCardEntities;
-(FBTarotPublisherEntity *)publisherEntity;
-(FBTarotManageScreenCardEntity *)manageScreenEntity;
-(Maybe<FB::Functional::Either<FBTarotImageEntity *)cardMedia;
-(NSString *)cardID;
-(id)initWithPageName:(id)arg1 digestTitle:(id)arg2 publisherImageEntity:(id)arg3 publishedDate:(id)arg4 cardID:(id)arg5 coverMedia:(const vector<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *>, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > >*)arg6 tableOfContentsCardEntities:(const vector<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > >*)arg7 feedbackEntity:(const Signal<FBTarotFeedbackEntity *>*)arg8 publisherEntity:(id)arg9 manageScreenEntity:(id)arg10 surface:(const Signal<FBTarotDigestCoverMediaCardEntitySurface>*)arg11 ;
-(NSString *)pageName;
-(NSString *)cardType;
-(Signal<FBTarotDigestCoverMediaCardEntitySurface>*)surface;
@end

