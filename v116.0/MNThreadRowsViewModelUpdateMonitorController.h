/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:50 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MNThreadSummarySubscribing, MNThreadSummaryOptimisticCacheUpdateListening, MNThreadMessageSubscribing, MNSecureThreadSubscribing, FBMMessageSendListening, MNPendingThreadRequestListening, MNPushMessageReceivedListening, MNThreadTypingStateTrackerListener, MNMessagesSyncSnapshotListening, FBMSPForcedFetchDeltaHandlerListening, MNUserChangedListener, FBMSPFolderCountDeltaHandlerListener, MNEphemeralMessageExpirationTimerStoreListening, MNThreadRowsViewModelEnterForegroundListening;
@class MNThreadRowsViewModelUpdateMonitor, MNThreadListViewModelSubscriptionServiceDependencies;

@interface MNThreadRowsViewModelUpdateMonitorController : NSObject {

	MNThreadRowsViewModelUpdateMonitor* _monitor;
	MNThreadListViewModelSubscriptionServiceDependencies* _dependencies;
	id<MNThreadSummarySubscribing> _threadSummarySubscriber;
	id<MNThreadSummaryOptimisticCacheUpdateListening> _threadSummaryOptimisticUpdateSubscriber;
	id<MNThreadMessageSubscribing> _threadMessageSubscriber;
	id<MNSecureThreadSubscribing> _secureThreadSubscriber;
	id<FBMMessageSendListening> _messageSendListener;
	id<MNPendingThreadRequestListening> _pendingThreadListener;
	id<MNPushMessageReceivedListening> _pushMessageListener;
	id<MNThreadTypingStateTrackerListener> _threadTypingStateListener;
	id<MNMessagesSyncSnapshotListening> _messagesSyncSnapshotListener;
	id<FBMSPForcedFetchDeltaHandlerListening> _syncProtocolForceFetchListener;
	id<MNUserChangedListener> _userChangedListener;
	id<FBMSPFolderCountDeltaHandlerListener> _folderCountDeltaHandlerListener;
	id<MNEphemeralMessageExpirationTimerStoreListening> _ephemeralTimerStoreListener;
	id<MNThreadRowsViewModelEnterForegroundListening> _enterForegroundListener;

}
-(id)initWithMonitor:(id)arg1 dependencies:(id)arg2 queue:(id)arg3 ;
-(void)stopMonitoring;
-(void)startMonitoring;
@end

