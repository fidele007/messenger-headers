/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:52 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNComposerDismissableDelegate.h>
#import <Messenger/MNComposerDrawerTransitionDelegate.h>
#import <Messenger/MNComposerDismissable.h>

@protocol MNComposerBannerViewPresenter, MNComposerConfiguring, MNModalPresentation, MNComposerDismissableDelegate, MNComposerDrawerPresentationManagerDelegate;
@class UIViewController, MNComposerDrawerMiniContainerView, MNComposerDrawerTransition, UIView, MNComposerDrawerListenerAnnouncer, MNComposerDrawerViewController, UIColor, NSString;

@interface MNComposerDrawerPresentationManager : NSObject <MNComposerDismissableDelegate, MNComposerDrawerTransitionDelegate, MNComposerDismissable> {

	UIViewController* _bannerContentViewController;
	MNComposerDrawerMiniContainerView* _bannerContentContainerView;
	id<MNComposerBannerViewPresenter> _bannerViewPresenter;
	id<MNComposerConfiguring> _composerConfiguration;
	MNComposerDrawerTransition* _drawerTransition;
	UIView* _keyboardAccessoryView;
	id<MNModalPresentation> _modalPresenter;
	BOOL _stateLocked;
	id<MNComposerDismissableDelegate> _dismissableDelegate;
	id<MNComposerDrawerPresentationManagerDelegate> _delegate;
	MNComposerDrawerListenerAnnouncer* _drawerListenerAnnouncer;
	long long _drawerMode;
	MNComposerDrawerViewController* _presentedDrawerViewController;
	long long _state;
	UIColor* _tintColor;

}

@property (assign,nonatomic,__weak) id<MNComposerDrawerPresentationManagerDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MNComposerDrawerListenerAnnouncer * drawerListenerAnnouncer;                 //@synthesize drawerListenerAnnouncer=_drawerListenerAnnouncer - In the implementation block
@property (getter=isDrawerMinimized,nonatomic,readonly) BOOL drawerMinimized; 
@property (nonatomic,readonly) long long drawerMode;                                                        //@synthesize drawerMode=_drawerMode - In the implementation block
@property (getter=isDrawerPresented,nonatomic,readonly) BOOL drawerPresented; 
@property (nonatomic,readonly) UIViewController * presentedContentViewController; 
@property (nonatomic,readonly) MNComposerDrawerViewController * presentedDrawerViewController;              //@synthesize presentedDrawerViewController=_presentedDrawerViewController - In the implementation block
@property (nonatomic,readonly) long long state;                                                             //@synthesize state=_state - In the implementation block
@property (nonatomic,copy) UIColor * tintColor;                                                             //@synthesize tintColor=_tintColor - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNComposerDismissableDelegate> dismissableDelegate;                  //@synthesize dismissableDelegate=_dismissableDelegate - In the implementation block
-(MNComposerDrawerListenerAnnouncer *)drawerListenerAnnouncer;
-(id<MNComposerDismissableDelegate>)dismissableDelegate;
-(void)setDismissableDelegate:(id<MNComposerDismissableDelegate>)arg1 ;
-(void)dismissable:(id)arg1 didTriggerDismissWithSource:(long long)arg2 ;
-(BOOL)_validateBannerContentViewController;
-(void)_dismissDrawerAndNotifyDelegateWithSource:(long long)arg1 checkDismissSource:(BOOL)arg2 animated:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)_updateToState:(long long)arg1 ;
-(BOOL)isDrawerPresented;
-(UIViewController *)presentedContentViewController;
-(void)_updateDrawerWithDrawerMode:(long long)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_notifyForDrawerVisible:(BOOL)arg1 viewController:(id)arg2 drawerMode:(long long)arg3 animated:(BOOL)arg4 ;
-(void)_presentDrawerWithViewController:(id)arg1 drawerMode:(long long)arg2 animated:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)dismissDrawerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_willUpdateDrawerVisible:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)_didPresentDrawer;
-(void)_didDismissDrawer;
-(BOOL)canDismissDrawerWithSource:(long long)arg1 ;
-(void)_dismissDrawerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_dismissFullDrawerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_dismissMiniDrawerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_presentFullDrawerWithViewController:(id)arg1 drawerMode:(long long)arg2 backgroundMaskHidden:(BOOL)arg3 animated:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)_presentMiniDrawerWithViewController:(id)arg1 deferredLayout:(BOOL)arg2 animated:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(/*^block*/id)_lockState;
-(id)initWithComposerConfiguration:(id)arg1 modalPresenter:(id)arg2 bannerViewPresenter:(id)arg3 keyboardAccessoryView:(id)arg4 ;
-(BOOL)isDrawerMinimized;
-(void)dismissDrawerWithSource:(long long)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)keyboardAccessoryViewDidResize;
-(void)performDeferredDismissToViewController:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)presentDrawerWithViewController:(id)arg1 drawerMode:(long long)arg2 animated:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(MNComposerDrawerViewController *)presentedDrawerViewController;
-(void)drawerTransitionAnimate:(id)arg1 ;
-(void)drawerTransition:(id)arg1 didCompleteAnimation:(BOOL)arg2 ;
-(void)drawerTransition:(id)arg1 willCompleteAnimation:(BOOL)arg2 ;
-(long long)drawerMode;
-(void)setDelegate:(id<MNComposerDrawerPresentationManagerDelegate>)arg1 ;
-(id<MNComposerDrawerPresentationManagerDelegate>)delegate;
-(long long)state;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
@end

