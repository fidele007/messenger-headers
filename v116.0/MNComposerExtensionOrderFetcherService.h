/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:52 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNComposerExtensionProviderListener.h>
#import <FBSharedFramework/MNServiceControllable.h>

@protocol MNComposerExtensionOrderFetching, MNComposerExtensionProviding, MNComposerExtension;
@class MNComposerExtensionOrderFetchPolicy, MNComposerExtensionOrderProvider, MNComposerExtensionOrderFetcherServiceListeningAnnouncer, MNComposerExtensionOrderLayoutEstimator, MNPlatformComposerGatingChecker, NSString;

@interface MNComposerExtensionOrderFetcherService : NSObject <MNComposerExtensionProviderListener, MNServiceControllable> {

	id<MNComposerExtensionOrderFetching> _extensionOrderFetcher;
	MNComposerExtensionOrderFetchPolicy* _extensionOrderFetchPolicy;
	MNComposerExtensionOrderProvider* _extensionOrderProvider;
	MNComposerExtensionOrderFetcherServiceListeningAnnouncer* _announcer;
	MNComposerExtensionOrderLayoutEstimator* _extensionOrderLayoutEstimator;
	id<MNComposerExtensionProviding> _extensionProvider;
	id<MNComposerExtension> _keyboardExtension;
	MNPlatformComposerGatingChecker* _platformComposerGatingChecker;
	long long _serviceState;

}

@property (assign,nonatomic) long long serviceState;                //@synthesize serviceState=_serviceState - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)didUpdateAvailableExtensions;
-(id)initWithExtensionOrderFetcher:(id)arg1 extensionOrderFetchPolicy:(id)arg2 announcer:(id)arg3 extensionOrderProvider:(id)arg4 extensionProvider:(id)arg5 extensionOrderLayoutEstimator:(id)arg6 platformComposerGatingChecker:(id)arg7 keyboardExtension:(id)arg8 ;
-(void)setServiceState:(long long)arg1 ;
-(void)_loadCurrentExtensionOrder;
-(long long)serviceState;
-(void)_fetchComposerExtensionOrderIfPossible;
-(void)_fetchComposerExtensionOrder;
-(void)_handleExtensionOrderLoadWithCachedExtensionOrder:(id)arg1 ;
-(void)_handleExtensionOrderFetchSuccessWithExtensionOrder:(id)arg1 ;
-(void)_handleExtensionOrderFetchFailureWithError:(id)arg1 ;
-(void)_fetchComposerExtensionOrderWithExtensions:(id)arg1 cachedExtensionOrder:(id)arg2 workQueue:(id)arg3 ;
-(BOOL)_checkExtensionIdentifiers:(id)arg1 ;
-(void)handleIdle;
-(void)stop;
-(void)start:(id)arg1 ;
@end

