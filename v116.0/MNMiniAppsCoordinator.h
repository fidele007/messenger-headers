/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:50 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <FBSharedFramework/FBClassInjectable.h>
#import <Messenger/FBRapidFeedbackSurveyManagerDelegate.h>
#import <Messenger/MNMiniAppsReactModuleListener.h>
#import <Messenger/MNMiniAppsOpeningListener.h>
#import <Messenger/MNFlowStateServiceListener.h>
#import <Messenger/MNMiniAppOverlayViewControllerDelegate.h>
#import <Messenger/MNComposerDrawerListener.h>

@protocol MNMiniAppsCoordinatorPresenting, MNTypingStateListener;
@class MNMiniAppsCoordinatorInjector, NSString, NSDictionary, MNMiniAppOverlayViewController, FBRapidFeedbackSurveyManager;

@interface MNMiniAppsCoordinator : NSObject <FBClassInjectable, FBRapidFeedbackSurveyManagerDelegate, MNMiniAppsReactModuleListener, MNMiniAppsOpeningListener, MNFlowStateServiceListener, MNMiniAppOverlayViewControllerDelegate, MNComposerDrawerListener> {

	MNMiniAppsCoordinatorInjector* _injector;
	/*^block*/id _openAppCompletionBlock;
	NSString* _currentMiniAppURL;
	NSString* _currentFlowStateIdentifier;
	NSString* _currentSuggestionId;
	NSString* _currentEntrypoint;
	NSDictionary* _currentEntities;
	NSDictionary* _currentInitialProperties;
	MNMiniAppOverlayViewController* _miniAppOverlayViewController;
	long long _currentMiniAppId;
	/*^block*/id _actionNotificationCompletionBlock;
	FBRapidFeedbackSurveyManager* _surveyManager;
	long long _presenterState;
	BOOL _miniAppMinimized;
	id<MNMiniAppsCoordinatorPresenting> _presenter;
	id<MNTypingStateListener> _typingStateListener;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNMiniAppsCoordinatorPresenting> presenter;              //@synthesize presenter=_presenter - In the implementation block
@property (nonatomic,retain) id<MNTypingStateListener> typingStateListener;                     //@synthesize typingStateListener=_typingStateListener - In the implementation block
@property (assign,nonatomic) BOOL miniAppMinimized;                                             //@synthesize miniAppMinimized=_miniAppMinimized - In the implementation block
+(Class)injectorClass;
-(void)_handleCompletionForSurveyManager:(id)arg1 ;
-(void)showMessageNotificationIfNecessaryForMessage:(id)arg1 threadSummary:(id)arg2 ;
-(void)handleNotificationTapWithDataSource:(id)arg1 ;
-(BOOL)shouldShowMessageNotificationForThreadSummary:(id)arg1 ;
-(void)setTypingStateListener:(id<MNTypingStateListener>)arg1 ;
-(void)activatePresenter;
-(void)deactivatePresenter;
-(void)saveMiniAppState;
-(void)restoreMiniAppStateAndPresent;
-(void)setMiniAppMinimized:(BOOL)arg1 ;
-(BOOL)isShowingMiniApp;
-(void)surveyManager:(id)arg1 shouldDismiss:(BOOL)arg2 ;
-(void)_cleanUpSurveyManager;
-(void)presentMiniAppViewWithConfig:(id)arg1 ;
-(void)willOpenMiniAppWithConfig:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)miniAppOverlayViewControllerDidTapNotification:(id)arg1 dataSource:(id)arg2 ;
-(CGSize)miniAppOverlayViewController:(id)arg1 miniAppBoundingSizeThatFitsSize:(CGSize)arg2 ;
-(BOOL)shouldDismissDrawerWithSource:(long long)arg1 ;
-(void)_setUpAsListener;
-(void)_tearDownAsListener;
-(BOOL)_canPresentMiniApp;
-(void)_expandRNMiniApp;
-(void)_restoreMiniAppStateWithThreadKey:(id)arg1 ;
-(BOOL)_isMiniAppExpanded;
-(void)_showNotificationForThreadSummary:(id)arg1 message:(id)arg2 text:(id)arg3 sender:(id)arg4 ;
-(void)_fetchUserWithSenderId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_handleNotificationTapWithDataSource:(id)arg1 ;
-(void)subscribeToFlowStateChanges:(id)arg1 ;
-(void)_dismissMiniAppWithSuccess:(BOOL)arg1 ;
-(void)_dispatchUpdatedFlowStateWithObjectID:(id)arg1 flowState:(id)arg2 ;
-(id<MNTypingStateListener>)typingStateListener;
-(void)_showSurveyIfNecessary;
-(void)_resetMiniAppStateOnDismissal;
-(void)_cleanUpOnDismissalWithSuccess:(BOOL)arg1 ;
-(void)_minimizeRNMiniAppWithSourceName:(id)arg1 ;
-(void)_dispatchMiniAppEventWithName:(id)arg1 body:(id)arg2 ;
-(BOOL)miniAppMinimized;
-(void)miniAppWillMount;
-(void)miniAppDidMount;
-(void)miniAppWillUnmount;
-(void)dismissMiniAppWithSuccess:(BOOL)arg1 ;
-(void)miniAppMinimized:(BOOL)arg1 resolver:(/*^block*/id)arg2 rejecter:(/*^block*/id)arg3 ;
-(void)showActionNotificationWithSenderId:(id)arg1 text:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)miniAppTopOffsetWithResolver:(/*^block*/id)arg1 rejecter:(/*^block*/id)arg2 ;
-(void)updateMiniAppRequiredVerticalSpace:(double)arg1 ;
-(void)miniAppHasLocationPermission:(/*^block*/id)arg1 rejecter:(/*^block*/id)arg2 ;
-(void)miniAppRequestLocationPermission:(/*^block*/id)arg1 rejecter:(/*^block*/id)arg2 ;
-(void)miniAppRequestLocation:(/*^block*/id)arg1 rejecter:(/*^block*/id)arg2 ;
-(void)didBeginInteractionWithMiniApp:(id)arg1 ;
-(void)didEndInteractionWithMiniApp:(id)arg1 ;
-(void)didRegisterRapidFeedback;
-(void)getPaymentCredentials:(id)arg1 breakdown:(id)arg2 pageID:(id)arg3 pageName:(id)arg4 pageTermsAndPoliciesURL:(id)arg5 facebookTermsAndPoliciesURL:(id)arg6 extraData:(id)arg7 resolver:(/*^block*/id)arg8 rejecter:(/*^block*/id)arg9 ;
-(void)didModifyFlowState:(id)arg1 forName:(id)arg2 ;
-(void)willPresentDrawerWithViewController:(id)arg1 mode:(long long)arg2 animated:(BOOL)arg3 ;
-(void)didPresentDrawerWithViewController:(id)arg1 mode:(long long)arg2 animated:(BOOL)arg3 ;
-(void)willDismissDrawerWithViewController:(id)arg1 mode:(long long)arg2 animated:(BOOL)arg3 ;
-(void)didDismissDrawerWithViewController:(id)arg1 mode:(long long)arg2 animated:(BOOL)arg3 ;
-(void)willUpdateDrawerWithViewController:(id)arg1 fromMode:(long long)arg2 toMode:(long long)arg3 animated:(BOOL)arg4 ;
-(void)didUpdateDrawerWithViewController:(id)arg1 fromMode:(long long)arg2 toMode:(long long)arg3 animated:(BOOL)arg4 ;
-(BOOL)isEligibleForDrawerPresentation;
-(BOOL)isActiveCoordinator;
-(void)openMiniAppWithConfig:(id)arg1 ;
-(id)initWithInjector:(id)arg1 ;
-(void)dismissKeyboard;
-(id<MNMiniAppsCoordinatorPresenting>)presenter;
-(void)setPresenter:(id<MNMiniAppsCoordinatorPresenting>)arg1 ;
@end

