/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:55 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBGraphQLConnectionControllerNetworkListener.h>
#import <Messenger/FBGraphQLConnectionControllerLoadListener.h>
#import <Messenger/FBPollingDelegate.h>
#import <Messenger/FBFeedGraphQLConnectionControllerProtocol.h>

@protocol FBPolling;
@class NSString, FBFeedQueryConfiguration, FBGraphQLConnectionController, FBGraphQLConnectionControllerRecorder, NSDictionary, FBUserSession, FBFeedGraphQLConnectionControllerBackgroundTaskManager, NSDate, FBAnnotatedGraphQLConnectionStoreModificationLoggingListener, FBGraphQLConnectionControllerLoadListenerAnnouncer, FBGraphQLConnectionControllerNetworkListenerAnnouncer;

@interface FBFeedGraphQLConnectionController : NSObject <FBGraphQLConnectionControllerNetworkListener, FBGraphQLConnectionControllerLoadListener, FBPollingDelegate, FBFeedGraphQLConnectionControllerProtocol> {

	NSString* _targetID;
	FBFeedQueryConfiguration* _queryConfiguration;
	FBGraphQLConnectionController* _connectionController;
	id<FBPolling> _pollingSource;
	BOOL _enabled;
	BOOL _appInForeground;
	BOOL _explorePrefetchPerformed;
	id _backgroundObserver;
	id _foregroundObserver;
	FBGraphQLConnectionControllerRecorder* _connectionControllerRecorder;
	NSDictionary* _queryOptions;
	FBUserSession* _session;
	/*function pointer*/void* _recentVPVdProvider;
	FBFeedGraphQLConnectionControllerBackgroundTaskManager* _backgroundTaskManager;
	NSDate* _warmStartPollingDate;
	FBAnnotatedGraphQLConnectionStoreModificationLoggingListener* _modificationListener;
	FBGraphQLConnectionControllerLoadListenerAnnouncer* _loadListenerAnnouncer;
	FBGraphQLConnectionControllerNetworkListenerAnnouncer* _networkListenerAnnouncer;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * targetID; 
@property (assign,nonatomic) BOOL enabled; 
@property (nonatomic,readonly) id<FBGraphQLConnectionInterface> connection; 
+(void)forceRefreshOfAllControllers;
-(void)addLoadListener:(id)arg1 ;
-(void)addNetworkListener:(id)arg1 ;
-(void)graphQLConnectionController:(id)arg1 didBeginLoad:(id)arg2 ;
-(void)graphQLConnectionController:(id)arg1 didCompleteLoad:(id)arg2 ;
-(void)graphQLConnectionController:(id)arg1 didReceiveEdgesFromNetworkLoad:(id)arg2 ;
-(void)graphQLConnectionController:(id)arg1 didLoadEdgesFromNetworkLoad:(id)arg2 ;
-(void)didReceiveForceRefreshNotification:(id)arg1 ;
-(id)_userInfoWithRefreshMode:(id)arg1 analyticsModule:(id)arg2 caller:(id)arg3 loadType:(unsigned long long)arg4 ;
-(BOOL)loadingHead;
-(void)_updatePollingSourceEnabled;
-(void)loadHeadWithRefreshMode:(id)arg1 analyticsModule:(id)arg2 caller:(id)arg3 ;
-(void)pollingSourceDidFire:(id)arg1 ;
-(id)connectionController;
-(BOOL)restoringPersistedState;
-(void)removeLoadListener:(id)arg1 ;
-(void)removeNetworkListener:(id)arg1 ;
-(void)loadTailWithAnalyticsModule:(id)arg1 ;
-(BOOL)loadingInitial;
-(BOOL)loadingTail;
-(BOOL)canLoadTail;
-(void)startStreaming;
-(void)_cancelRequestsAndResetLoadState;
-(void)addPagedDownloadingListener:(id)arg1 ;
-(void)removePagedDownloadingListener:(id)arg1 ;
-(void)setNextPollingDate:(id)arg1 withOptionalWarmStartPollingDate:(id)arg2 ;
-(id)nextPollingDate;
-(id)initWithConnectionController:(id)arg1 targetID:(id)arg2 queryConfiguration:(id)arg3 queryOptions:(id)arg4 recorder:(id)arg5 session:(id)arg6 recentVPVdProvider:(/*function pointer*/void*)arg7 ;
-(id)lastHeadLoadError;
-(id)lastTailLoadError;
-(id)analytics;
-(BOOL)enabled;
-(void)dealloc;
-(NSString *)description;
-(void)setEnabled:(BOOL)arg1 ;
-(id<FBGraphQLConnectionInterface>)connection;
-(NSString *)targetID;
-(void)_didEnterBackground;
-(void)_willEnterForeground;
@end

