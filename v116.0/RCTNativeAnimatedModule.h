/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:56 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/RCTEventEmitter.h>
#import <Messenger/RCTBridgeModule.h>
#import <Messenger/RCTValueAnimatedNodeObserver.h>
#import <Messenger/RCTEventDispatcherObserver.h>
#import <Messenger/RCTUIManagerObserver.h>

@class RCTNativeAnimatedNodesManager, NSMutableArray, NSString, RCTBridge;

@interface RCTNativeAnimatedModule : RCTEventEmitter <RCTBridgeModule, RCTValueAnimatedNodeObserver, RCTEventDispatcherObserver, RCTUIManagerObserver> {

	RCTNativeAnimatedNodesManager* _nodesManager;
	NSMutableArray* _operations;
	NSMutableArray* _preOperations;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) RCTBridge * bridge; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> methodQueue; 
+(id)__rct_export__833;
+(id)__rct_export__570;
+(id)__rct_export__651;
+(id)__rct_export__732;
+(id)__rct_export__904;
+(id)__rct_export__985;
+(id)__rct_export__1066;
+(id)__rct_export__1137;
+(id)__rct_export__1208;
+(id)__rct_export__1289;
+(id)__rct_export__13710;
+(id)__rct_export__14711;
+(id)__rct_export__15412;
+(id)__rct_export__16213;
+(id)__rct_export__17114;
+(id)__rct_export__18015;
+(id)moduleName;
+(void)load;
-(NSObject*<OS_dispatch_queue>)methodQueue;
-(id)supportedEvents;
-(void)animatedNode:(id)arg1 didUpdateValue:(double)arg2 ;
-(void)createAnimatedNode:(id)arg1 config:(id)arg2 ;
-(void)addOperationBlock:(/*^block*/id)arg1 ;
-(void)connectAnimatedNodes:(id)arg1 childTag:(id)arg2 ;
-(void)disconnectAnimatedNodes:(id)arg1 childTag:(id)arg2 ;
-(void)startAnimatingNode:(id)arg1 nodeTag:(id)arg2 config:(id)arg3 endCallback:(/*^block*/id)arg4 ;
-(void)setAnimatedNodeValue:(id)arg1 value:(id)arg2 ;
-(void)setAnimatedNodeOffset:(id)arg1 offset:(id)arg2 ;
-(void)flattenAnimatedNodeOffset:(id)arg1 ;
-(void)extractAnimatedNodeOffset:(id)arg1 ;
-(void)disconnectAnimatedNodeFromView:(id)arg1 viewTag:(id)arg2 ;
-(void)addPreOperationBlock:(/*^block*/id)arg1 ;
-(void)dropAnimatedNode:(id)arg1 ;
-(void)stopListeningToAnimatedNodeValue:(id)arg1 ;
-(void)addAnimatedEventToView:(id)arg1 eventName:(id)arg2 eventMapping:(id)arg3 ;
-(void)removeAnimatedEventFromView:(id)arg1 eventName:(id)arg2 animatedNodeTag:(id)arg3 ;
-(void)eventDispatcherWillDispatchEvent:(id)arg1 ;
-(void)uiManagerWillFlushUIBlocks:(id)arg1 ;
-(void)connectAnimatedNodeToView:(id)arg1 viewTag:(id)arg2 ;
-(void)startListeningToAnimatedNodeValue:(id)arg1 ;
-(void)invalidate;
-(void)stopAnimation:(id)arg1 ;
-(void)setBridge:(RCTBridge *)arg1 ;
@end

