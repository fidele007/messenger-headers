/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:28:00 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@interface FBLigerProtocol : NSObject
+(void)setUserCertEnabled:(BOOL)arg1 ;
+(void)initLigerWithConfig:(id)arg1 ;
+(void)setNetworkStateProvider:(id)arg1 ;
+(BOOL)isFBLigerProtocolEnabled;
+(NetworkStatusMonitor*)getNetworkStatusMonitor;
+(id)getCircularLogLines;
+(BOOL)shouldLigerHandleUrlOnApp:(id)arg1 ;
+(void)verifyProxyState;
+(void)onNetworkChangeWithPreviousState:(id)arg1 withCurrentState:(id)arg2 withUnknownState:(id)arg3 ;
+(BOOL)canLigerHandleUrl:(id)arg1 ;
+(unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> >*)addObserverToHelper:(const shared_ptr<facebook::liger::LigerPushNotificationCallback>*)arg1 prefixes:(unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >*)arg2 executor:(Executor*)arg3 observerHelper:(ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper>*)arg4 ;
+(void)callPushCallbacks:(const HTTPRequest*)arg1 observerHelper:(ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper>*)arg2 ;
+(sockaddr_storage)getDNSAnswers:(id)arg1 withFamily:(unsigned char)arg2 ;
+(id)getCircularLogLinesNonBlocking;
+(unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> >*)addObserver:(const shared_ptr<facebook::liger::LigerPushNotificationCallback>*)arg1 prefixes:(unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >*)arg2 executor:(Executor*)arg3 ;
+(void)callPushCallbacks:(const HTTPRequest*)arg1 ;
+(HTTPClientSettings*)settings;
+(void)setUserDisabled:(BOOL)arg1 ;
@end

