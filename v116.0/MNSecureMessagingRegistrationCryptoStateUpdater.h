/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:27:59 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNSecureMessagingCryptoStateSaving.h>
#import <Messenger/MNSecureMessagingRegistrationStateCreating.h>
#import <Messenger/MNSecureMessagingRegistrationStateUpdating.h>

@protocol MNSecureMessagingRegistrationStateUpdateListening, MNSecureMessagingRegisteredDeviceStatusChangeListening, OS_dispatch_queue, FBClock;
@class MNSecureMessagingCryptoKeychainStore, MNSecureMessagingRegistrationStateStore, NSObject, NSString;

@interface MNSecureMessagingRegistrationCryptoStateUpdater : NSObject <MNSecureMessagingCryptoStateSaving, MNSecureMessagingRegistrationStateCreating, MNSecureMessagingRegistrationStateUpdating> {

	id<MNSecureMessagingRegistrationStateUpdateListening> _registrationFlowListener;
	id<MNSecureMessagingRegisteredDeviceStatusChangeListening> _registeredDeviceStatusChangeListener;
	MNSecureMessagingCryptoKeychainStore* _keychainStore;
	MNSecureMessagingRegistrationStateStore* _registrationStore;
	NSObject*<OS_dispatch_queue> _queue;
	id<FBClock> _clock;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)updateCryptoState:(id)arg1 ;
-(void)_writeRegistrationState:(id)arg1 ;
-(id)_readRegistrationState;
-(BOOL)_updateRegisteredCollectionSettingsWithBlock:(/*^block*/id)arg1 ;
-(long long)setDidBeginRegistrationOfCryptoState:(id)arg1 registrationIdentifier:(id)arg2 multiDevice:(BOOL)arg3 ;
-(BOOL)setDidCompleteLegacyRegistrationWithPrimaryDeviceStatus:(long long)arg1 registrationIdentifier:(id)arg2 ;
-(BOOL)setDidCompleteRegistrationWithDeviceStatus:(long long)arg1 primaryDeviceStatus:(long long)arg2 registrationIdentifier:(id)arg3 ;
-(BOOL)setDidFailRegistrationRequestWithIdentifier:(id)arg1 error:(id)arg2 ;
-(BOOL)updateCodeName:(id)arg1 ;
-(BOOL)updateRegisteredPrimaryDeviceStatus:(long long)arg1 ;
-(BOOL)updateRegisteredDeviceStatus:(long long)arg1 ;
-(id)initWithKeychainStore:(id)arg1 registrationStore:(id)arg2 clock:(id)arg3 registrationFlowListener:(id)arg4 registeredDeviceStatusChangeListener:(id)arg5 queue:(id)arg6 ;
-(void)resetAllState;
@end

