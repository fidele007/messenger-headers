/*
* This header is generated by classdump-dyld 1.0
* on Monday, May 8, 2017 at 12:28:04 AM Central European Summer Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/0B364788-EFE9-4CC1-B4D1-033CC2D7E2B9/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSMutableDictionary, FBNativeArticleController, FBMemModelObject<FBQueriedNodeFieldsProtocol>, NSError, FBUserSession, <FBIntentHandler>, <FBNavigationCoordinator>, FBTarotRenderersRegistry, FBTarotImageEntity, FBTarotVideoEntity, FBListLogger, FBScenePath, UIColor, FBPullToRefreshViewConfiguration, UIView<FBLoadingView>, UIView, UICollectionViewFlowLayout, <FBListViewKitScrollEventListener>, NSDictionary, <FBDisplayableMediaViewProvider>, CKComponent, NSNumber, UIImage, <FBCollectionComponentItemAppearanceEventListener>, <FBComponentScrollEventListener>, <FBComponentDataSourceScrollEventHandler>, FBDisplayableMediaViewProviderContext, <UIViewControllerContextTransitioning>, NSArray, FBCELComponentActionContext, UIFont, FBImageDownloader, NSAttributedString, CAMediaTimingFunction, NSObject<OS_dispatch_queue>, CKComponentScopeRoot, <NSObject>, <FBWebImageViewLayoutDelegate>, CAAnimation, NSCharacterSet, <NSLayoutManagerDelegate>, FBSectionComponent, <FBComponentChangesetWriter>, FBComponentHostControllerState, NSMutableArray;

typedef struct _NSZone* NSZoneRef;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct CKTypedComponentAction<MNCYMKContactViewModel *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<MNCYMKContactViewModel *>;

typedef struct MNMontageComposerStackViewControllerOptions {
	BOOL canShowRoundedCorners;
	BOOL canControlBarStyle;
	BOOL useSmallCaptureButton;
} MNMontageComposerStackViewControllerOptions;

typedef struct CGContext* CGContextRef;

typedef struct opaque_pthread_mutex_t {
	long long __sig;
	char __opaque[56];
} opaque_pthread_mutex_t;

typedef struct mutex {
	opaque_pthread_mutex_t __m_;
} mutex;

typedef struct _compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> > {
	ObserverToken __first_;
} compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> >;

typedef struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> > {
	compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> > __ptr_;
} unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken> >;

typedef struct {
	BOOL ckAloha;
	BOOL ckDataSourceEnabled;
	BOOL ckThreadRow;
	BOOL ckSectionHeader;
	BOOL ckPYMM;
	BOOL ckActiveNow;
	BOOL ckLoadMoreThreads;
	BOOL ckCYMKContact;
	BOOL ckMontage;
	BOOL ckAd;
} SCD_Struct_MN14;

typedef struct MNBadgeOptions {
	BOOL shouldShowActiveBadges;
	BOOL shouldShowFacebookBadges;
	BOOL shouldShowMessengerBadges;
} MNBadgeOptions;

typedef struct CLLocationCoordinate2D {
	double latitude;
	double longitude;
} CLLocationCoordinate2D;

typedef struct shared_ptr<MNScoutQPLListener> {
	MNScoutQPLListener __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<MNScoutQPLListener>;

typedef struct _compressed_pair<facebook::mobile::xplat::executor::InlineSyncExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor> > {
	InlineSyncExecutor __first_;
} compressed_pair<facebook::mobile::xplat::executor::InlineSyncExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor> >;

typedef struct unique_ptr<facebook::mobile::xplat::executor::InlineSyncExecutor, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor> > {
	compressed_pair<facebook::mobile::xplat::executor::InlineSyncExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor> > __ptr_;
} unique_ptr<facebook::mobile::xplat::executor::InlineSyncExecutor, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor> >;

typedef struct _compressed_pair<facebook::audiofiltercore::IAudioEffect *, std::__1::default_delete<facebook::audiofiltercore::IAudioEffect> > {
	IAudioEffect __first_;
} compressed_pair<facebook::audiofiltercore::IAudioEffect *, std::__1::default_delete<facebook::audiofiltercore::IAudioEffect> >;

typedef struct unique_ptr<facebook::audiofiltercore::IAudioEffect, std::__1::default_delete<facebook::audiofiltercore::IAudioEffect> > {
	compressed_pair<facebook::audiofiltercore::IAudioEffect *, std::__1::default_delete<facebook::audiofiltercore::IAudioEffect> > __ptr_;
} unique_ptr<facebook::audiofiltercore::IAudioEffect, std::__1::default_delete<facebook::audiofiltercore::IAudioEffect> >;

typedef struct _compressed_pair<float *, std::__1::allocator<float> > {
	float __first_;
} compressed_pair<float *, std::__1::allocator<float> >;

typedef struct vector<float, std::__1::allocator<float> > {
	float __begin_;
	float __end_;
	compressed_pair<float *, std::__1::allocator<float> > __end_cap_;
} vector<float, std::__1::allocator<float> >;

typedef struct __CVBuffer* CVBufferRef;

typedef struct FBWebRTCLogWrapper* FBWebRTCLogWrapperRef;

typedef struct FBWebRTCCallOverlayAnchorsWithOffset {
	long long anchors;
	CGSize offset;
} FBWebRTCCallOverlayAnchorsWithOffset;

typedef struct {
	long long field1;
	int field2;
	unsigned field3;
	long long field4;
} SCD_Struct_FB27;

typedef struct {
	SCD_Struct_FB27 field1;
	SCD_Struct_FB27 field2;
} SCD_Struct_FB28;

typedef struct {
	double field1;
	double field2;
	CGPoint field3;
} SCD_Struct_FB29;

typedef struct {
	CLLocationCoordinate2D center;
	CGPoint span;
} SCD_Struct_FB30;

typedef struct {
	CGPoint field1;
	CLLocationCoordinate2D field2;
} SCD_Struct_FB31;

typedef struct {
	BOOL scrollViewWillBeginDragging;
	BOOL scrollViewDidScroll;
	BOOL scrollViewWillEndDragging;
	BOOL scrollViewDidEndDecelarating;
	BOOL scrollViewDidEndDragging;
	BOOL didUpdateContentSize;
	BOOL didFinishLayoutWithSize;
	BOOL willEnterFullscreenStoryBlock;
	BOOL didExitFullscreenStoryBlock;
	BOOL willBeginTransition;
	BOOL didBeginTransition;
	BOOL didUpdateTransition;
	BOOL willFinishTransition;
	BOOL didFinishTransition;
} SCD_Struct_FB32;

typedef struct {
	BOOL field1;
	BOOL field2;
	BOOL field3;
	BOOL field4;
	BOOL field5;
} SCD_Struct_FB33;

typedef struct {
	double bounciness;
	double speed;
	CGPoint velocity;
} SCD_Struct_FB34;

typedef struct {
	float x;
	float y;
	float z;
} SCD_Struct_FB35;

typedef union GLKVector3 {
	SCD_Struct_FB35 field1;
	SCD_Struct_FB35 field2;
	SCD_Struct_FB35 field3;
	float v[3];
} GLKVector3;

typedef struct {
	GLKVector3 v;
	float s;
} SCD_Struct_FB37;

typedef struct {
	float x;
	float y;
	float z;
	float w;
} SCD_Struct_FB38;

typedef union GLKQuaternion {
	SCD_Struct_FB37 field1;
	SCD_Struct_FB38 field2;
	float q[4];
} GLKQuaternion;

typedef struct CGColor* CGColorRef;

typedef struct FBColorMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	/*function pointer*/void* ;
	unsigned char red;
	C) r;
	/*function pointer*/void* ;
	unsigned char green;
	C) g;
	/*function pointer*/void* ;
	unsigned char blue;
	C) b;
	/*function pointer*/void* ;
	double alpha;
	d) a;
} FBColorMetrics;

typedef struct FBShadowMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	CGSize offset;
	double blur;
	FBColorMetrics color;
} FBShadowMetrics;

typedef struct FBTextMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	NSString* fontName;
	double size;
	double lineHeight;
	double kerning;
	double wordKerning;
	FBColorMetrics color;
	FBShadowMetrics shadow;
	unsigned long long capitalizationStyle;
	unsigned long long underlineStyle;
	FBColorMetrics backgroundColor;
	long long alignment;
} FBTextMetrics;

typedef struct CKTypedComponentAction<> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<>;

typedef struct FBNARelatedArticleTextMetrics {
	unsigned long long backgroundColor;
	double fontSize;
	unsigned long long fontWeight;
	double lineHeight;
	unsigned long long textColor;
	unsigned long long maximumNumberOfLines;
} FBNARelatedArticleTextMetrics;

typedef struct FBNAShadowAttributes {
	double opacity;
	double radius;
	CGSize offset;
} FBNAShadowAttributes;

typedef struct FBNARelatedArticleMetrics {
	unsigned long long backgroundColor;
	FBNAShadowAttributes shadowAttributes;
	unsigned long long borderColor;
	double borderWidth;
	unsigned char visualStyle;
	unsigned char placement;
	UIEdgeInsets sectionInsets;
	double sectionMaxWidth;
	CGSize coverImageSize;
	unsigned long long maximumNumberOfTextLines;
	FBNARelatedArticleTextMetrics sectionTitleMetrics;
	FBNARelatedArticleTextMetrics kickerMetrics;
	FBNARelatedArticleTextMetrics titleMetrics;
	FBNARelatedArticleTextMetrics summaryMetrics;
	FBNARelatedArticleTextMetrics publisherNameMetrics;
	FBNARelatedArticleTextMetrics sponsoredTextMetrics;
	FBNARelatedArticleTextMetrics socialContextMetrics;
	FBNARelatedArticleTextMetrics clickToActionTextMetrics;
} FBNARelatedArticleMetrics;

typedef struct {
	NSMutableDictionary* analyticsExtras;
	BOOL didPreload;
} SCD_Struct_FB48;

typedef struct {
	FBNativeArticleController* articleController;
	FBMemModelObject<FBQueriedNodeFieldsProtocol>* node;
	NSError* error;
} SCD_Struct_FB49;

typedef struct shared_ptr<facebook::mobile::graphstore::detail::FBTreeImpl> {
	FBTreeImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mobile::graphstore::detail::FBTreeImpl>;

typedef struct FBTree {
	shared_ptr<facebook::mobile::graphstore::detail::FBTreeImpl> _impl;
} FBTree;

typedef struct FBTarotDigestAttachmentComponent {
	FBTree _fbtree;
} FBTarotDigestAttachmentComponent;

typedef struct shared_ptr<folly::SharedMutexImpl<false> > {
	SharedMutexImpl<false, void, std::atomic, false> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<folly::SharedMutexImpl<false> >;

typedef struct shared_ptr<FB::Input<double> > {
	Input<double> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Input<double> >;

typedef struct shared_ptr<const FB::Tarot::AnalyticsData> {
	AnalyticsData __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<const FB::Tarot::AnalyticsData>;

typedef struct AnalyticsData {
	NSMutableDictionary* _data;
	shared_ptr<const FB::Tarot::AnalyticsData> _previous;
} AnalyticsData;

typedef struct SessionToolbox {
	FBUserSession* session;
	<FBIntentHandler>* intentHandler;
	<FBNavigationCoordinator>* navigationCoordinator;
	FBTarotRenderersRegistry* renderersRegistry;
	AnalyticsData sessionAnalyticsData;
	shared_ptr<FB::Input<double> > cardIndexInput;
	shared_ptr<folly::SharedMutexImpl<false> > disableHorizontalTapNavigationMutex;
} SessionToolbox;

typedef struct shared_ptr<const FB::Tarot::CardToolbox> {
	CardToolbox __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<const FB::Tarot::CardToolbox>;

typedef struct Maybe<const FB::Tarot::CardToolbox> {
	shared_ptr<const FB::Tarot::CardToolbox> _value;
} Maybe<const FB::Tarot::CardToolbox>;

typedef struct _compressed_pair<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > *, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > > {
	tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > __first_;
} compressed_pair<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > *, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > >;

typedef struct vector<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > > {
	tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > __begin_;
	tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > __end_;
	compressed_pair<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > *, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > > __end_cap_;
} vector<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >, std::__1::allocator<std::__1::tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > >;

typedef struct CKTypedComponentAction<NSString *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<NSString *>;

typedef struct Either<FBTarotImageEntity *, FBTarotVideoEntity *> {
	FBTarotImageEntity* _left;
	FBTarotVideoEntity* _right;
	BOOL _isLeft;
} Either<FBTarotImageEntity *, FBTarotVideoEntity *>;

typedef struct _tuple_impl<std::__1::__tuple_indices<0, 1, 2>, NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > {
	NSString* value;
	unsigned long long value;
	Either<FBTarotImageEntity *, FBTarotVideoEntity *> value;
} tuple_impl<std::__1::__tuple_indices<0, 1, 2>, NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >;

typedef struct tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > {
	tuple_impl<std::__1::__tuple_indices<0, 1, 2>, NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > base_;
} tuple<NSString *, unsigned long, FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >;

typedef struct shared_ptr<FB::Private::LiveSignal<FBTarotFeedbackEntity *> > {
	LiveSignal<FBTarotFeedbackEntity *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<FBTarotFeedbackEntity *> >;

typedef struct Signal<FBTarotFeedbackEntity *> {
	shared_ptr<FB::Private::LiveSignal<FBTarotFeedbackEntity *> > _liveSignal;
} Signal<FBTarotFeedbackEntity *>;

typedef struct shared_ptr<const FB::Tarot::SessionToolbox> {
	SessionToolbox __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<const FB::Tarot::SessionToolbox>;

typedef struct Maybe<const FB::Tarot::SessionToolbox> {
	shared_ptr<const FB::Tarot::SessionToolbox> _value;
} Maybe<const FB::Tarot::SessionToolbox>;

typedef struct shared_ptr<FB::Input<bool> > {
	Input<bool> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Input<bool> >;

typedef struct MNTypingCellLayoutSpec {
	double totalHeight;
	CGRect bubbleFrame;
	UIEdgeInsets bubbleContentInset;
	CGRect profileImageFrame;
} MNTypingCellLayoutSpec;

typedef struct MNBubbleViewAttributes {
	unsigned long long roundedCorners;
	unsigned long long displayType;
	unsigned long long type;
	unsigned long long position;
	unsigned long long section;
	BOOL highlighted;
} MNBubbleViewAttributes;

typedef struct shared_ptr<FB::Private::LiveSignal<unsigned long> > {
	LiveSignal<unsigned long> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<unsigned long> >;

typedef struct Signal<unsigned long> {
	shared_ptr<FB::Private::LiveSignal<unsigned long> > _liveSignal;
} Signal<unsigned long>;

typedef struct CKTypedComponentAction<FBTarotDigestEntity *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<FBTarotDigestEntity *>;

typedef struct shared_ptr<FB::Private::LiveSignal<double> > {
	LiveSignal<double> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<double> >;

typedef struct Signal<double> {
	shared_ptr<FB::Private::LiveSignal<double> > _liveSignal;
} Signal<double>;

typedef struct shared_ptr<FB::Private::LiveSignal<FBTarotCardRenderableAppearance> > {
	LiveSignal<FBTarotCardRenderableAppearance> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<FBTarotCardRenderableAppearance> >;

typedef struct Signal<FBTarotCardRenderableAppearance> {
	shared_ptr<FB::Private::LiveSignal<FBTarotCardRenderableAppearance> > _liveSignal;
} Signal<FBTarotCardRenderableAppearance>;

typedef struct shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > {
	LiveSignal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > >;

typedef struct Signal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > {
	shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > _liveSignal;
} Signal<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > >;

typedef struct shared_ptr<FB::Private::LiveSignal<nullptr_t> > {
	LiveSignal<nullptr_t> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<nullptr_t> >;

typedef struct Signal<nullptr_t> {
	shared_ptr<FB::Private::LiveSignal<nullptr_t> > _liveSignal;
} Signal<nullptr_t>;

typedef struct _compressed_pair<FB::Input<double> *, std::__1::default_delete<FB::Input<double> > > {
	Input<double> __first_;
} compressed_pair<FB::Input<double> *, std::__1::default_delete<FB::Input<double> > >;

typedef struct unique_ptr<FB::Input<double>, std::__1::default_delete<FB::Input<double> > > {
	compressed_pair<FB::Input<double> *, std::__1::default_delete<FB::Input<double> > > __ptr_;
} unique_ptr<FB::Input<double>, std::__1::default_delete<FB::Input<double> > >;

typedef struct _compressed_pair<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > *, std::__1::default_delete<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > > {
	Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > __first_;
} compressed_pair<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > *, std::__1::default_delete<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > >;

typedef struct unique_ptr<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > >, std::__1::default_delete<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > > {
	compressed_pair<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > *, std::__1::default_delete<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > > __ptr_;
} unique_ptr<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > >, std::__1::default_delete<FB::Input<std::__1::vector<FBTarotCardChromeActionItem, std::__1::allocator<FBTarotCardChromeActionItem> > > > >;

typedef struct shared_ptr<FB::Input<NSString *> > {
	Input<NSString *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Input<NSString *> >;

typedef struct shared_ptr<FB::Private::LiveSignal<NSString *> > {
	LiveSignal<NSString *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<NSString *> >;

typedef struct Signal<NSString *> {
	shared_ptr<FB::Private::LiveSignal<NSString *> > _liveSignal;
} Signal<NSString *>;

typedef struct shared_ptr<std::__1::mutex> {
	mutex __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<std::__1::mutex>;

typedef struct shared_ptr<FB::Input<nullptr_t> > {
	Input<nullptr_t> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Input<nullptr_t> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)> > >;

typedef struct unordered_map<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox), std::__1::hash<Class>, std::__1::equal_to<Class>, std::__1::allocator<std::__1::pair<const Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)> > > {
	hash_table<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)> > > __table_;
} unordered_map<Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox), std::__1::hash<Class>, std::__1::equal_to<Class>, std::__1::allocator<std::__1::pair<const Class, UIViewController<FBTarotCardViewControllerProtocol> *(*)(id<FBTarotCardEntityProtocol>, FB::Tarot::CardToolbox)> > >;

typedef struct _compressed_pair<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers *, std::__1::default_delete<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers> > {
	FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers __first_;
} compressed_pair<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers *, std::__1::default_delete<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers> >;

typedef struct unique_ptr<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers, std::__1::default_delete<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers> > {
	compressed_pair<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers *, std::__1::default_delete<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers> > __ptr_;
} unique_ptr<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers, std::__1::default_delete<const FBTarotAnalyticsLoggingViewControllerAnalyticsLoggers> >;

typedef struct _compressed_pair<FB::Input<FBTarotCardRenderableAppearance> *, std::__1::default_delete<FB::Input<FBTarotCardRenderableAppearance> > > {
	Input<FBTarotCardRenderableAppearance> __first_;
} compressed_pair<FB::Input<FBTarotCardRenderableAppearance> *, std::__1::default_delete<FB::Input<FBTarotCardRenderableAppearance> > >;

typedef struct unique_ptr<FB::Input<FBTarotCardRenderableAppearance>, std::__1::default_delete<FB::Input<FBTarotCardRenderableAppearance> > > {
	compressed_pair<FB::Input<FBTarotCardRenderableAppearance> *, std::__1::default_delete<FB::Input<FBTarotCardRenderableAppearance> > > __ptr_;
} unique_ptr<FB::Input<FBTarotCardRenderableAppearance>, std::__1::default_delete<FB::Input<FBTarotCardRenderableAppearance> > >;

typedef struct _compressed_pair<std::__1::tuple<CAAnimation *, NSString *> *, std::__1::allocator<std::__1::tuple<CAAnimation *, NSString *> > > {
	tuple<CAAnimation *, NSString *> __first_;
} compressed_pair<std::__1::tuple<CAAnimation *, NSString *> *, std::__1::allocator<std::__1::tuple<CAAnimation *, NSString *> > >;

typedef struct vector<std::__1::tuple<CAAnimation *, NSString *>, std::__1::allocator<std::__1::tuple<CAAnimation *, NSString *> > > {
	tuple<CAAnimation *, NSString *> __begin_;
	tuple<CAAnimation *, NSString *> __end_;
	compressed_pair<std::__1::tuple<CAAnimation *, NSString *> *, std::__1::allocator<std::__1::tuple<CAAnimation *, NSString *> > > __end_cap_;
} vector<std::__1::tuple<CAAnimation *, NSString *>, std::__1::allocator<std::__1::tuple<CAAnimation *, NSString *> > >;

typedef struct _compressed_pair<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> *, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > {
	Either<FBTarotImageEntity *, FBTarotVideoEntity *> __first_;
} compressed_pair<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> *, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > >;

typedef struct vector<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *>, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > {
	Either<FBTarotImageEntity *, FBTarotVideoEntity *> __begin_;
	Either<FBTarotImageEntity *, FBTarotVideoEntity *> __end_;
	compressed_pair<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> *, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > > __end_cap_;
} vector<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *>, std::__1::allocator<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > >;

typedef struct CKTypedComponentAction<CGPoint> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<CGPoint>;

typedef struct shared_ptr<CGRect> {
	CGRect __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<CGRect>;

typedef struct Maybe<CGRect> {
	shared_ptr<CGRect> _value;
} Maybe<CGRect>;

typedef struct {
	double scale;
	CGRect bounds;
	double rotation;
	CGPoint center;
	BOOL hasContent;
} SCD_Struct_MN114;

typedef struct FBScrollViewInteractionState {
	BOOL tracking;
	BOOL dragging;
	BOOL decelerating;
	BOOL programmaticallyScrolling;
} FBScrollViewInteractionState;

typedef struct FBScrollViewState {
	CGRect bounds;
	CGPoint contentOffset;
	CGSize contentSize;
	UIEdgeInsets contentInset;
	double viewPortWidth;
	double viewPortHeight;
	FBScrollViewInteractionState interactionState;
} FBScrollViewState;

typedef struct _compressed_pair<FBTrackedVideoContainer *, std::__1::allocator<FBTrackedVideoContainer> > {
	FBTrackedVideoContainer __first_;
} compressed_pair<FBTrackedVideoContainer *, std::__1::allocator<FBTrackedVideoContainer> >;

typedef struct vector<FBTrackedVideoContainer, std::__1::allocator<FBTrackedVideoContainer> > {
	FBTrackedVideoContainer __begin_;
	FBTrackedVideoContainer __end_;
	compressed_pair<FBTrackedVideoContainer *, std::__1::allocator<FBTrackedVideoContainer> > __end_cap_;
} vector<FBTrackedVideoContainer, std::__1::allocator<FBTrackedVideoContainer> >;

typedef struct FBPageComponentFlowTextInputWithTitleComponentConfiguration {
	long long keyboardType;
	BOOL allowMultipleLines;
	NSString* placeholder;
	NSString* defaultValue;
	NSString* errorMessage;
	/*^block*/id inputValidationBlock;
	BOOL forceOptional;
	BOOL hideBottomSeperator;
	BOOL hideTitle;
} FBPageComponentFlowTextInputWithTitleComponentConfiguration;

typedef struct FBPageComponentFlowTextInputWithTitleComponentActions {
	CKTypedComponentAction<> textChangedAction;
	CKTypedComponentAction<> didBeginEditingAction;
	CKTypedComponentAction<> didEndEditingAction;
} FBPageComponentFlowTextInputWithTitleComponentActions;

typedef struct {
	CGRect field1;
	CGRect field2;
	double field3;
	long long field4;
} SCD_Struct_MN121;

typedef struct {
	UIEdgeInsets field1;
	CGSize field2;
	CGSize field3;
	CGSize field4;
	CGRect field5;
} SCD_Struct_MN122;

typedef struct CGImage* CGImageRef;

typedef struct KeyboardConfiguration {
	long long interfaceOrientation;
	double keyboardHeight;
} KeyboardConfiguration;

typedef struct {
	CGRect beginFrame;
	CGRect endFrame;
	double animationDuration;
	long long animationCurve;
} SCD_Struct_MN125;

typedef struct FBComponentViewControllerWildeContext {
	FBUserSession* session;
	<FBNavigationCoordinator>* navigationCoordinator;
	<FBIntentHandler>* intentHandler;
	FBListLogger* logger;
	FBScenePath* scenePath;
	NSString* analyticsModule;
} FBComponentViewControllerWildeContext;

typedef struct FBListViewCollectionComponentOptions {
	UIColor* backgroundColor;
	BOOL hasInitialLoadingView;
	BOOL hasPullToRefresh;
	FBPullToRefreshViewConfiguration* pullToRefreshViewConfiguration;
	BOOL hasViewStateManager;
	UIView<FBLoadingView>* initialLoadingView;
	NSString* noContentTextString;
	UIView* noContentView;
	double bottomScrollBuffer;
	BOOL shouldCancelTouchesWhenScrolling;
	UICollectionViewFlowLayout* flowLayout;
	BOOL useComponentWidth;
	BOOL alwaysBounceVertical;
	BOOL showsHorizontalScrollIndicator;
	double contentWidth;
	<FBListViewKitScrollEventListener>* scrollEventListener;
	NSDictionary* componentContextFunctionData;
	NSDictionary* sectionComponentProviderFunctionData;
	/*function pointer*/void* workingRangeControllerItemViewStateIdentifierFactory;
} FBListViewCollectionComponentOptions;

typedef struct {
	double fontSize;
	double liveLabelHorizontalPadding;
	double labelVerticalPadding;
	double countLabelHorizontalPadding;
	double liveToCountHorizontalSpacing;
	double liveToCountVerticalSpacing;
	double glyphToCountSpacing;
} SCD_Struct_FB128;

typedef struct MNPaymentsActorProfileViewParameters {
	CGSize profilePictureViewSize;
	double profilePictureViewCornerRadius;
	double profilePictureTopPadding;
	double profilePictureLeftPadding;
	double textViewLeftPadding;
	double textViewRightPadding;
	double bottomSeparatorThickness;
	double bottomSeparatorSidePadding;
	double minimalHeight;
	double displayNameTextFontSize;
} MNPaymentsActorProfileViewParameters;

typedef struct CKTypedComponentAction<NSString *, NSString *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<NSString *, NSString *>;

typedef struct delegateFlag {
	unsigned delegateHandleLikeButtonTap : 1;
	unsigned delegateHandleCommentButtonTap : 1;
	unsigned delegateHandleFeedbackSentenceTap : 1;
	unsigned delegateHandleTagButtonTap : 1;
	unsigned delegateHandleMoreButtonTap : 1;
	unsigned delegateHandleInterestingResultTap : 1;
	unsigned delegateHandleDoneButtonTap : 1;
	unsigned delegateHandleCaptionExpansion : 1;
	unsigned delegateHandleInstagramButtonTap : 1;
	unsigned delegateHandleAddLocationButtonTap : 1;
	unsigned delegateHandleShareButtonTap : 1;
	unsigned delegateHandleMessengerButtonTap : 1;
	unsigned delegateHandleMessengerSendButtonTap : 1;
	unsigned delegateHandleMessengerMessageButtonTap : 1;
} delegateFlag;

typedef const struct FBGraphQLFieldSet* FBGraphQLFieldSetRef;

typedef struct UIOffset {
	double horizontal;
	double vertical;
} UIOffset;

typedef struct FBExternalServiceAuthViewControllerConfigurationT {
	BOOL showAlertOnLoginSuccess;
	BOOL dismissViewControllerOnLoginCompletion;
} FBExternalServiceAuthViewControllerConfigurationT;

typedef const struct mc_gatekeeper_specifier_t* mc_gatekeeper_specifier_tRef;

typedef struct CKTypedComponentAction<MNTopTabBarItem *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<MNTopTabBarItem *>;

typedef struct FBPhotoStoryOptions {
	BOOL omitStoryHeader;
	BOOL alwaysShowSearchPivots;
	BOOL enableRedesign;
	NSString* composerActivationSource;
	NSString* focusedCommentID;
	BOOL openInTaggingMode;
	BOOL openInDimmedMode;
	long long darkThemePresentationMode;
	long long dimmingTimerInterval;
	<FBDisplayableMediaViewProvider>* photoViewProvider;
} FBPhotoStoryOptions;

typedef struct _long {
	char* __data_;
	unsigned long long __size_;
	unsigned long long __cap_;
} long;

typedef struct {
	unsigned char __size_;
} SCD_Struct_FB139;

typedef struct _raw {
	unsigned long long __words[3];
} raw;

typedef struct _short {
	char __data_[23];
	SCD_Struct_FB139 ;
} short;

typedef struct _rep {
	/*function pointer*/void* ;
	long __l;
	short __s;
	const aw) __r;
} rep;

typedef struct _compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > {
	const ep __first_;
} compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {
	compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > __r_;
} basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >;

typedef struct RtcAppConfig {
	unsigned connectionDroppedTimeoutMs;
	BOOL enableAudioLevelUpdate;
	BOOL useP2PConnection;
	BOOL useTimeSeriesLogging;
	BOOL tslogStartImmediately;
	int startVideoBitrateKbps;
	int minVideoBitrateKbps;
	int maxVideoBitrateKbps;
	int bitrateScalingGranularity;
	int bitrateScalingMinHeight;
	int bitrateScalingMaxHeight;
	int codecFramerate;
	int audioRtcpIntervalOverride;
	int h264AutomaticResize;
	int h264MaxEncodeFailureRetry;
	BOOL h264UseCABAC;
	BOOL screamEnabled;
	BOOL forceAacVoip;
	BOOL audioInterruptionFullRestart;
	BOOL useIosAudioUnitWrapper;
	BOOL audioDeviceDeadSilenceLogging;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > userCapabilities;
	BOOL bypassVoiceProcessingLiveRtc1p;
	int useH264;
	BOOL h264ResetEncoderOnError;
} RtcAppConfig;

typedef struct _compressed_pair<WebRTCEngine *, std::__1::default_delete<WebRTCEngine> > {
	WebRTCEngine __first_;
} compressed_pair<WebRTCEngine *, std::__1::default_delete<WebRTCEngine> >;

typedef struct unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine> > {
	compressed_pair<WebRTCEngine *, std::__1::default_delete<WebRTCEngine> > __ptr_;
} unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine> >;

typedef struct weak_ptr<facebook::rtc::MediaCaptureSink> {
	MediaCaptureSink __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<facebook::rtc::MediaCaptureSink>;

typedef struct weak_ptr<facebook::rtc::MediaInterface> {
	MediaInterface __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<facebook::rtc::MediaInterface>;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> > > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> > >;

typedef struct _list_node_base<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> {
	__list_node_base<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> __prev_;
	__list_node_base<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> __next_;
} list_node_base<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *>;

typedef struct list<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, std::__1::allocator<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> > > > {
	list_node_base<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> __end_;
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, void *> > > __size_alloc_;
} list<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> >, std::__1::allocator<std::__1::unique_ptr<FBWebRTCVoiceProcessorWrapper, std::__1::default_delete<FBWebRTCVoiceProcessorWrapper> > > >;

typedef struct weak_ptr<facebook::multiway::RTCConferenceCall> {
	RTCConferenceCall __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<facebook::multiway::RTCConferenceCall>;

typedef struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSString *> > > {
	Promise<FB::Functional::Either<NSError *, NSString *> > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSString *> > >;

typedef struct PromiseEither<NSError *, NSString *> {
	shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSString *> > > _promise;
} PromiseEither<NSError *, NSString *>;

typedef struct FB360PhotoViewportParams {
	double pitch;
	double yaw;
} FB360PhotoViewportParams;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true> >;

typedef struct _tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void *> __left_;
} tree_end_node<std::__1::__tree_node_base<void *> *>;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, void *> > >;

typedef struct _tree<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true> > __pair3_;
} tree<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)> > >;

typedef struct map<unsigned long, void ()(UIView *, bool *), std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, void ()(UIView *, bool *)> > > {
	tree<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, void ()(UIView *, bool *)>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, void ()(UIView *, bool *)> > > __tree_;
} map<unsigned long, void ()(UIView *, bool *), std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, void ()(UIView *, bool *)> > >;

typedef struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > > {
	vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > >;

typedef struct CKComponentLayout {
	CKComponent* component;
	CGSize size;
	shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > > children;
	NSDictionary* extra;
} CKComponentLayout;

typedef struct _compressed_pair<FBUFIButtonRowItem *, std::__1::allocator<FBUFIButtonRowItem> > {
	FBUFIButtonRowItem __first_;
} compressed_pair<FBUFIButtonRowItem *, std::__1::allocator<FBUFIButtonRowItem> >;

typedef struct vector<FBUFIButtonRowItem, std::__1::allocator<FBUFIButtonRowItem> > {
	FBUFIButtonRowItem __begin_;
	FBUFIButtonRowItem __end_;
	compressed_pair<FBUFIButtonRowItem *, std::__1::allocator<FBUFIButtonRowItem> > __end_cap_;
} vector<FBUFIButtonRowItem, std::__1::allocator<FBUFIButtonRowItem> >;

typedef struct CKTypedComponentAction<CKComponent *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<CKComponent *>;

typedef struct FBUFICountsComponentOptions {
	BOOL renderEmptyCounts;
	BOOL avoidOcuppyingWholeConstrainedWidth;
	unsigned long long suppressedCounts;
	CKTypedComponentAction<> action;
} FBUFICountsComponentOptions;

typedef struct _compressed_pair<FBUFICountComponent *__strong *, std::__1::allocator<FBUFICountComponent *> > {
	id __first_;
} compressed_pair<FBUFICountComponent *__strong *, std::__1::allocator<FBUFICountComponent *> >;

typedef struct vector<FBUFICountComponent *, std::__1::allocator<FBUFICountComponent *> > {
	id __begin_;
	id __end_;
	compressed_pair<FBUFICountComponent *__strong *, std::__1::allocator<FBUFICountComponent *> > __end_cap_;
} vector<FBUFICountComponent *, std::__1::allocator<FBUFICountComponent *> >;

typedef struct _compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild> > {
	CKStackLayoutComponentChild __first_;
} compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild> >;

typedef struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild> > {
	CKStackLayoutComponentChild __begin_;
	CKStackLayoutComponentChild __end_;
	compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild> > __end_cap_;
} vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild> >;

typedef struct FBUFITopReactionsComponentGraphQL {
	FBTree _fbtree;
} FBUFITopReactionsComponentGraphQL;

typedef struct _compressed_pair<FBUFITopReactionsAnimationSourceDescriptor *, std::__1::allocator<FBUFITopReactionsAnimationSourceDescriptor> > {
	FBUFITopReactionsAnimationSourceDescriptor __first_;
} compressed_pair<FBUFITopReactionsAnimationSourceDescriptor *, std::__1::allocator<FBUFITopReactionsAnimationSourceDescriptor> >;

typedef struct vector<FBUFITopReactionsAnimationSourceDescriptor, std::__1::allocator<FBUFITopReactionsAnimationSourceDescriptor> > {
	FBUFITopReactionsAnimationSourceDescriptor __begin_;
	FBUFITopReactionsAnimationSourceDescriptor __end_;
	compressed_pair<FBUFITopReactionsAnimationSourceDescriptor *, std::__1::allocator<FBUFITopReactionsAnimationSourceDescriptor> > __end_cap_;
} vector<FBUFITopReactionsAnimationSourceDescriptor, std::__1::allocator<FBUFITopReactionsAnimationSourceDescriptor> >;

typedef struct FBSearchResultsStackLinkFIGComponentStyle {
	BOOL showInlineShareCount;
	BOOL titleUseHeaderStyle;
	BOOL highlightHostName;
	BOOL shouldOpenPulseIfTapped;
	BOOL flipTimeHostOrder;
	BOOL showSeparator;
} FBSearchResultsStackLinkFIGComponentStyle;

typedef struct FBNativeTemplateTextComponentOptions {
	CKTypedComponentAction<> tapEntityActionOnTruncation;
	BOOL disableTapEntityActionOnTruncation;
	NSNumber* overridenMaxLines;
} FBNativeTemplateTextComponentOptions;

typedef struct {
	UIEdgeInsets field1;
	unsigned long long field2;
	BOOL field3;
	id field4;
	double field5;
	BOOL field6;
	double field7;
	double field8;
	double field9;
	id field10;
	id field11;
} SCD_Struct_FB177;

typedef struct {
	float m00;
	float m01;
	float m02;
	float m03;
	float m10;
	float m11;
	float m12;
	float m13;
	float m20;
	float m21;
	float m22;
	float m23;
	float m30;
	float m31;
	float m32;
	float m33;
} SCD_Struct_FB178;

typedef union GLKMatrix4 {
	SCD_Struct_FB178 field1;
	float m[16];
} GLKMatrix4;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} SCD_Struct_FB180;

typedef struct {
	SCD_Struct_FB180 start;
	SCD_Struct_FB180 duration;
} SCD_Struct_FB181;

typedef struct FBRapidReportingContainerComponentActions {
	CKTypedComponentAction<> help;
	CKTypedComponentAction<> cancel;
	CKTypedComponentAction<> submit;
	CKTypedComponentAction<> done;
	CKTypedComponentAction<> userInput;
} FBRapidReportingContainerComponentActions;

typedef struct FBRapidReportingGridStyle {
	double verticalSpacing;
	double horizontalSpacing;
} FBRapidReportingGridStyle;

typedef struct _compressed_pair<FBRapidReportingGridComponentChild *, std::__1::allocator<FBRapidReportingGridComponentChild> > {
	FBRapidReportingGridComponentChild __first_;
} compressed_pair<FBRapidReportingGridComponentChild *, std::__1::allocator<FBRapidReportingGridComponentChild> >;

typedef struct vector<FBRapidReportingGridComponentChild, std::__1::allocator<FBRapidReportingGridComponentChild> > {
	FBRapidReportingGridComponentChild __begin_;
	FBRapidReportingGridComponentChild __end_;
	compressed_pair<FBRapidReportingGridComponentChild *, std::__1::allocator<FBRapidReportingGridComponentChild> > __end_cap_;
} vector<FBRapidReportingGridComponentChild, std::__1::allocator<FBRapidReportingGridComponentChild> >;

typedef struct {
	_ field1;
	NSRange field2;
	_ field3;
	NSRange field4;
} SCD_Struct_FB186;

typedef struct {
	long long field1;
	double field2;
	float field3;
} SCD_Struct_FB187;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_FB188;

typedef struct FBFramedImageViewConstraint {
	double borderWidth;
	CGSize borderImageSize;
} FBFramedImageViewConstraint;

typedef struct FBPhotoAssetPreparerConfiguration {
	BOOL faceRecognitionEnabled;
	BOOL networkAccessAllowed;
	BOOL taggingEnabled;
} FBPhotoAssetPreparerConfiguration;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct FBTagViewMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	double tagVerticalOffset;
	double tagHorizontalOffset;
	double tagMaximumVerticalDownRatio;
	double tagMaximumHorizontalDownRatio;
	double tagRectOuterMargin;
	double tagFrameWidthPadding;
	double tagBorderPadding;
	double tagFrameTextBoxVerticalPadding;
	double removeButtonWidth;
	double tagRoundedCornerRadius;
	double tagArrowHeight;
	double tagHalfArrowWidth;
	double tagStrokeLineWidth;
	double tagOverlapThreshold;
	double tagOutOfScreenSizeThreshold;
	double leftPaddingForRemoveImage;
	double rightPaddingForRemoveImage;
	CGSize textShadowOffsetSize;
	unsigned long long textFontSize;
	UIColor* textColor;
	UIImage* removeImage;
	long long removeImageContentMode;
	UIColor* strokeColor;
	FBShadowMetrics shadowMetrics;
	UIColor* fillColor;
	BOOL shouldShowTagShadow;
	BOOL shouldFillBackgroundForRemoveImage;
	BOOL shouldBounceWhenTapped;
	BOOL shouldStrokePath;
} FBTagViewMetrics;

typedef struct FBCollectionComponentCellConfig {
	UIColor* cellBackgroundColor;
	UIColor* cellSelectedBackgroundColor;
	BOOL canBecomeFocused;
} FBCollectionComponentCellConfig;

typedef struct FBCollectionComponentOptions {
	UIColor* backgroundColor;
	Class collectionViewClass;
	UICollectionViewFlowLayout* flowLayout;
	UIEdgeInsets contentInset;
	double decelerationRate;
	BOOL useComponentWidth;
	BOOL alwaysBounceVertical;
	BOOL showsHorizontalScrollIndicator;
	BOOL statusBarScrollToTopEnabled;
	long long layoutInvalidationOption;
	BOOL animatedChangesEnabled;
	<FBCollectionComponentItemAppearanceEventListener>* itemAppearanceEventListener;
	<FBComponentScrollEventListener>* scrollEventListener;
	<FBComponentDataSourceScrollEventHandler>* scrollEventHandler;
	FBCollectionComponentCellConfig cellConfig;
	/*function pointer*/void* workingRangeControllerItemViewStateIdentifierFactory;
} FBCollectionComponentOptions;

typedef struct FBTicketLeftRightLayoutComponentOptions {
	BOOL flexShrinkLeft;
	BOOL flexShrinkRight;
} FBTicketLeftRightLayoutComponentOptions;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<NSString *, unsigned long>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned long> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<NSString *, unsigned long>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned long> > >;

typedef struct unordered_map<NSString *, unsigned long, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned long> > > {
	hash_table<std::__1::__hash_value_type<NSString *, unsigned long>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned long> > > __table_;
} unordered_map<NSString *, unsigned long, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned long> > >;

typedef struct FBMediaViewControllerInterruptibleTransitionContext {
	unsigned long long dismissalType;
	FBDisplayableMediaViewProviderContext* mediaViewProviderContext;
	UIView* mediaView;
	<UIViewControllerContextTransitioning>* transitionContext;
	CGPoint velocity;
	BOOL dismissalGestureWasRemoved;
} FBMediaViewControllerInterruptibleTransitionContext;

typedef struct FBMediaViewControllerTransitionDismissingContext {
	unsigned long long dismissalType;
	FBDisplayableMediaViewProviderContext* mediaViewProviderContext;
	id mediaViewOrLayer;
	unsigned long long slideAwayType;
	id transitionContext;
	 <UIViewControllerContextTransitioning>;
	CGPoint velocity;
} FBMediaViewControllerTransitionDismissingContext;

typedef struct FBDisplayableMediaTransitionOptions {
	BOOL omitScaleTransformWhenAnimating;
} FBDisplayableMediaTransitionOptions;

typedef struct {
	unsigned long long initial;
	unsigned long long head;
	unsigned long long tail;
	unsigned long long neck;
	unsigned long long invalid;
} SCD_Struct_FB209;

typedef struct _compressed_pair<webrtc::OpenGles20 *, std::__1::default_delete<webrtc::OpenGles20> > {
	OpenGles20 __first_;
} compressed_pair<webrtc::OpenGles20 *, std::__1::default_delete<webrtc::OpenGles20> >;

typedef struct unique_ptr<webrtc::OpenGles20, std::__1::default_delete<webrtc::OpenGles20> > {
	compressed_pair<webrtc::OpenGles20 *, std::__1::default_delete<webrtc::OpenGles20> > __ptr_;
} unique_ptr<webrtc::OpenGles20, std::__1::default_delete<webrtc::OpenGles20> >;

typedef struct FrameRenderCallback* FrameRenderCallbackRef;

typedef struct {
	double poiYaw;
	double poiPitch;
	double cameraYaw;
	double cameraPitch;
	int poiId;
} SCD_Struct_FB213;

typedef const struct CKTypedComponentAction<UIEvent *>* CKTypedComponentAction<UIEvent *>Ref;

typedef struct CKTypedComponentAction<long, id> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<long, id>;

typedef struct FBComponentViewControllerOptions {
	UIColor* backgroundColor;
	UIView* loadingView;
	UIView* errorView;
} FBComponentViewControllerOptions;

typedef struct FBCameraComponentViewControllerConfiguration {
	BOOL hideNavigationBar;
	BOOL hideStatusBar;
} FBCameraComponentViewControllerConfiguration;

typedef struct _compressed_pair<const CK::ArrayController::Input::Changeset *, std::__1::allocator<const CK::ArrayController::Input::Changeset> > {
	Changeset __first_;
} compressed_pair<const CK::ArrayController::Input::Changeset *, std::__1::allocator<const CK::ArrayController::Input::Changeset> >;

typedef struct vector<const CK::ArrayController::Input::Changeset, std::__1::allocator<const CK::ArrayController::Input::Changeset> > {
	Changeset __begin_;
	Changeset __end_;
	compressed_pair<const CK::ArrayController::Input::Changeset *, std::__1::allocator<const CK::ArrayController::Input::Changeset> > __end_cap_;
} vector<const CK::ArrayController::Input::Changeset, std::__1::allocator<const CK::ArrayController::Input::Changeset> >;

typedef struct type {
	unsigned char __lx[24];
} type;

typedef struct function<FBSectionComponent *(id)> {
	type __buf_;
	__base<FBSectionComponent *(id)> __f_;
} function<FBSectionComponent *(id)>;

typedef struct function<FBSectionComponent *(id, facebook::mobile::graphstore::FBTree)> {
	type __buf_;
	__base<FBSectionComponent *(id, facebook::mobile::graphstore::FBTree)> __f_;
} function<FBSectionComponent *(id, facebook::mobile::graphstore::FBTree)>;

typedef struct function<FBSectionComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)> {
	type __buf_;
	__base<FBSectionComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)> __f_;
} function<FBSectionComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)>;

typedef struct FBGraphQLQuerySectionComponentConfiguration {
	BOOL reloadOnPullToRefresh;
	BOOL refreshOnReappear;
	unsigned long long cacheThresholdInSeconds;
	BOOL shouldTransitionViewStateManager;
	BOOL shouldShowNoContentOnEmptyResult;
	NSString* loggableName;
	id scopeKey;
	id announcer;
	 FBRootGraphQLQuerySectionComponentListenerAnnouncer;
} FBGraphQLQuerySectionComponentConfiguration;

typedef struct atomic<_GLKQuaternion> {
	A_GLKQuaternion __a_;
} atomic<_GLKQuaternion>;

typedef struct atomic<FB360VideoGuidedTourEulerAngles> {
	A? __a_;
} atomic<FB360VideoGuidedTourEulerAngles>;

typedef struct atomic<_GLKMatrix4> {
	A_GLKMatrix4 __a_;
} atomic<_GLKMatrix4>;

typedef struct atomic<_GLKVector3> {
	A_GLKVector3 __a_;
} atomic<_GLKVector3>;

typedef struct atomic<float> {
	Af __a_;
} atomic<float>;

typedef struct atomic<bool> {
	AB __a_;
} atomic<bool>;

typedef struct atomic<double> {
	Ad __a_;
} atomic<double>;

typedef struct {
	float minYaw;
	float maxYaw;
	float minPitch;
	float maxPitch;
	BOOL isYawBounded;
	BOOL isPitchBounded;
} SCD_Struct_FB232;

typedef struct FNFDashAssetPrefetchMetadata {
	BOOL isInMemoryCached;
	BOOL isPrefetched;
	unsigned long long prefetchBytesRequested;
	unsigned long long prefetchBytesReceived;
	unsigned long long prefetchLeadTimeInMS;
	BOOL isPreviouslyKnownURL;
} FNFDashAssetPrefetchMetadata;

typedef struct {
	long long field1;
	long long field2;
	long long field3;
	long long field4;
	long long field5;
	long long field6;
} SCD_Struct_FB234;

typedef struct GLKVector4 {
	float v[4];
} GLKVector4;

typedef struct shared_ptr<facebook::location::ConditionPolicy> {
	ConditionPolicy __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::location::ConditionPolicy>;

typedef struct shared_ptr<facebook::location::PolicyEngineBase> {
	PolicyEngineBase __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::location::PolicyEngineBase>;

typedef struct shared_ptr<(anonymous namespace)::FBCLPlatform> {
	FBCLPlatform __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<(anonymous namespace)::FBCLPlatform>;

typedef struct shared_ptr<facebook::location::RegionPolicy> {
	RegionPolicy __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::location::RegionPolicy>;

typedef struct FBInfiniteHScrollCursorInformation {
	NSString* cursor;
	unsigned long long endReason;
	unsigned long long lastCompletedLoadIdentifier;
} FBInfiniteHScrollCursorInformation;

typedef struct _compressed_pair<FBInfiniteHScrollEdge *, std::__1::allocator<FBInfiniteHScrollEdge> > {
	FBInfiniteHScrollEdge __first_;
} compressed_pair<FBInfiniteHScrollEdge *, std::__1::allocator<FBInfiniteHScrollEdge> >;

typedef struct vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> > {
	FBInfiniteHScrollEdge __begin_;
	FBInfiniteHScrollEdge __end_;
	compressed_pair<FBInfiniteHScrollEdge *, std::__1::allocator<FBInfiniteHScrollEdge> > __end_cap_;
} vector<FBInfiniteHScrollEdge, std::__1::allocator<FBInfiniteHScrollEdge> >;

typedef struct FBCELComponentActionContextEventParams {
	NSArray* trackingCodes;
	NSArray* trackingNodes;
} FBCELComponentActionContextEventParams;

typedef struct FBCELTypedComponentAction<> {
	CKTypedComponentAction<> _action;
	FBCELComponentActionContext* _loggingContext;
	FBCELComponentActionContextEventParams _eventParams;
} FBCELTypedComponentAction<>;

typedef struct shared_ptr<facebook::xplat::module::CxxModule> {
	CxxModule __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::xplat::module::CxxModule>;

typedef struct promise<std::__1::shared_ptr<facebook::react::RCTMessageThread> > {
	__assoc_state<std::__1::shared_ptr<facebook::react::RCTMessageThread> > __state_;
} promise<std::__1::shared_ptr<facebook::react::RCTMessageThread> >;

typedef struct shared_ptr<facebook::react::RCTMessageThread> {
	RCTMessageThread __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::react::RCTMessageThread>;

typedef struct shared_ptr<facebook::react::Instance> {
	Instance __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::react::Instance>;

typedef struct OpaqueJSContext* OpaqueJSContextRef;

typedef struct shared_ptr<facebook::xanalytics::XAnalytics> {
	XAnalytics __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::xanalytics::XAnalytics>;

typedef struct _compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine> > {
	GraphicsEngine __first_;
} compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine> >;

typedef struct unique_ptr<msqrd::fx::GraphicsEngine, std::__1::default_delete<msqrd::fx::GraphicsEngine> > {
	compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine> > __ptr_;
} unique_ptr<msqrd::fx::GraphicsEngine, std::__1::default_delete<msqrd::fx::GraphicsEngine> >;

typedef struct shared_ptr<msqrd::fx::RenderSession> {
	RenderSession __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::fx::RenderSession>;

typedef struct shared_ptr<msqrd::fx::IViewport> {
	IViewport __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::fx::IViewport>;

typedef struct shared_ptr<facebook::arengine::utils::EffectAssetLoader> {
	EffectAssetLoader __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::arengine::utils::EffectAssetLoader>;

typedef struct __CVOpenGLESTextureCache* CVOpenGLESTextureCacheRef;

typedef struct opaque_pthread_rwlock_t {
	long long __sig;
	char __opaque[192];
} opaque_pthread_rwlock_t;

typedef struct ReadWriteLock {
	opaque_pthread_rwlock_t _rwlock;
} ReadWriteLock;

typedef struct CKTypedComponentAction<FIGListCellContentTapType, FBRichTextComponentActionContext *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<FIGListCellContentTapType, FBRichTextComponentActionContext *>;

typedef struct CKTypedComponentAction<bool> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<bool>;

typedef struct {
	BOOL field1;
	UIEdgeInsets field2;
	id field3;
	double field4;
	double field5;
	unsigned long long field6;
	unsigned long long field7;
	BOOL field8;
	BOOL field9;
	CGSize field10;
	unsigned long long field11;
	CKTypedComponentAction<> field12;
} SCD_Struct_FI261;

typedef struct CKTypedComponentAction<NSURL *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<NSURL *>;

typedef struct {
	id field1;
	id field2;
	id field3;
	id field4;
	id field5;
} SCD_Struct_FI263;

typedef struct {
	id field1;
	id field2;
	id field3;
	BOOL field4;
	BOOL field5;
	double field6;
	BOOL field7;
	unsigned long long field8;
	BOOL field9;
	id field10;
	id field11;
} SCD_Struct_FI264;

typedef struct {
	id field1;
	id field2;
	unsigned long long field3;
	BOOL field4;
	BOOL field5;
} SCD_Struct_FI265;

typedef struct {
	id field1;
	BOOL field2;
	BOOL field3;
} SCD_Struct_FI266;

typedef struct {
	BOOL field1;
	BOOL field2;
	unsigned long long field3;
	BOOL field4;
	id field5;
} SCD_Struct_FI267;

typedef struct {
	id field1;
	id field2;
	id field3;
	double field4;
	BOOL field5;
	BOOL field6;
	CKComponentAccessibilityTextAttribute field7;
} SCD_Struct_FI268;

typedef struct {
	id field1;
	id field2;
	id field3;
	double field4;
	BOOL field5;
} SCD_Struct_FI269;

typedef struct YGNode* YGNodeRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct _compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method> > {
	Method __first_;
} compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method> >;

typedef struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method> > {
	compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method> > __ptr_;
} unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method> >;

typedef struct _compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule> > {
	CxxModule __first_;
} compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule> >;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule> > {
	compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule> > __ptr_;
} unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule> >;

typedef struct {
	unsigned long long count;
	double array;
} SCD_Struct_AR276;

typedef struct CGPath* CGPathRef;

typedef struct {
	unsigned long long count;
	double baseLine;
	double lineHeight;
	__CTLine lines;
	double widths;
} SCD_Struct_AR278;

typedef struct {
	unsigned long long field1;
	double field2;
	double field3;
	__CTLine field4;
	double field5;
} SCD_Struct_AR279;

typedef struct CGGradient* CGGradientRef;

typedef struct shared_ptr<msqrd::services::IExternalAssetProvider> {
	IExternalAssetProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::IExternalAssetProvider>;

typedef struct shared_ptr<msqrd::services::IHTTPClientService> {
	IHTTPClientService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::IHTTPClientService>;

typedef struct _tuple_impl<std::__1::__tuple_indices<0, 1>, std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> > {
	shared_ptr<msqrd::services::IHTTPClientService> value;
	shared_ptr<msqrd::services::IExternalAssetProvider> value;
} tuple_impl<std::__1::__tuple_indices<0, 1>, std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> >;

typedef struct tuple<std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> > {
	tuple_impl<std::__1::__tuple_indices<0, 1>, std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> > base_;
} tuple<std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> >;

typedef struct weak_ptr<webrtc::videocapturemodule::VideoCaptureIos> {
	VideoCaptureIos __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<webrtc::videocapturemodule::VideoCaptureIos>;

typedef struct {
	unsigned long long field1;
	CKTypedComponentAction<> field2;
	CKTypedComponentAction<> field3;
	CKTypedComponentAction<> field4;
	id field5;
	BOOL field6;
} SCD_Struct_FI286;

typedef struct {
	BOOL field1;
	id field2;
} SCD_Struct_FI287;

typedef struct {
	id field1;
	id field2;
	BOOL field3;
	id field4;
	unsigned long long field5;
} SCD_Struct_FI288;

typedef struct {
	id field1;
	BOOL field2;
	id field3;
	id field4;
	CKTypedComponentAction<> field5;
} SCD_Struct_FI289;

typedef struct {
	unsigned long long field1;
	id field2;
	BOOL field3;
	id field4;
} SCD_Struct_FI290;

typedef struct {
	id field1;
	id field2;
	BOOL field3;
	unsigned long long field4;
	id field5;
	CKTypedComponentAction<> field6;
} SCD_Struct_FI291;

typedef struct _compressed_pair<facebook::simplesearch::OrderedList<unsigned long long> *, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long> > > {
	bycopy const deredList<unsigned long long> __first_;
} compressed_pair<facebook::simplesearch::OrderedList<unsigned long long> *, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long> > >;

typedef struct unique_ptr<facebook::simplesearch::OrderedList<unsigned long long>, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long> > > {
	compressed_pair<facebook::simplesearch::OrderedList<unsigned long long> *, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long> > > __ptr_;
} unique_ptr<facebook::simplesearch::OrderedList<unsigned long long>, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long> > >;

typedef struct _compressed_pair<facebook::simplesearch::SimpleIndex *, std::__1::default_delete<facebook::simplesearch::SimpleIndex> > {
	SimpleIndex __first_;
} compressed_pair<facebook::simplesearch::SimpleIndex *, std::__1::default_delete<facebook::simplesearch::SimpleIndex> >;

typedef struct unique_ptr<facebook::simplesearch::SimpleIndex, std::__1::default_delete<facebook::simplesearch::SimpleIndex> > {
	compressed_pair<facebook::simplesearch::SimpleIndex *, std::__1::default_delete<facebook::simplesearch::SimpleIndex> > __ptr_;
} unique_ptr<facebook::simplesearch::SimpleIndex, std::__1::default_delete<facebook::simplesearch::SimpleIndex> >;

typedef struct shared_ptr<std::__1::unordered_map<unsigned long long, BootstrapSearchMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, BootstrapSearchMetadata> > > > {
	unordered_map<unsigned long long, BootstrapSearchMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, BootstrapSearchMetadata> > > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<std::__1::unordered_map<unsigned long long, BootstrapSearchMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, BootstrapSearchMetadata> > > >;

typedef struct __CFHTTPMessage* CFHTTPMessageRef;

typedef struct {
	BOOL field1;
	unsigned char field2;
	BOOL field3;
	unsigned long long field4;
} SCD_Struct_RC298;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct YGValue {
	float value;
	int unit;
} YGValue;

typedef struct {
	CGColor field1;
	CGColor field2;
	CGColor field3;
	CGColor field4;
} SCD_Struct_RC301;

typedef struct shared_ptr<facebook::particleemitter::DynamicEmitter> {
	DynamicEmitter __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::particleemitter::DynamicEmitter>;

typedef struct shared_ptr<facebook::particleemitter::OpticalFlowCalculator> {
	OpticalFlowCalculator __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::particleemitter::OpticalFlowCalculator>;

typedef struct FBPlatformInputs {
	/*function pointer*/void* _vptr$PlatformInputs;
	shared_ptr<facebook::particleemitter::OpticalFlowCalculator> _calculator;
	int _rotation;
	BOOL _mirrored;
} FBPlatformInputs;

typedef struct shared_ptr<folly::dynamic> {
	dynamic __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<folly::dynamic>;

typedef struct GLKVector2 {
	float v[2];
} GLKVector2;

typedef struct FBParticleEmitterAnimation {
	UIImage* texture;
	short framerate;
	short numberOfSprites;
	GLKVector2 size;
	short plays;
	unsigned textureIdentifier;
} FBParticleEmitterAnimation;

typedef struct shared_ptr<facebook::lithium::GraphQLLiveQueryImpl> {
	GraphQLLiveQueryImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::lithium::GraphQLLiveQueryImpl>;

typedef const struct CKTypedComponentAction<FBCombinedMessengerPlatformMedia *>* CKTypedComponentAction<FBCombinedMessengerPlatformMedia *>Ref;

typedef struct {
	double videoBitratePerPixel;
	double audioBitrate;
	BOOL enableSegmentedRecording;
	double segmentDuration;
	unsigned long long videoResolution;
	unsigned long long maximumNumberOfAudioSegments;
	unsigned long long sampleBufferQueueSize;
} SCD_Struct_FB310;

typedef struct FBCameraConfiguration {
	BOOL isFlipFrontCameraOutputEnabled;
	long long startingDevicePosition;
	BOOL usesSingleAudioVideoCaptureSession;
	BOOL audioCaptureIgnoreHighPriorityClientNotification;
	BOOL automaticallyConfiguresApplicationAudioSession;
	BOOL videoCapturePreventFrameDrops;
	BOOL canPreConfigureAudioSession;
	BOOL enableEchoCancellation;
} FBCameraConfiguration;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true> > __p3_;
} hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> > > >;

typedef struct unordered_map<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)>, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<std::__1::pair<NSString *const, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> > > > {
	hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> >, FB::ObjcEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> > > > __table_;
} unordered_map<NSString *, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)>, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<std::__1::pair<NSString *const, std::__1::pair<id<FBMPFilter> ()(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> ()(id<FBMPFilter>)> > > >;

typedef struct shared_ptr<msqrd::capture::CaptureEventService> {
	CaptureEventService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::capture::CaptureEventService>;

typedef struct _compressed_pair<facebook::arservicehost::ServiceHostBaseImpl *, std::__1::default_delete<facebook::arservicehost::ServiceHostBaseImpl> > {
	ServiceHostBaseImpl __first_;
} compressed_pair<facebook::arservicehost::ServiceHostBaseImpl *, std::__1::default_delete<facebook::arservicehost::ServiceHostBaseImpl> >;

typedef struct unique_ptr<facebook::arservicehost::ServiceHostBaseImpl, std::__1::default_delete<facebook::arservicehost::ServiceHostBaseImpl> > {
	compressed_pair<facebook::arservicehost::ServiceHostBaseImpl *, std::__1::default_delete<facebook::arservicehost::ServiceHostBaseImpl> > __ptr_;
} unique_ptr<facebook::arservicehost::ServiceHostBaseImpl, std::__1::default_delete<facebook::arservicehost::ServiceHostBaseImpl> >;

typedef struct shared_ptr<msqrd::services::INativeUIControlService> {
	INativeUIControlService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::INativeUIControlService>;

typedef struct shared_ptr<msqrd::services::ILocationDataProvider> {
	ILocationDataProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::ILocationDataProvider>;

typedef struct FaceTrackerConfig {
	int maxFaces;
} FaceTrackerConfig;

typedef struct FindFaceConfig {
	BOOL frontCameraEnabled;
	BOOL backCameraEnabled;
} FindFaceConfig;

typedef struct GestureConfig {
	BOOL tapGesture;
	BOOL panGesture;
	BOOL swipeGesture;
	BOOL pinchGesture;
	BOOL rotationGesture;
} GestureConfig;

typedef struct AudioConfig {
	BOOL hasAmbientAudio;
	BOOL hasTriggeredAudio;
	BOOL usesMicrophone;
	BOOL microphoneDisabled;
	BOOL previewDisabled;
} AudioConfig;

typedef struct InternalScriptingAPIConfig {
	BOOL immediateMode;
	BOOL eventStream;
	BOOL delay;
	BOOL globalTransform;
} InternalScriptingAPIConfig;

typedef struct ShadersConfig {
	BOOL preProcessor;
	BOOL postProcessor;
} ShadersConfig;

typedef struct SupportedOrientationsConfig {
	BOOL supportsPortrait;
	BOOL supportsLandscape;
} SupportedOrientationsConfig;

typedef struct {
	BOOL paddingForHasValue_[1];
	DateConfig value;
} SCD_Struct_FB334;

typedef struct StorageTriviallyDestructible {
	/*function pointer*/void* ;
	BOOL hasValue;
	SCD_Struct_FB334) ;
} StorageTriviallyDestructible;

typedef struct Optional<msqrd::manifest::DateConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::DateConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	PageScopedIdentityConfig value;
} SCD_Struct_FB337;

typedef struct Optional<msqrd::manifest::PageScopedIdentityConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::PageScopedIdentityConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	SupportedOrientationsConfig value;
} SCD_Struct_FB339;

typedef struct Optional<msqrd::manifest::SupportedOrientationsConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::SupportedOrientationsConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	CustomFontConfig value;
} SCD_Struct_FB341;

typedef struct Optional<msqrd::manifest::CustomFontConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::CustomFontConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	LocationConfig value;
} SCD_Struct_FB343;

typedef struct Optional<msqrd::manifest::LocationConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::LocationConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	LocaleConfig value;
} SCD_Struct_FB345;

typedef struct Optional<msqrd::manifest::LocaleConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::LocaleConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	NetworkingConfig value;
} SCD_Struct_FB347;

typedef struct Optional<msqrd::manifest::NetworkingConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::NetworkingConfig>;

typedef struct StyleTransferConfig {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > debugInitNetFileName;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > debugPredictNetFileName;
} StyleTransferConfig;

typedef struct NativeUIControlConfig {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > defaultText;
	float textFittingWidth;
	float textFittingHeight;
} NativeUIControlConfig;

typedef struct {
	BOOL paddingForHasValue_[1];
	NativeUIControlConfig value;
} SCD_Struct_FB351;

typedef struct StorageNonTriviallyDestructible {
	/*function pointer*/void* ;
	BOOL hasValue;
	SCD_Struct_FB351) ;
} StorageNonTriviallyDestructible;

typedef struct Optional<msqrd::manifest::NativeUIControlConfig> {
	StorageNonTriviallyDestructible storage_;
} Optional<msqrd::manifest::NativeUIControlConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	VideoConfig value;
} SCD_Struct_FB354;

typedef struct Optional<msqrd::manifest::VideoConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::VideoConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	ShadersConfig value;
} SCD_Struct_FB356;

typedef struct Optional<msqrd::manifest::ShadersConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::ShadersConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	InternalScriptingAPIConfig value;
} SCD_Struct_FB358;

typedef struct Optional<msqrd::manifest::InternalScriptingAPIConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::InternalScriptingAPIConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	AudioConfig value;
} SCD_Struct_FB360;

typedef struct Optional<msqrd::manifest::AudioConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::AudioConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	CameraShareConfig value;
} SCD_Struct_FB362;

typedef struct Optional<msqrd::manifest::CameraShareConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::CameraShareConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	OpticalFlowConfig value;
} SCD_Struct_FB364;

typedef struct Optional<msqrd::manifest::OpticalFlowConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::OpticalFlowConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	GestureConfig value;
} SCD_Struct_FB366;

typedef struct Optional<msqrd::manifest::GestureConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::GestureConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	IdentityConfig value;
} SCD_Struct_FB368;

typedef struct Optional<msqrd::manifest::IdentityConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::IdentityConfig>;

typedef struct InstructionConfig {
	FindFaceConfig findFaceConfig;
} InstructionConfig;

typedef struct {
	BOOL paddingForHasValue_[1];
	InstructionConfig value;
} SCD_Struct_FB371;

typedef struct Optional<msqrd::manifest::InstructionConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::InstructionConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	RealTimeDataChannelConfig value;
} SCD_Struct_FB373;

typedef struct Optional<msqrd::manifest::RealTimeDataChannelConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::RealTimeDataChannelConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	LiveStreamingConfig value;
} SCD_Struct_FB375;

typedef struct Optional<msqrd::manifest::LiveStreamingConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::LiveStreamingConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	StyleTransferConfig value;
} SCD_Struct_FB377;

typedef struct Optional<msqrd::manifest::StyleTransferConfig> {
	StorageNonTriviallyDestructible storage_;
} Optional<msqrd::manifest::StyleTransferConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	SlamConfig value;
} SCD_Struct_FB379;

typedef struct Optional<msqrd::manifest::SlamConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::SlamConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	SegmentationConfig value;
} SCD_Struct_FB381;

typedef struct Optional<msqrd::manifest::SegmentationConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::SegmentationConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	DeviceMotionConfig value;
} SCD_Struct_FB383;

typedef struct Optional<msqrd::manifest::DeviceMotionConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::DeviceMotionConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	HandTrackerConfig value;
} SCD_Struct_FB385;

typedef struct Optional<msqrd::manifest::HandTrackerConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::HandTrackerConfig>;

typedef struct {
	BOOL paddingForHasValue_[1];
	FaceTrackerConfig value;
} SCD_Struct_FB387;

typedef struct Optional<msqrd::manifest::FaceTrackerConfig> {
	StorageTriviallyDestructible storage_;
} Optional<msqrd::manifest::FaceTrackerConfig>;

typedef struct Manifest {
	Optional<msqrd::manifest::FaceTrackerConfig> faceTrackerConfig;
	Optional<msqrd::manifest::HandTrackerConfig> handTrackerConfig;
	Optional<msqrd::manifest::DeviceMotionConfig> deviceMotionConfig;
	Optional<msqrd::manifest::SegmentationConfig> segmentationConfig;
	Optional<msqrd::manifest::SlamConfig> slamConfig;
	Optional<msqrd::manifest::StyleTransferConfig> styleTransferConfig;
	Optional<msqrd::manifest::LiveStreamingConfig> liveStreamingConfig;
	Optional<msqrd::manifest::RealTimeDataChannelConfig> realTimeDataChannelConfig;
	Optional<msqrd::manifest::InstructionConfig> instructionConfig;
	Optional<msqrd::manifest::IdentityConfig> identityConfig;
	Optional<msqrd::manifest::GestureConfig> touchGesturesConfig;
	Optional<msqrd::manifest::OpticalFlowConfig> opticalFlowConfig;
	Optional<msqrd::manifest::CameraShareConfig> cameraShareConfig;
	Optional<msqrd::manifest::AudioConfig> audioConfig;
	Optional<msqrd::manifest::InternalScriptingAPIConfig> internalScriptingAPIConfig;
	Optional<msqrd::manifest::ShadersConfig> shadersConfig;
	BOOL useFaceDistortionProcessor_;
	Optional<msqrd::manifest::VideoConfig> videoConfig;
	Optional<msqrd::manifest::NativeUIControlConfig> nativeUIControlConfig;
	Optional<msqrd::manifest::NetworkingConfig> networkingConfig;
	Optional<msqrd::manifest::LocaleConfig> localeConfig;
	Optional<msqrd::manifest::LocationConfig> locationConfig;
	Optional<msqrd::manifest::CustomFontConfig> customFontConfig;
	Optional<msqrd::manifest::SupportedOrientationsConfig> supportedOrientationsConfig;
	Optional<msqrd::manifest::PageScopedIdentityConfig> pageScopedIdentityConfig;
	Optional<msqrd::manifest::DateConfig> dateConfig;
	int framerate;
} Manifest;

typedef struct CKTypedComponentAction<FBRichTextComponentActionContext *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<FBRichTextComponentActionContext *>;

typedef struct FIGRichTextInternalLayoutComponentOptions {
	CKTypedComponentAction<> tapAction;
	UIImage* stickiedImage;
	double stickiedImageSpacing;
	NSString* accessibilityLabel;
} FIGRichTextInternalLayoutComponentOptions;

typedef struct {
	id field1;
	id field2;
	BOOL field3;
	double field4;
} SCD_Struct_FI392;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)> > >;

typedef struct unordered_map<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *), std::__1::hash<Class>, std::__1::equal_to<Class>, std::__1::allocator<std::__1::pair<const Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)> > > {
	hash_table<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::__unordered_map_hasher<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::hash<Class>, true>, std::__1::__unordered_map_equal<Class, std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)>, std::__1::equal_to<Class>, true>, std::__1::allocator<std::__1::__hash_value_type<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)> > > __table_;
} unordered_map<Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *), std::__1::hash<Class>, std::__1::equal_to<Class>, std::__1::allocator<std::__1::pair<const Class, id<FBTarotCardEntityProtocol> (*)(FBMemModelObject *, FBMemTarotDigest *, FBUserSession *)> > >;

typedef struct _compressed_pair<std::__1::vector<Section, std::__1::allocator<Section> > *, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section> > > > {
	vector<Section, std::__1::allocator<Section> > __first_;
} compressed_pair<std::__1::vector<Section, std::__1::allocator<Section> > *, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section> > > >;

typedef struct unique_ptr<std::__1::vector<Section, std::__1::allocator<Section> >, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section> > > > {
	compressed_pair<std::__1::vector<Section, std::__1::allocator<Section> > *, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section> > > > __ptr_;
} unique_ptr<std::__1::vector<Section, std::__1::allocator<Section> >, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section> > > >;

typedef struct recursive_mutex {
	opaque_pthread_mutex_t __m_;
} recursive_mutex;

typedef struct shared_ptr<std::__1::unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata> > > > {
	unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata> > > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<std::__1::unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata> > > >;

typedef struct _compressed_pair<reactivesocket::ResumeIdentificationToken *, std::__1::default_delete<reactivesocket::ResumeIdentificationToken> > {
	ResumeIdentificationToken __first_;
} compressed_pair<reactivesocket::ResumeIdentificationToken *, std::__1::default_delete<reactivesocket::ResumeIdentificationToken> >;

typedef struct unique_ptr<reactivesocket::ResumeIdentificationToken, std::__1::default_delete<reactivesocket::ResumeIdentificationToken> > {
	compressed_pair<reactivesocket::ResumeIdentificationToken *, std::__1::default_delete<reactivesocket::ResumeIdentificationToken> > __ptr_;
} unique_ptr<reactivesocket::ResumeIdentificationToken, std::__1::default_delete<reactivesocket::ResumeIdentificationToken> >;

typedef struct Futex<std::atomic> {
	AI __a_;
} Futex<std::atomic>;

typedef struct SharedMutexImpl<false, void, std::atomic, false> {
	Futex<std::atomic> state_;
} SharedMutexImpl<false, void, std::atomic, false>;

typedef struct shared_ptr<facebook::lithium::ConnectionManager> {
	ConnectionManager __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::lithium::ConnectionManager>;

typedef struct shared_ptr<(anonymous namespace)::BackgroundLifecycleHandler> {
	BackgroundLifecycleHandler __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<(anonymous namespace)::BackgroundLifecycleHandler>;

typedef struct ClientState {
	shared_ptr<(anonymous namespace)::BackgroundLifecycleHandler> lifecycleHandler_;
	shared_ptr<facebook::lithium::ConnectionManager> connectionManager_;
	BOOL hasConnected_;
} ClientState;

typedef struct Synchronized<(anonymous namespace)::ClientState, folly::SharedMutexImpl<false> > {
	ClientState datum_;
	SharedMutexImpl<false, void, std::atomic, false> mutex_;
} Synchronized<(anonymous namespace)::ClientState, folly::SharedMutexImpl<false> >;

typedef struct _compressed_pair<FB::PowerMetrics::ProcessPMCpuStat *, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat> > {
	ProcessPMCpuStat __first_;
} compressed_pair<FB::PowerMetrics::ProcessPMCpuStat *, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat> >;

typedef struct unique_ptr<FB::PowerMetrics::ProcessPMCpuStat, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat> > {
	compressed_pair<FB::PowerMetrics::ProcessPMCpuStat *, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat> > __ptr_;
} unique_ptr<FB::PowerMetrics::ProcessPMCpuStat, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat> >;

typedef struct duration<long long, std::__1::ratio<1, 1000000000> > {
	long long __rep_;
} duration<long long, std::__1::ratio<1, 1000000000> >;

typedef struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > {
	duration<long long, std::__1::ratio<1, 1000000000> > __d_;
} time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >;

typedef struct CPU {
	double intercept;
	double slope;
} CPU;

typedef struct _compressed_pair<(anonymous namespace)::ThreadTime *, std::__1::allocator<(anonymous namespace)::ThreadTime> > {
	ThreadTime __first_;
} compressed_pair<(anonymous namespace)::ThreadTime *, std::__1::allocator<(anonymous namespace)::ThreadTime> >;

typedef struct vector<(anonymous namespace)::ThreadTime, std::__1::allocator<(anonymous namespace)::ThreadTime> > {
	ThreadTime __begin_;
	ThreadTime __end_;
	compressed_pair<(anonymous namespace)::ThreadTime *, std::__1::allocator<(anonymous namespace)::ThreadTime> > __end_cap_;
} vector<(anonymous namespace)::ThreadTime, std::__1::allocator<(anonymous namespace)::ThreadTime> >;

typedef struct ProcessPMCpuStat {
	unsigned long long total_user;
	unsigned long long total_system;
	unsigned long long task_interrupt_wakeups;
	unsigned long long task_platform_idle_wakeups;
	unsigned long long task_gpu_utilisation;
} ProcessPMCpuStat;

typedef struct FBCPUSpinDetectorConfig {
	short period_sec;
	short process_pct_usage;
	short thread_pct_usage;
} FBCPUSpinDetectorConfig;

typedef struct Display {
	double intercept;
	double slope;
} Display;

typedef struct Video {
	double hiResFPS30Back;
	double lowResFPS30Back;
	double FPS60Back;
	double FPS120Back;
	double FPS240Back;
	double hiResFPS30Front;
	double lowResFPS30Front;
	double FPS60Front;
	double FPS120Front;
	double FPS240Front;
} Video;

typedef struct _compressed_pair<FB::NetStat::NetStats::Reading *, std::__1::default_delete<FB::NetStat::NetStats::Reading> > {
	Reading __first_;
} compressed_pair<FB::NetStat::NetStats::Reading *, std::__1::default_delete<FB::NetStat::NetStats::Reading> >;

typedef struct unique_ptr<FB::NetStat::NetStats::Reading, std::__1::default_delete<FB::NetStat::NetStats::Reading> > {
	compressed_pair<FB::NetStat::NetStats::Reading *, std::__1::default_delete<FB::NetStat::NetStats::Reading> > __ptr_;
} unique_ptr<FB::NetStat::NetStats::Reading, std::__1::default_delete<FB::NetStat::NetStats::Reading> >;

typedef struct CameraTimeStat {
	unsigned backCameraOnSec_;
	unsigned frontCameraOnSec_;
} CameraTimeStat;

typedef struct Network {
	double mWhPerTxSecond;
	double mWhPerTailSecond;
} Network;

typedef struct PowerModelConfig {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > deviceType;
	double baseline;
	Display display;
	Network network;
	Video video;
	CPU cpuHighFreq;
	CPU cpuLowFreq;
} PowerModelConfig;

typedef struct DisplayBrightnessInfo {
	float accumulativeConsumedDisplayEnergyInFG;
	float accumulativeDisplayBrightness;
	double accumulativeFGTime;
} DisplayBrightnessInfo;

typedef struct __CFRunLoopObserver* CFRunLoopObserverRef;

typedef struct CKTypedComponentAction<NSNumber *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<NSNumber *>;

typedef struct shared_ptr<facebook::arengineservices::VideoDataServiceXplatInterface> {
	VideoDataServiceXplatInterface __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::arengineservices::VideoDataServiceXplatInterface>;

typedef struct shared_ptr<msqrd::dataprovider::VideoDataProvider> {
	VideoDataProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::dataprovider::VideoDataProvider>;

typedef struct shared_ptr<msqrd::opticalflow::OpticalFlowDataProvider> {
	OpticalFlowDataProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::opticalflow::OpticalFlowDataProvider>;

typedef struct shared_ptr<msqrd::services::NativeUIControlService> {
	NativeUIControlService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::NativeUIControlService>;

typedef struct shared_ptr<msqrd::motion::MotionDataProvider> {
	MotionDataProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::motion::MotionDataProvider>;

typedef struct shared_ptr<msqrd::location::LocationService> {
	LocationService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::location::LocationService>;

typedef struct shared_ptr<msqrd::locale::LocaleService> {
	LocaleService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::locale::LocaleService>;

typedef struct shared_ptr<LiveStreamingServiceDelegateImpl> {
	LiveStreamingServiceDelegateImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<LiveStreamingServiceDelegateImpl>;

typedef struct shared_ptr<msqrd::livestreaming::LiveStreamingService> {
	LiveStreamingService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::livestreaming::LiveStreamingService>;

typedef struct shared_ptr<msqrd::instruction::InstructionService> {
	InstructionService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::instruction::InstructionService>;

typedef struct shared_ptr<InstructionServiceDelegateImpl> {
	InstructionServiceDelegateImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<InstructionServiceDelegateImpl>;

typedef struct shared_ptr<msqrd::dataprovider::Gesture> {
	Gesture __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::dataprovider::Gesture>;

typedef struct shared_ptr<msqrd::touch::GestureDataProvider> {
	GestureDataProvider __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::touch::GestureDataProvider>;

typedef struct shared_ptr<msqrd::tracking::FaceTracker> {
	FaceTracker __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::tracking::FaceTracker>;

typedef struct shared_ptr<msqrd::fx::SynchronousFaceTrackingProcessor> {
	SynchronousFaceTrackingProcessor __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::fx::SynchronousFaceTrackingProcessor>;

typedef struct shared_ptr<fb::arengineservices::CameraShareServiceImpl> {
	CameraShareServiceImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<fb::arengineservices::CameraShareServiceImpl>;

typedef struct shared_ptr<fb::arengineservices::AudioServiceImpl> {
	AudioServiceImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<fb::arengineservices::AudioServiceImpl>;

typedef struct shared_ptr<msqrd::fx::AudioBufferProcessor> {
	AudioBufferProcessor __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::fx::AudioBufferProcessor>;

typedef struct shared_ptr<facebook::scout::Scout> {
	Scout __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::scout::Scout>;

typedef struct opaqueCMFormatDescription* opaqueCMFormatDescriptionRef;

typedef struct AudioStreamBasicDescription {
	double mSampleRate;
	unsigned mFormatID;
	unsigned mFormatFlags;
	unsigned mBytesPerPacket;
	unsigned mFramesPerPacket;
	unsigned mBytesPerFrame;
	unsigned mChannelsPerFrame;
	unsigned mBitsPerChannel;
	unsigned mReserved;
} AudioStreamBasicDescription;

typedef struct OpaqueCMBlockBuffer* OpaqueCMBlockBufferRef;

typedef struct AudioBuffer {
	unsigned mNumberChannels;
	unsigned mDataByteSize;
	void mData;
} AudioBuffer;

typedef struct FNFMP4MvhdAtom {
	unsigned timescale;
	unsigned duration;
} FNFMP4MvhdAtom;

typedef struct FNFMP4MehdAtom {
	int duration;
} FNFMP4MehdAtom;

typedef struct _compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom> > {
	FNFMP4MoofAtom __first_;
} compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom> >;

typedef struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom> > {
	FNFMP4MoofAtom __begin_;
	FNFMP4MoofAtom __end_;
	compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom> > __end_cap_;
} vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom> >;

typedef struct _compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment> > {
	FNFMP4SidxSegment __first_;
} compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment> >;

typedef struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment> > {
	FNFMP4SidxSegment __begin_;
	FNFMP4SidxSegment __end_;
	compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment> > __end_cap_;
} vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment> >;

typedef struct FNFMP4SidxAtom {
	unsigned timescale;
	vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment> > segments;
} FNFMP4SidxAtom;

typedef struct _compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom> > {
	FNFMP4TrexAtom __first_;
} compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom> >;

typedef struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom> > {
	FNFMP4TrexAtom __begin_;
	FNFMP4TrexAtom __end_;
	compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom> > __end_cap_;
} vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom> >;

typedef struct FNFMP4MvexAtom {
	FNFMP4MehdAtom mehdAtom;
	vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom> > trexAtoms;
} FNFMP4MvexAtom;

typedef struct _compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom> > {
	FNFMP4TrakAtom __first_;
} compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom> >;

typedef struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom> > {
	FNFMP4TrakAtom __begin_;
	FNFMP4TrakAtom __end_;
	compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom> > __end_cap_;
} vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom> >;

typedef struct FNFMP4MoovAtom {
	FNFMP4MvhdAtom mvhdAtom;
	vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom> > trakAtoms;
	FNFMP4MvexAtom mvexAtom;
} FNFMP4MoovAtom;

typedef struct FNFMP4MoovAtomProvider {
	FNFMP4MoovAtom _moovAtom;
	unsigned long long _moovAtomSize;
	FNFMP4SidxAtom _sidxAtom;
	vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom> > _moofAtoms;
} FNFMP4MoovAtomProvider;

typedef struct FIGButtonAbstractInternalAttributes {
	UIColor* titleColorNormal;
	UIColor* titleColorHighlighted;
	UIImage* backgroundImageNormal;
	UIImage* backgroundImageHighlighted;
} FIGButtonAbstractInternalAttributes;

typedef struct {
	BOOL field1;
	BOOL field2;
	id field3;
	BOOL field4;
} SCD_Struct_FI472;

typedef struct FIGButtonInternalColors {
	UIColor* titleColorNormal;
	UIColor* titleColorHighlighted;
	UIColor* backgroundFillColorNormal;
	UIColor* backgroundFillColorHighlighted;
	UIColor* backgroundStrokeColorNormal;
	UIColor* backgroundStrokeColorHighlighted;
} FIGButtonInternalColors;

typedef struct FIGButtonInternalPadding {
	UIEdgeInsets insets;
	double glyphLabelPadding;
	double glyphSize;
	double chevronSize;
} FIGButtonInternalPadding;

typedef struct _compressed_pair<proxygen::mqttclient::MQTTClient *, folly::DelayedDestruction::Destructor> {
	MQTTClient __first_;
} compressed_pair<proxygen::mqttclient::MQTTClient *, folly::DelayedDestruction::Destructor>;

typedef struct unique_ptr<proxygen::mqttclient::MQTTClient, folly::DelayedDestruction::Destructor> {
	compressed_pair<proxygen::mqttclient::MQTTClient *, folly::DelayedDestruction::Destructor> __ptr_;
} unique_ptr<proxygen::mqttclient::MQTTClient, folly::DelayedDestruction::Destructor>;

typedef struct shared_ptr<MQTTClientGlue> {
	MQTTClientGlue __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<MQTTClientGlue>;

typedef struct _compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger> > {
	FBWhistleConnectionStatsLogger __first_;
} compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger> >;

typedef struct unique_ptr<FBWhistleConnectionStatsLogger, std::__1::default_delete<FBWhistleConnectionStatsLogger> > {
	compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger> > __ptr_;
} unique_ptr<FBWhistleConnectionStatsLogger, std::__1::default_delete<FBWhistleConnectionStatsLogger> >;

typedef struct _compressed_pair<FBWhistleForegroundConnectionStatsLogger *, std::__1::default_delete<FBWhistleForegroundConnectionStatsLogger> > {
	FBWhistleForegroundConnectionStatsLogger __first_;
} compressed_pair<FBWhistleForegroundConnectionStatsLogger *, std::__1::default_delete<FBWhistleForegroundConnectionStatsLogger> >;

typedef struct unique_ptr<FBWhistleForegroundConnectionStatsLogger, std::__1::default_delete<FBWhistleForegroundConnectionStatsLogger> > {
	compressed_pair<FBWhistleForegroundConnectionStatsLogger *, std::__1::default_delete<FBWhistleForegroundConnectionStatsLogger> > __ptr_;
} unique_ptr<FBWhistleForegroundConnectionStatsLogger, std::__1::default_delete<FBWhistleForegroundConnectionStatsLogger> >;

typedef struct shared_ptr<WhistleBackgroundTokenManager> {
	WhistleBackgroundTokenManager __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<WhistleBackgroundTokenManager>;

typedef struct shared_ptr<proxygen::mqttclient::EvbMQTTClientProxyFactory> {
	EvbMQTTClientProxyFactory __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<proxygen::mqttclient::EvbMQTTClientProxyFactory>;

typedef struct shared_ptr<folly::SSLContext> {
	SSLContext __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<folly::SSLContext>;

typedef struct atomic<long> {
	Aq __a_;
} atomic<long>;

typedef struct duration<long long, std::__1::ratio<1, 1000000> > {
	long long __rep_;
} duration<long long, std::__1::ratio<1, 1000000> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::hash<folly::detail::EventBaseLocalBaseBase *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::hash<folly::detail::EventBaseLocalBaseBase *> >;

typedef struct _compressed_pair<float, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *> > {
	float __first_;
} compressed_pair<float, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *> >;

typedef struct once_flag {
	unsigned long long __state_;
} once_flag;

typedef struct _compressed_pair<folly::VirtualEventBase *, std::__1::default_delete<folly::VirtualEventBase> > {
	VirtualEventBase __first_;
} compressed_pair<folly::VirtualEventBase *, std::__1::default_delete<folly::VirtualEventBase> >;

typedef struct unique_ptr<folly::VirtualEventBase, std::__1::default_delete<folly::VirtualEventBase> > {
	compressed_pair<folly::VirtualEventBase *, std::__1::default_delete<folly::VirtualEventBase> > __ptr_;
} unique_ptr<folly::VirtualEventBase, std::__1::default_delete<folly::VirtualEventBase> >;

typedef struct _hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> {
	__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *>, std::__1::allocator<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> > > {
	hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *>, std::__1::allocator<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > >;

typedef struct _hash_table<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> *>, std::__1::allocator<std::__1::__hash_node<folly::detail::EventBaseLocalBaseBase *, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::hash<folly::detail::EventBaseLocalBaseBase *> > __p2_;
	compressed_pair<float, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *> > __p3_;
} hash_table<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> >;

typedef struct unordered_set<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> > {
	hash_table<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> > __table_;
} unordered_set<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> > > >;

typedef struct unordered_map<unsigned long long, std::__1::shared_ptr<void>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<void> > > > {
	hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<void> > > > __table_;
} unordered_map<unsigned long long, std::__1::shared_ptr<void>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<void> > > >;

typedef struct shared_ptr<folly::EventBaseObserver> {
	EventBaseObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<folly::EventBaseObserver>;

typedef struct Function<void ()> {
	Data data_;
	void big;
	type) tiny;
	/*function pointer*/void* call_;
	/*function pointer*/void* exec_;
} Function<void ()>;

typedef struct SmoothLoopTime {
	double expCoeff_;
	double value_;
	duration<long long, std::__1::ratio<1, 1000000> > oldBusyLeftover_;
} SmoothLoopTime;

typedef struct _compressed_pair<folly::EventBase::FunctionRunner *, std::__1::default_delete<folly::EventBase::FunctionRunner> > {
	FunctionRunner __first_;
} compressed_pair<folly::EventBase::FunctionRunner *, std::__1::default_delete<folly::EventBase::FunctionRunner> >;

typedef struct unique_ptr<folly::EventBase::FunctionRunner, std::__1::default_delete<folly::EventBase::FunctionRunner> > {
	compressed_pair<folly::EventBase::FunctionRunner *, std::__1::default_delete<folly::EventBase::FunctionRunner> > __ptr_;
} unique_ptr<folly::EventBase::FunctionRunner, std::__1::default_delete<folly::EventBase::FunctionRunner> >;

typedef struct _compressed_pair<folly::NotificationQueue<folly::Function<void ()> > *, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > > {
	NotificationQueue<folly::Function<void ()> > __first_;
} compressed_pair<folly::NotificationQueue<folly::Function<void ()> > *, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > >;

typedef struct unique_ptr<folly::NotificationQueue<folly::Function<void ()> >, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > > {
	compressed_pair<folly::NotificationQueue<folly::Function<void ()> > *, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > > __ptr_;
} unique_ptr<folly::NotificationQueue<folly::Function<void ()> >, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > >;

typedef struct atomic<std::__1::__thread_id> {
	A__thread_id __a_;
} atomic<std::__1::__thread_id>;

typedef struct default_header_holder<boost::intrusive::list_node_traits<void *> > {
	list_node<void *> next_;
	list_node<void *> prev_;
} default_header_holder<boost::intrusive::list_node_traits<void *> >;

typedef struct root_plus_size {
	default_header_holder<boost::intrusive::list_node_traits<void *> > m_header;
} root_plus_size;

typedef struct data_t {
	const oot_plus_size root_plus_size_;
} data_t;

typedef struct list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void> {
	data_t data_;
} list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void>;

typedef struct _compressed_pair<folly::HHWheelTimer *, folly::DelayedDestruction::Destructor> {
	HHWheelTimer __first_;
} compressed_pair<folly::HHWheelTimer *, folly::DelayedDestruction::Destructor>;

typedef struct unique_ptr<folly::HHWheelTimer, folly::DelayedDestruction::Destructor> {
	compressed_pair<folly::HHWheelTimer *, folly::DelayedDestruction::Destructor> __ptr_;
} unique_ptr<folly::HHWheelTimer, folly::DelayedDestruction::Destructor>;

typedef struct _compressed_pair<folly::TimeoutManager::CobTimeouts *, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> > {
	CobTimeouts __first_;
} compressed_pair<folly::TimeoutManager::CobTimeouts *, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> >;

typedef struct unique_ptr<folly::TimeoutManager::CobTimeouts, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> > {
	compressed_pair<folly::TimeoutManager::CobTimeouts *, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> > __ptr_;
} unique_ptr<folly::TimeoutManager::CobTimeouts, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> >;

typedef struct EventBase {
	/*function pointer*/void* _vptr$TimeoutManager;
	unique_ptr<folly::TimeoutManager::CobTimeouts, std::__1::default_delete<folly::TimeoutManager::CobTimeouts> > cobTimeouts_;
	/*function pointer*/void* _vptr$DrivableExecutor;
	unique_ptr<folly::HHWheelTimer, folly::DelayedDestruction::Destructor> wheelTimer_;
	list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void> loopCallbacks_;
	list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void> runBeforeLoopCallbacks_;
	list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void> onDestructionCallbacks_;
	list<folly::EventBase::LoopCallback, boost::intrusive::constant_time_size<false>, void, void, void> runOnceCallbacks_;
	atomic<bool> stop_;
	atomic<std::__1::__thread_id> loopThread_;
	event_base evb_;
	unique_ptr<folly::NotificationQueue<folly::Function<void ()> >, std::__1::default_delete<folly::NotificationQueue<folly::Function<void ()> > > > queue_;
	unique_ptr<folly::EventBase::FunctionRunner, std::__1::default_delete<folly::EventBase::FunctionRunner> > fnRunner_;
	long long loopKeepAliveCount_;
	atomic<long> loopKeepAliveCountAtomic_;
	BOOL loopKeepAliveActive_;
	duration<long long, std::__1::ratio<1, 1000000> > maxLatency_;
	SmoothLoopTime avgLoopTime_;
	SmoothLoopTime maxLatencyLoopTime_;
	Function<void ()> maxLatencyCob_;
	BOOL enableTimeMeasurement_;
	unsigned long long nextLoopCnt_;
	unsigned long long latestLoopCnt_;
	time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > startWork_;
	BOOL invokingLoop_;
	shared_ptr<folly::EventBaseObserver> observer_;
	unsigned observerSampleCount_;
	ExecutionObserver executionObserver_;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > name_;
	mutex onDestructionCallbacksMutex_;
	unordered_map<unsigned long long, std::__1::shared_ptr<void>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<void> > > > localStorage_;
	unordered_set<folly::detail::EventBaseLocalBaseBase *, std::__1::hash<folly::detail::EventBaseLocalBaseBase *>, std::__1::equal_to<folly::detail::EventBaseLocalBaseBase *>, std::__1::allocator<folly::detail::EventBaseLocalBaseBase *> > localStorageToDtor_;
	once_flag virtualEventBaseInitFlag_;
	unique_ptr<folly::VirtualEventBase, std::__1::default_delete<folly::VirtualEventBase> > virtualEventBase_;
} EventBase;

typedef struct _compressed_pair<WhistleAppThreadExecutor *, std::__1::default_delete<WhistleAppThreadExecutor> > {
	WhistleAppThreadExecutor __first_;
} compressed_pair<WhistleAppThreadExecutor *, std::__1::default_delete<WhistleAppThreadExecutor> >;

typedef struct unique_ptr<WhistleAppThreadExecutor, std::__1::default_delete<WhistleAppThreadExecutor> > {
	compressed_pair<WhistleAppThreadExecutor *, std::__1::default_delete<WhistleAppThreadExecutor> > __ptr_;
} unique_ptr<WhistleAppThreadExecutor, std::__1::default_delete<WhistleAppThreadExecutor> >;

typedef struct FBRichTextComponentStyle {
	UIFont* font;
	UIColor* color;
	long long horizontalAlignmentMode;
	unsigned long long verticalAlignmentMode;
	unsigned long long baselineAdjustment;
	unsigned long long maximumNumberOfLines;
	CGSize textShadowOffset;
	double textShadowBlur;
	UIColor* textShadowColor;
	FBImageDownloader* imageDownloader;
	unsigned long long truncationMode;
	NSAttributedString* truncationAttributedString;
	NSArray* menuItems;
	BOOL calculateLineOrigins;
} FBRichTextComponentStyle;

typedef struct FBCELTypedComponentAction<FBRichTextComponentActionContext *> {
	CKTypedComponentAction<FBRichTextComponentActionContext *> _action;
	FBCELComponentActionContext* _loggingContext;
	FBCELComponentActionContextEventParams _eventParams;
} FBCELTypedComponentAction<FBRichTextComponentActionContext *>;

typedef struct shared_ptr<FB::Input<id> > {
	Input<id> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Input<id> >;

typedef struct shared_ptr<FB::Private::LiveSignal<id> > {
	LiveSignal<id> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<id> >;

typedef struct Signal<id> {
	shared_ptr<FB::Private::LiveSignal<id> > _liveSignal;
} Signal<id>;

typedef struct FBLineMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	unsigned long long alignment;
	FBColorMetrics color;
	double thickness;
	double spanPercentage;
} FBLineMetrics;

typedef struct FBBorderMetrics {
	/*function pointer*/void* _vptr$FBMetrics;
	BOOL _initialized;
	FBLineMetrics top;
	FBLineMetrics left;
	FBLineMetrics bottom;
	FBLineMetrics right;
} FBBorderMetrics;

typedef struct FBAnimationGroupConfiguration {
	Class animationClass;
	CAMediaTimingFunction* timingFunction;
	double duration;
	double springMass;
	double springDamping;
	double springStiffness;
} FBAnimationGroupConfiguration;

typedef struct FBMPEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} FBMPEdgeInsets;

typedef struct FBMPCameraInfoInputConfiguration {
	BOOL replayOnPortConnect;
} FBMPCameraInfoInputConfiguration;

typedef struct FBLoomStartEntry {
	double maximumTraceTime;
	long long traceID;
	int activeProviders;
} FBLoomStartEntry;

typedef struct FBLoomAbortEntry {
	int abortReason;
} FBLoomAbortEntry;

typedef struct FBLoomStackFrameEntry {
	void* functionAddresses[4];
} FBLoomStackFrameEntry;

typedef struct FBLoomQPLEntry {
	short actionID;
	int markerID;
	int uniqueID;
	BOOL usesSuspectTimestamp;
	BOOL isTraceTrigger;
} FBLoomQPLEntry;

typedef struct FBLoomAsyncCallEntry {
	void callsiteAddress;
} FBLoomAsyncCallEntry;

typedef struct FBLoomAsyncCallStartEntry {
	void calleeAddress;
	unsigned matchID;
} FBLoomAsyncCallStartEntry;

typedef struct FBLoomAsyncCallEndEntry {
	unsigned matchID;
} FBLoomAsyncCallEndEntry;

typedef struct FBLoomNetworkingEntry {
	unsigned long long requestID;
} FBLoomNetworkingEntry;

typedef struct FBLoomLegacyPerfLoggerEntry {
	unsigned matchID;
	int markerID;
} FBLoomLegacyPerfLoggerEntry;

typedef struct FBLoomCounterLogEntry {
	int counterID;
	long long counterValue;
} FBLoomCounterLogEntry;

typedef struct FBLoomTraceAnnotationLogEntry {
	unsigned annotationQPLID;
	unsigned long long annotationValue;
} FBLoomTraceAnnotationLogEntry;

typedef struct FBLoomStringEntry {
	unsigned matchID;
	unsigned char stringLength;
	char string[43];
} FBLoomStringEntry;

typedef struct FBLoomTimeEntry {
	unsigned threadID;
	unsigned long long timestamp;
	/*function pointer*/void* ;
	FBLoomStartEntry startEntry;
	FBLoomAbortEntry abortEntry;
	FBLoomStackFrameEntry stackFrameEntry;
	FBLoomQPLEntry QPLEntry;
	FBLoomAsyncCallEntry asyncCallEntry;
	FBLoomAsyncCallStartEntry asyncCallStartEntry;
	FBLoomAsyncCallEndEntry asyncCallEndEntry;
	FBLoomNetworkingEntry networkingEntry;
	FBLoomLegacyPerfLoggerEntry legacyPerfLoggerEntry;
	FBLoomCounterLogEntry counterEntry;
	FBLoomTraceAnnotationLogEntry) annotationEntry;
} FBLoomTimeEntry;

typedef struct FBLoomLogEntry {
	int entryID;
	int entryType;
	/*function pointer*/void* ;
	FBLoomTimeEntry timeEntry;
	FBLoomStringEntry) stringEntry;
} FBLoomLogEntry;

typedef struct shared_ptr<facebook::FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor> > {
	FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor> >;

typedef struct shared_ptr<FBLoomTigonObserver> {
	FBLoomTigonObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBLoomTigonObserver>;

typedef struct shared_ptr<FBLoomQPLListener> {
	FBLoomQPLListener __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBLoomQPLListener>;

typedef struct _compressed_pair<proxygen::ConnectionLogger *, std::__1::default_delete<proxygen::ConnectionLogger> > {
	ConnectionLogger __first_;
} compressed_pair<proxygen::ConnectionLogger *, std::__1::default_delete<proxygen::ConnectionLogger> >;

typedef struct unique_ptr<proxygen::ConnectionLogger, std::__1::default_delete<proxygen::ConnectionLogger> > {
	compressed_pair<proxygen::ConnectionLogger *, std::__1::default_delete<proxygen::ConnectionLogger> > __ptr_;
} unique_ptr<proxygen::ConnectionLogger, std::__1::default_delete<proxygen::ConnectionLogger> >;

typedef struct AggregateBytes {
	int rawBytesRecv;
	int rawBytesWrite;
	int bgRawBytesRecv;
	int bgRawBytesWrite;
	int fgRawBytesRecv;
	int fgRawBytesWrite;
} AggregateBytes;

typedef struct _compressed_pair<proxygen::httpclient::monitor::NetworkStatusMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor> > {
	NetworkStatusMonitor __first_;
} compressed_pair<proxygen::httpclient::monitor::NetworkStatusMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor> >;

typedef struct unique_ptr<proxygen::httpclient::monitor::NetworkStatusMonitor, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor> > {
	compressed_pair<proxygen::httpclient::monitor::NetworkStatusMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor> > __ptr_;
} unique_ptr<proxygen::httpclient::monitor::NetworkStatusMonitor, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor> >;

typedef struct __SecTrust* SecTrustRef;

typedef struct function<CKComponent *(id)> {
	type __buf_;
	__base<CKComponent *(id)> __f_;
} function<CKComponent *(id)>;

typedef struct function<CKComponent *(id, facebook::mobile::graphstore::FBTree)> {
	type __buf_;
	__base<CKComponent *(id, facebook::mobile::graphstore::FBTree)> __f_;
} function<CKComponent *(id, facebook::mobile::graphstore::FBTree)>;

typedef struct function<CKComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)> {
	type __buf_;
	__base<CKComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)> __f_;
} function<CKComponent *(id, NSError *, facebook::mobile::graphstore::FBTree)>;

typedef struct FBGraphQLQueryComponentConfiguration {
	BOOL refreshOnReappear;
	id scopeKey;
	id loggableName;
	 NSString;
	unsigned long long cacheThresholdInSeconds;
	BOOL shouldShowNoContentOnEmptyResult;
	BOOL shouldTransitionViewStateManager;
	id announcer;
	 FBGraphQLQueryComponentListenerAnnouncer;
} FBGraphQLQueryComponentConfiguration;

typedef struct OpaqueCMClock* OpaqueCMClockRef;

typedef struct OpaqueAudioComponentInstance* OpaqueAudioComponentInstanceRef;

typedef struct FBCameraAnalyticsPayload {
	NSString* cameraType;
	NSString* cameraSessionID;
	NSString* productSessionID;
} FBCameraAnalyticsPayload;

typedef const struct variant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusNoTracking>ialigned_storage<8, 8>(data_t[8c]a8)* ariant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusNoTracking>Ref;

typedef struct _compressed_pair<facebook::speech::AudioQueueRecorder *, std::__1::default_delete<facebook::speech::AudioQueueRecorder> > {
	AudioQueueRecorder __first_;
} compressed_pair<facebook::speech::AudioQueueRecorder *, std::__1::default_delete<facebook::speech::AudioQueueRecorder> >;

typedef struct unique_ptr<facebook::speech::AudioQueueRecorder, std::__1::default_delete<facebook::speech::AudioQueueRecorder> > {
	compressed_pair<facebook::speech::AudioQueueRecorder *, std::__1::default_delete<facebook::speech::AudioQueueRecorder> > __ptr_;
} unique_ptr<facebook::speech::AudioQueueRecorder, std::__1::default_delete<facebook::speech::AudioQueueRecorder> >;

typedef struct promise<std::__1::basic_string<char> > {
	__assoc_state<std::__1::basic_string<char> > __state_;
} promise<std::__1::basic_string<char> >;

typedef struct shared_ptr<msqrd::services::IIdentityService> {
	IIdentityService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::IIdentityService>;

typedef struct shared_ptr<msqrd::services::IDateService> {
	IDateService __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<msqrd::services::IDateService>;

typedef struct CKComponentBoundsAnimation {
	double duration;
	double delay;
	unsigned long long mode;
	unsigned long long options;
	double springDampingRatio;
	double springInitialVelocity;
} CKComponentBoundsAnimation;

typedef struct _compressed_pair<NTStackLayoutWrappedAbsoluteChild *, std::__1::allocator<NTStackLayoutWrappedAbsoluteChild> > {
	NTStackLayoutWrappedAbsoluteChild __first_;
} compressed_pair<NTStackLayoutWrappedAbsoluteChild *, std::__1::allocator<NTStackLayoutWrappedAbsoluteChild> >;

typedef struct vector<NTStackLayoutWrappedAbsoluteChild, std::__1::allocator<NTStackLayoutWrappedAbsoluteChild> > {
	NTStackLayoutWrappedAbsoluteChild __begin_;
	NTStackLayoutWrappedAbsoluteChild __end_;
	compressed_pair<NTStackLayoutWrappedAbsoluteChild *, std::__1::allocator<NTStackLayoutWrappedAbsoluteChild> > __end_cap_;
} vector<NTStackLayoutWrappedAbsoluteChild, std::__1::allocator<NTStackLayoutWrappedAbsoluteChild> >;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
	double field5;
	double field6;
	BOOL field7;
	double field8;
	double field9;
	double field10;
	double field11;
	double field12;
	double field13;
} SCD_Struct_FN578;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *> > >;

typedef struct _tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true> > __pair3_;
} tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *> > >;

typedef struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *> > > {
	tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *> > > __tree_;
} map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *> > >;

typedef struct _compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek> > {
	FNFMP4TrakAtomForSeek __first_;
} compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek> >;

typedef struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek> > {
	FNFMP4TrakAtomForSeek __begin_;
	FNFMP4TrakAtomForSeek __end_;
	compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek> > __end_cap_;
} vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek> >;

typedef struct FNFMP4MoovAtomCompressed {
	vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek> > trakAtoms;
	FNFMP4MvhdAtom mvhdAtom;
} FNFMP4MoovAtomCompressed;

typedef struct vImage_Buffer {
	void data;
	unsigned long long height;
	unsigned long long width;
	unsigned long long rowBytes;
} vImage_Buffer;

typedef struct {
	double field1;
	unsigned long long field2;
} SCD_Struct_FB587;

typedef struct {
	double byteRate;
	unsigned long long atomByteSize;
} SCD_Struct_FB588;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData> > >;

typedef struct unordered_map<long long, FBVideoNetworkerVideoPlayStatsMetaData, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, FBVideoNetworkerVideoPlayStatsMetaData> > > {
	hash_table<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, FBVideoNetworkerVideoPlayStatsMetaData> > > __table_;
} unordered_map<long long, FBVideoNetworkerVideoPlayStatsMetaData, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, FBVideoNetworkerVideoPlayStatsMetaData> > >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat> > >;

typedef struct unordered_map<long long, VideoNetworkerVideoStat, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, VideoNetworkerVideoStat> > > {
	hash_table<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, VideoNetworkerVideoStat>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, VideoNetworkerVideoStat> > > __table_;
} unordered_map<long long, VideoNetworkerVideoStat, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, VideoNetworkerVideoStat> > >;

typedef struct _compressed_pair<unsigned char *, std::__1::allocator<unsigned char> > {
	char* __first_;
} compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char> > {
	char* __begin_;
	char* __end_;
	compressed_pair<unsigned char *, std::__1::allocator<unsigned char> > __end_cap_;
} vector<unsigned char, std::__1::allocator<unsigned char> >;

typedef struct StyleTransferBufferSize {
	int width;
	int height;
} StyleTransferBufferSize;

typedef struct StyleTransferCachedBufferSizes {
	StyleTransferBufferSize scaledBufferSize;
	StyleTransferBufferSize inputBufferSize;
} StyleTransferCachedBufferSizes;

typedef struct Options {
	id scopeID;
	unsigned long long updateMode;
} Options;

typedef struct shared_ptr<FB::Private::LiveSignal<CKComponent *()()> > {
	LiveSignal<CKComponent *()()> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<CKComponent *()()> >;

typedef struct Signal<CKComponent *()()> {
	shared_ptr<FB::Private::LiveSignal<CKComponent *()()> > _liveSignal;
} Signal<CKComponent *()()>;

typedef struct FBAnnotationPosition {
	long long horizontal;
	long long vertical;
} FBAnnotationPosition;

typedef struct {
	SCD_Struct_AR276 top;
	SCD_Struct_AR276 left;
	SCD_Struct_AR276 bottom;
	SCD_Struct_AR276 right;
} SCD_Struct_FB617;

typedef struct __CFArray* CFArrayRef;

typedef struct atomic<FBVideoClipRecorderState> {
	Aq __a_;
} atomic<FBVideoClipRecorderState>;

typedef struct FBMPVideoClipRecorderVideoSize {
	unsigned width;
	unsigned height;
} FBMPVideoClipRecorderVideoSize;

typedef struct atomic<FBVideoRecorderState> {
	Aq __a_;
} atomic<FBVideoRecorderState>;

typedef struct FBMPVideoRecorderConfiguration {
	double bitratePerPixel;
	double aspectRatioOfVideoNaturalSize;
	long long bufferOrientation;
	long long targetOrientation;
	BOOL shouldMirrorVideo;
} FBMPVideoRecorderConfiguration;

typedef struct FBMPVideoAssetInputConfiguration {
	BOOL loopVideo;
	CGSize outputSize;
} FBMPVideoAssetInputConfiguration;

typedef struct {
	SCD_Struct_FB180 field1;
	SCD_Struct_FB180 field2;
	SCD_Struct_FB180 field3;
} SCD_Struct_FB624;

typedef struct CMSampleBufferSmartPtr {
	opaqueCMSampleBuffer _ptr;
} CMSampleBufferSmartPtr;

typedef struct CaptureCompletionContext {
	long long orientation;
	NSObject<OS_dispatch_queue>* queue;
	/*^block*/id block;
} CaptureCompletionContext;

typedef struct opaque_pthread_cond_t {
	long long __sig;
	char __opaque[40];
} opaque_pthread_cond_t;

typedef struct condition_variable {
	opaque_pthread_cond_t __cv_;
} condition_variable;

typedef struct {
	BOOL contiguousPolling;
	int audioPollIntervalMs;
	int videoPollIntervalMs;
	double videoResolutionLimit;
	unsigned long long uniqueId;
} SCD_Struct_FB629;

typedef struct _compressed_pair<facebook::souvenirclassifier::SouvenirsClassifier *, std::__1::default_delete<facebook::souvenirclassifier::SouvenirsClassifier> > {
	SouvenirsClassifier __first_;
} compressed_pair<facebook::souvenirclassifier::SouvenirsClassifier *, std::__1::default_delete<facebook::souvenirclassifier::SouvenirsClassifier> >;

typedef struct unique_ptr<facebook::souvenirclassifier::SouvenirsClassifier, std::__1::default_delete<facebook::souvenirclassifier::SouvenirsClassifier> > {
	compressed_pair<facebook::souvenirclassifier::SouvenirsClassifier *, std::__1::default_delete<facebook::souvenirclassifier::SouvenirsClassifier> > __ptr_;
} unique_ptr<facebook::souvenirclassifier::SouvenirsClassifier, std::__1::default_delete<facebook::souvenirclassifier::SouvenirsClassifier> >;

typedef struct {
	double start;
	double end;
	unsigned long long type;
} SCD_Struct_FB632;

typedef struct shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> {
	SerialDispatchQueueExecutor __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor>;

typedef struct shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor> {
	InlineSerialExecutor __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor>;

typedef struct shared_ptr<FBMQTTChannelEventLogger> {
	FBMQTTChannelEventLogger __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBMQTTChannelEventLogger>;

typedef struct shared_ptr<FBMQTTChannelConnectionStateObserver> {
	FBMQTTChannelConnectionStateObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBMQTTChannelConnectionStateObserver>;

typedef struct shared_ptr<FBMQTTChannelConnectEventObserver> {
	FBMQTTChannelConnectEventObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBMQTTChannelConnectEventObserver>;

typedef struct shared_ptr<FBMQTTChannelPublishEventObserver> {
	FBMQTTChannelPublishEventObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBMQTTChannelPublishEventObserver>;

typedef struct shared_ptr<FBMQTTChannelSubscribeEventObserver> {
	FBMQTTChannelSubscribeEventObserver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FBMQTTChannelSubscribeEventObserver>;

typedef struct shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy> {
	MQTTChannelCoordinatorProxy __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy>;

typedef struct shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics> {
	MQTTChannelAnalytics __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics>;

typedef struct shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics> {
	Analytics __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics>;

typedef struct atomic<FBMQTTChannelCoordinatorState> {
	Aq __a_;
} atomic<FBMQTTChannelCoordinatorState>;

typedef struct shared_ptr<facebook::audiofiltercore::AudioSource<short> > {
	AudioSource<short> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::audiofiltercore::AudioSource<short> >;

typedef struct shared_ptr<facebook::audiofiltercore::AudioInputMixer<short> > {
	AudioInputMixer<short> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::audiofiltercore::AudioInputMixer<short> >;

typedef struct _compressed_pair<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> *, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > > {
	shared_ptr<facebook::audiofiltercore::IAudioEffect> __first_;
} compressed_pair<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> *, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > >;

typedef struct vector<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > > {
	shared_ptr<facebook::audiofiltercore::IAudioEffect> __begin_;
	shared_ptr<facebook::audiofiltercore::IAudioEffect> __end_;
	compressed_pair<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> *, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > > __end_cap_;
} vector<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::IAudioEffect> > >;

typedef struct shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<short, float> > {
	AudioSampleTypeConverter<short, float> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<short, float> >;

typedef struct shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<float, short> > {
	AudioSampleTypeConverter<float, short> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::audiofiltercore::AudioSampleTypeConverter<float, short> >;

typedef struct shared_ptr<facebook::audiofiltercore::VolumeLevelAudioTransform<short> > {
	VolumeLevelAudioTransform<short> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::audiofiltercore::VolumeLevelAudioTransform<short> >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, void *> > >;

typedef struct _tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true> > __pair3_;
} tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > >;

typedef struct map<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > {
	tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > __tree_;
} map<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, void *> > >;

typedef struct _tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true> > __pair3_;
} tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > > > >;

typedef struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > > > > {
	tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > > > > __tree_;
} map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> >, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short> > > > > > > >;

typedef struct {
	CGPoint anchorPoint;
	CGRect bounds;
	CGPoint position;
} SCD_Struct_FB659;

typedef struct axolotl_context* axolotl_contextRef;

typedef struct axolotl_store_context* axolotl_store_contextRef;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<int, id ()(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id ()(id)> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id ()(id)>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<int, id ()(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id ()(id)> > >;

typedef struct unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > > {
	hash_table<std::__1::__hash_value_type<int, id ()(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id ()(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id ()(id)> > > __table_;
} unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > >;

typedef struct ASComponentHostingViewInputs {
	CKComponentScopeRoot* scopeRoot;
	<NSObject>* model;
	<NSObject>* context;
	unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > > stateUpdates;
} ASComponentHostingViewInputs;

typedef struct FBWebImageComponentOptions {
	UIImage* defaultImage;
	long long defaultImageContentMode;
	FBScenePath* scenePath;
	NSString* analyticsModule;
	NSArray* trackingCodes;
	unsigned long long loggingSamplingRate;
	<FBWebImageViewLayoutDelegate>* layoutDelegate;
	unsigned long long transitionType;
	BOOL supportsRetry;
	CAAnimation* defaultImageAnimation;
} FBWebImageComponentOptions;

typedef struct delegateOptionalProtocolResponseFlags {
	unsigned delegateCollectionViewSizeForBackgroundHeaderViewInSection : 1;
	unsigned delegateCollectionViewHeightForRowCellInSection : 1;
	unsigned delegateCollectionViewSpacingBetweenRowsInSection : 1;
	unsigned delegateCollectionViewSectionInsetsForSection : 1;
} delegateOptionalProtocolResponseFlags;

typedef struct flags {
	unsigned isInTextChanged : 1;
	unsigned delegateTextFieldDidAddObject_DEPRECATED : 1;
	unsigned delegateTextFieldWillRemoveObject_DEPRECATED : 1;
	unsigned delegateTextFieldHeightWillChange : 1;
	unsigned delegateTextFieldHeightDidChange : 1;
	unsigned delegateTextFieldSearchTextChanged : 1;
	unsigned isInternalTextChange : 1;
	unsigned delegateTextFieldUserWillDeleteObjectByTyping : 1;
	unsigned delegateTextFieldSupportsEditing : 1;
	unsigned delegateTextFieldDidReceiveTap : 1;
} flags;

typedef struct shared_ptr<FB::Tarot::SessionToolbox> {
	SessionToolbox __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Tarot::SessionToolbox>;

typedef struct Maybe<FB::Tarot::SessionToolbox> {
	shared_ptr<FB::Tarot::SessionToolbox> _value;
} Maybe<FB::Tarot::SessionToolbox>;

typedef struct Either<NSArray<FBMemTarotDigest *> *, NSArray<NSString *> *> {
	NSArray* _left;
	NSArray* _right;
	BOOL _isLeft;
} Either<NSArray<FBMemTarotDigest *> *, NSArray<NSString *> *>;

typedef struct shared_ptr<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > {
	Either<FBTarotImageEntity *, FBTarotVideoEntity *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >;

typedef struct Maybe<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > {
	shared_ptr<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> > _value;
} Maybe<FB::Functional::Either<FBTarotImageEntity *, FBTarotVideoEntity *> >;

typedef struct shared_ptr<FB::Private::LiveSignal<FBTarotDigestCoverMediaCardEntitySurface> > {
	LiveSignal<FBTarotDigestCoverMediaCardEntitySurface> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<FBTarotDigestCoverMediaCardEntitySurface> >;

typedef struct Signal<FBTarotDigestCoverMediaCardEntitySurface> {
	shared_ptr<FB::Private::LiveSignal<FBTarotDigestCoverMediaCardEntitySurface> > _liveSignal;
} Signal<FBTarotDigestCoverMediaCardEntitySurface>;

typedef struct shared_ptr<FB::Signal<FBTarotFeedbackEntity *> > {
	Signal<FBTarotFeedbackEntity *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Signal<FBTarotFeedbackEntity *> >;

typedef struct Maybe<FB::Signal<FBTarotFeedbackEntity *> > {
	shared_ptr<FB::Signal<FBTarotFeedbackEntity *> > _value;
} Maybe<FB::Signal<FBTarotFeedbackEntity *> >;

typedef struct shared_ptr<FB::Private::LiveSignal<UIImage *> > {
	LiveSignal<UIImage *> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<UIImage *> >;

typedef struct Signal<UIImage *> {
	shared_ptr<FB::Private::LiveSignal<UIImage *> > _liveSignal;
} Signal<UIImage *>;

typedef struct shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > > > {
	LiveSignal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > > >;

typedef struct Signal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > > {
	shared_ptr<FB::Private::LiveSignal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > > > _liveSignal;
} Signal<std::__1::vector<FBTarotPublisherEntity *, std::__1::allocator<FBTarotPublisherEntity *> > >;

typedef struct shared_ptr<FB::Private::LiveSignal<FBTarotPublisherEntitySubscribeStatus> > {
	LiveSignal<FBTarotPublisherEntitySubscribeStatus> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<FBTarotPublisherEntitySubscribeStatus> >;

typedef struct Signal<FBTarotPublisherEntitySubscribeStatus> {
	shared_ptr<FB::Private::LiveSignal<FBTarotPublisherEntitySubscribeStatus> > _liveSignal;
} Signal<FBTarotPublisherEntitySubscribeStatus>;

typedef struct CKSizeRange {
	CGSize min;
	CGSize max;
} CKSizeRange;

typedef struct vDSP_DFT_SetupStruct* vDSP_DFT_SetupStructRef;

typedef struct opaqueMTAudioProcessingTap* opaqueMTAudioProcessingTapRef;

typedef struct {
	float field1;
	float field2;
	float field3;
	BOOL field4;
} SCD_Struct_FB694;

typedef struct FBMPSessionConfig {
	BOOL trackPerformance;
} FBMPSessionConfig;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf> > >;

typedef struct unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, FBMPInternalFilterPerf> > > {
	hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf> > > __table_;
} unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, FBMPInternalFilterPerf> > >;

typedef struct aligned_storage<16, 8> {
	data_t data_;
	char buf[16];
	a8) align_;
} aligned_storage<16, 8>;

typedef struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
	int which_;
	aligned_storage<16, 8> storage_;
} variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation>;

typedef struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation>ialigned_storage<16, 8>(data_t[16c]a8)* ariant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation>Ref;

typedef struct FBStreamingFlagsManager {
	unordered_map<NSString *, unsigned long, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned long> > > _maxImageFlagPerUrlKey;
	mutex _lock;
} FBStreamingFlagsManager;

typedef struct _compressed_pair<facebook::gbdtclassifier::GbdtClassifier *, std::__1::default_delete<facebook::gbdtclassifier::GbdtClassifier> > {
	GbdtClassifier __first_;
} compressed_pair<facebook::gbdtclassifier::GbdtClassifier *, std::__1::default_delete<facebook::gbdtclassifier::GbdtClassifier> >;

typedef struct unique_ptr<facebook::gbdtclassifier::GbdtClassifier, std::__1::default_delete<facebook::gbdtclassifier::GbdtClassifier> > {
	compressed_pair<facebook::gbdtclassifier::GbdtClassifier *, std::__1::default_delete<facebook::gbdtclassifier::GbdtClassifier> > __ptr_;
} unique_ptr<facebook::gbdtclassifier::GbdtClassifier, std::__1::default_delete<facebook::gbdtclassifier::GbdtClassifier> >;

typedef struct FBFramePerformanceResult {
	double durationInSecond;
	double lastIntervalInSecond;
	long long frameCount;
	double singleFrameDropEvent;
	double twoConsecFrameDropEvent;
	double fourConsecFrameDropEvent;
	double eightConsecFrameDropEvent;
	double targetFPS;
} FBFramePerformanceResult;

typedef struct _compressed_pair<UICollectionViewLayoutAttributes *__strong *, std::__1::allocator<UICollectionViewLayoutAttributes *> > {
	id __first_;
} compressed_pair<UICollectionViewLayoutAttributes *__strong *, std::__1::allocator<UICollectionViewLayoutAttributes *> >;

typedef struct vector<UICollectionViewLayoutAttributes *, std::__1::allocator<UICollectionViewLayoutAttributes *> > {
	id __begin_;
	id __end_;
	compressed_pair<UICollectionViewLayoutAttributes *__strong *, std::__1::allocator<UICollectionViewLayoutAttributes *> > __end_cap_;
} vector<UICollectionViewLayoutAttributes *, std::__1::allocator<UICollectionViewLayoutAttributes *> >;

typedef struct FBHScrollComponentAlpha {
	double alpha;
} FBHScrollComponentAlpha;

typedef struct CKRelativeDimension {
	int _type;
	double _value;
} CKRelativeDimension;

typedef struct FBHScrollComponentStyle {
	double spacing;
	unsigned long long alignItems;
	FBHScrollComponentAlpha alpha;
	CKRelativeDimension width;
	unsigned long long clippingStyle;
	unsigned long long decelerationRate;
	unsigned long long snapBehavior;
	double percentWidthSidePeek;
	double peekUnitInsetWidth;
} FBHScrollComponentStyle;

typedef struct CKTypedComponentAction<FBHScrollComponentContext *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<FBHScrollComponentContext *>;

typedef struct CKTypedComponentAction<UICollectionView *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<UICollectionView *>;

typedef struct FBHScrollOptions {
	long long nearingEndOffset;
	long long nearingStartOffset;
	CKTypedComponentAction<FBHScrollComponentContext *> endDraggingScrollViewAction;
	NSString* accessibilityIdentifier;
	unsigned long long delaysContentTouchesOption;
	BOOL disableBounce;
	BOOL disableScrolling;
	CKTypedComponentAction<UICollectionView *> didScrollAction;
	CKTypedComponentAction<> nearingEndAction;
	CKTypedComponentAction<> nearingStartAction;
	CKTypedComponentAction<NSNumber *> scrollToComponentAction;
	CKTypedComponentAction<> didStartScrollingAction;
	CKTypedComponentAction<UICollectionView *> didEndScrollingAction;
	unsigned long long touchThroughOption;
	BOOL enablePagedAccessibilitySupport;
	unsigned long long scrollingBehaviorOption;
	long long wrapperComponentOptions;
} FBHScrollOptions;

typedef struct _compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild> > {
	FBHScrollComponentChild __first_;
} compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild> >;

typedef struct vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild> > {
	FBHScrollComponentChild __begin_;
	FBHScrollComponentChild __end_;
	compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild> > __end_cap_;
} vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>, std::__1::allocator<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>, std::__1::allocator<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo> > >;

typedef struct unordered_map<UICollectionViewCell *, FBHScrollMountInfo, FB::HashFunctor<NSObject *>, std::__1::equal_to<UICollectionViewCell *>, std::__1::allocator<std::__1::pair<UICollectionViewCell *const, FBHScrollMountInfo> > > {
	hash_table<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>, std::__1::allocator<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo> > > __table_;
} unordered_map<UICollectionViewCell *, FBHScrollMountInfo, FB::HashFunctor<NSObject *>, std::__1::equal_to<UICollectionViewCell *>, std::__1::allocator<std::__1::pair<UICollectionViewCell *const, FBHScrollMountInfo> > >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, UICollectionViewCell *> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, UICollectionViewCell *> > >;

typedef struct unordered_map<id, UICollectionViewCell *, FB::HashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, UICollectionViewCell *> > > {
	hash_table<std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, UICollectionViewCell *> > > __table_;
} unordered_map<id, UICollectionViewCell *, FB::HashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, UICollectionViewCell *> > >;

typedef struct FBHScrollOffsetState {
	id scopeFrameToken;
	double offsetFromChild;
} FBHScrollOffsetState;

typedef struct FBImpressionContentOffsetTrigger {
	double minimumContentOffset;
	double maximumContentOffset;
} FBImpressionContentOffsetTrigger;

typedef struct _compressed_pair<facebook::arengineservices::Logger *, std::__1::default_delete<facebook::arengineservices::Logger> > {
	Logger __first_;
} compressed_pair<facebook::arengineservices::Logger *, std::__1::default_delete<facebook::arengineservices::Logger> >;

typedef struct unique_ptr<facebook::arengineservices::Logger, std::__1::default_delete<facebook::arengineservices::Logger> > {
	compressed_pair<facebook::arengineservices::Logger *, std::__1::default_delete<facebook::arengineservices::Logger> > __ptr_;
} unique_ptr<facebook::arengineservices::Logger, std::__1::default_delete<facebook::arengineservices::Logger> >;

typedef struct shared_ptr<facebook::arengineservices::ShaderLogger> {
	ShaderLogger __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::arengineservices::ShaderLogger>;

typedef struct {
	float x;
	float y;
} SCD_Struct_FB748;

typedef struct {
	_ field1;
	SCD_Struct_FB38 field2;
	= field3;
	SCD_Struct_FB38 field4;
	SCD_Struct_FB38 field5;
	GLKVector4 field6;
	float field7[4];
	unsigned field8;
	float field9;
	float field10;
} SCD_Struct_IG749;

typedef struct {
	_ field1;
	SCD_Struct_FB38 field2;
	= field3;
	SCD_Struct_FB38 field4;
	SCD_Struct_FB38 field5;
	SCD_Struct_FB38 field6;
	float field7[4];
	_ field8;
	SCD_Struct_FB38 field9;
	= field10;
	SCD_Struct_FB38 field11;
	GLKVector4 field12;
	GLKVector4 field13;
	float field14[4];
} SCD_Struct_IG750;

typedef struct {
	union field1;
	union field2;
} SCD_Struct_IG751;

typedef struct sqlite3* sqlite3Ref;

typedef struct sqlite3_stmt* sqlite3_stmtRef;

typedef struct __SecRandom* SecRandomRef;

typedef struct RecursiveMutex {
	opaque_pthread_mutex_t _m;
} RecursiveMutex;

typedef struct {
	KeyboardConfiguration field1;
	KeyboardConfiguration field2;
} SCD_Struct_AS756;

typedef struct {
	SCD_Struct_AS756 field1;
	SCD_Struct_AS756 field2;
} SCD_Struct_AS757;

typedef struct ASEnvironmentHierarchyState {
	unsigned rasterized : 1;
	unsigned rangeManaged : 1;
	unsigned transitioningSupernodes : 1;
	unsigned layoutPending : 1;
} ASEnvironmentHierarchyState;

typedef struct ASEnvironmentTraitCollection {
	double displayScale;
	long long horizontalSizeClass;
	long long userInterfaceIdiom;
	long long verticalSizeClass;
	long long forceTouchCapability;
	CGSize containerSize;
} ASEnvironmentTraitCollection;

typedef struct ASEnvironmentStateExtensions {
	BOOL boolExtensions[1];
	long long integerExtensions[4];
	UIEdgeInsets edgeInsetsExtensions[1];
} ASEnvironmentStateExtensions;

typedef struct ASEnvironmentLayoutOptionsState {
	double spacingBefore;
	double spacingAfter;
	BOOL flexGrow;
	BOOL flexShrink;
	KeyboardConfiguration flexBasis;
	unsigned long long alignSelf;
	double ascender;
	double descender;
	SCD_Struct_AS757 sizeRange;
	CGPoint layoutPosition;
	ASEnvironmentStateExtensions _extensions;
} ASEnvironmentLayoutOptionsState;

typedef struct ASEnvironmentState {
	ASEnvironmentHierarchyState hierarchyState;
	ASEnvironmentLayoutOptionsState layoutOptionsState;
	ASEnvironmentTraitCollection environmentTraitCollection;
} ASEnvironmentState;

typedef struct Mutex {
	opaque_pthread_mutex_t _m;
} Mutex;

typedef struct ASImageNodeDrawParameters {
	BOOL opaque;
	CGRect bounds;
	double contentsScale;
	UIColor* backgroundColor;
	long long contentMode;
	BOOL cropEnabled;
	BOOL forceUpscaling;
	CGRect cropRect;
	CGRect cropDisplayBounds;
	/*^block*/id imageModificationBlock;
} ASImageNodeDrawParameters;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct _compressed_pair<__strong id **, std::__1::allocator<__strong id *> > {
	id __first_;
} compressed_pair<__strong id **, std::__1::allocator<__strong id *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<id> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<id> >;

typedef struct _split_buffer<__strong id *, std::__1::allocator<__strong id *> > {
	id __first_;
	id __begin_;
	id __end_;
	compressed_pair<__strong id **, std::__1::allocator<__strong id *> > __end_cap_;
} split_buffer<__strong id *, std::__1::allocator<__strong id *> >;

typedef struct deque<id, std::__1::allocator<id> > {
	split_buffer<__strong id *, std::__1::allocator<__strong id *> > __map_;
	unsigned long long __start_;
	compressed_pair<unsigned long, std::__1::allocator<id> > __size_;
} deque<id, std::__1::allocator<id> >;

typedef struct ASTextNodeDrawParameter {
	CGRect bounds;
	UIColor* backgroundColor;
} ASTextNodeDrawParameter;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, id<ASLayoutable> >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, id<ASLayoutable> >, void *> > >;

typedef struct _tree<std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, id<ASLayoutable> > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, id<ASLayoutable> >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true> > __pair3_;
} tree<std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, id<ASLayoutable> > > >;

typedef struct map<unsigned long, id<ASLayoutable>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, id<ASLayoutable> > > > {
	tree<std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, id<ASLayoutable> >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, id<ASLayoutable> > > > __tree_;
} map<unsigned long, id<ASLayoutable>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, id<ASLayoutable> > > >;

typedef struct _compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > {
	unsigned long long __first_;
} compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long> > {
	unsigned long long __begin_;
	unsigned long long __end_;
	compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > __end_cap_;
} vector<unsigned long, std::__1::allocator<unsigned long> >;

typedef struct CATransform3D {
	double m11;
	double m12;
	double m13;
	double m14;
	double m21;
	double m22;
	double m23;
	double m24;
	double m31;
	double m32;
	double m33;
	double m34;
	double m41;
	double m42;
	double m43;
	double m44;
} CATransform3D;

typedef struct ASTextKitAttributes {
	NSAttributedString* attributedString;
	NSAttributedString* truncationAttributedString;
	NSCharacterSet* avoidTailTruncationSet;
	long long lineBreakMode;
	unsigned long long maximumNumberOfLines;
	NSArray* exclusionPaths;
	CGSize shadowOffset;
	UIColor* shadowColor;
	double shadowOpacity;
	double shadowRadius;
	NSArray* pointSizeScaleFactors;
	id layoutManagerCreationBlock;
	layoutManagerDelegate ;
	textStorageCreationBlock ^<NSLayoutManagerDelegate>;
} ASTextKitAttributes;

typedef struct _compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > {
	_NSRange __first_;
} compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange> > {
	_NSRange __begin_;
	_NSRange __end_;
	compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > __end_cap_;
} vector<_NSRange, std::__1::allocator<_NSRange> >;

typedef struct OpusMSDecoder* OpusMSDecoderRef;

typedef struct _compressed_pair<short *, std::__1::allocator<short> > {
	short __first_;
} compressed_pair<short *, std::__1::allocator<short> >;

typedef struct vector<short, std::__1::allocator<short> > {
	short __begin_;
	short __end_;
	compressed_pair<short *, std::__1::allocator<short> > __end_cap_;
} vector<short, std::__1::allocator<short> >;

typedef struct SMPTETime {
	short mSubframes;
	short mSubframeDivisor;
	unsigned mCounter;
	unsigned mType;
	unsigned mFlags;
	short mHours;
	short mMinutes;
	short mSeconds;
	short mFrames;
} SMPTETime;

typedef struct AudioQueueBuffer {
	unsigned mAudioDataBytesCapacity;
	void mAudioData;
	unsigned mAudioDataByteSize;
	void mUserData;
	unsigned mPacketDescriptionCapacity;
	AudioStreamPacketDescription mPacketDescriptions;
	unsigned mPacketDescriptionCount;
} AudioQueueBuffer;

typedef struct _compressed_pair<AudioStreamPacketDescription *, std::__1::allocator<AudioStreamPacketDescription> > {
	AudioStreamPacketDescription __first_;
} compressed_pair<AudioStreamPacketDescription *, std::__1::allocator<AudioStreamPacketDescription> >;

typedef struct vector<AudioStreamPacketDescription, std::__1::allocator<AudioStreamPacketDescription> > {
	AudioStreamPacketDescription __begin_;
	AudioStreamPacketDescription __end_;
	compressed_pair<AudioStreamPacketDescription *, std::__1::allocator<AudioStreamPacketDescription> > __end_cap_;
} vector<AudioStreamPacketDescription, std::__1::allocator<AudioStreamPacketDescription> >;

typedef struct AudioTimeStamp {
	double mSampleTime;
	unsigned long long mHostTime;
	double mRateScalar;
	unsigned long long mWordClockTime;
	SMPTETime mSMPTETime;
	unsigned mFlags;
	unsigned mReserved;
} AudioTimeStamp;

typedef struct AQBufferState {
	AudioQueueBuffer buffer;
	AudioTimeStamp timestamp;
	SCD_Struct_FB180 framePts;
	BOOL filled;
	BOOL endOfStream;
	int decodingPacketIndex;
	vector<unsigned char, std::__1::allocator<unsigned char> > data;
	vector<AudioStreamPacketDescription, std::__1::allocator<AudioStreamPacketDescription> > descriptions;
} AQBufferState;

typedef struct {
	unsigned long long fontSize;
	unsigned long long lineHeight;
	long long tracking;
} SCD_Struct_FI791;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true>, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true>, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > > > >;

typedef struct unordered_map<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, std::__1::allocator<std::__1::pair<const FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > > > > {
	hash_table<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::__unordered_map_hasher<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, true>, std::__1::__unordered_map_equal<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > >, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > > > > __table_;
} unordered_map<FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > >, FBSampledWorkingRangeControllerItemViewStateKeyHasher, std::__1::equal_to<FBSampledWorkingRangeControllerItemViewStateKey>, std::__1::allocator<std::__1::pair<const FBSampledWorkingRangeControllerItemViewStateKey, std::__1::vector<id<FBWorkingRangeItemTransition>, std::__1::allocator<id<FBWorkingRangeItemTransition> > > > > >;

typedef struct _compressed_pair<__strong id *, std::__1::allocator<id> > {
	id __first_;
} compressed_pair<__strong id *, std::__1::allocator<id> >;

typedef struct vector<id, std::__1::allocator<id> > {
	id __begin_;
	id __end_;
	compressed_pair<__strong id *, std::__1::allocator<id> > __end_cap_;
} vector<id, std::__1::allocator<id> >;

typedef struct _compressed_pair<UIImage *__strong *, std::__1::allocator<UIImage *> > {
	id __first_;
} compressed_pair<UIImage *__strong *, std::__1::allocator<UIImage *> >;

typedef struct vector<UIImage *, std::__1::allocator<UIImage *> > {
	id __begin_;
	id __end_;
	compressed_pair<UIImage *__strong *, std::__1::allocator<UIImage *> > __end_cap_;
} vector<UIImage *, std::__1::allocator<UIImage *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *> > >;

typedef struct unordered_map<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, std::__1::allocator<std::__1::pair<const FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *> > > {
	hash_table<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::__unordered_map_hasher<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::__unordered_map_equal<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *> > > __table_;
} unordered_map<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *, std::__1::hash<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, std::__1::equal_to<FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey>, std::__1::allocator<std::__1::pair<const FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey, FBInstreamAdEnabledVideoPlayerComponentEventManager *> > >;

typedef struct FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey {
	NSString* videoId;
} FBInstreamAdEnabledVideoPlayerComponentEventManagerFactoryKey;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long> > >;

typedef struct unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > {
	hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long> > > __table_;
} unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >;

typedef struct {
	unsigned dragging : 1;
	unsigned decelerating : 1;
} SCD_Struct_FB827;

typedef struct {
	unsigned didScroll : 1;
	unsigned willBeginDragging : 1;
	unsigned didEndDragging : 1;
	unsigned willBeginDecelerating : 1;
	unsigned didEndDecelerating : 1;
	unsigned didBeginZooming : 1;
	unsigned didEndZooming : 1;
	unsigned shouldBeginScrubbing : 1;
	unsigned didBeginScrubbing : 1;
	unsigned didScrub : 1;
	unsigned didEndScrubbing : 1;
} SCD_Struct_FB828;

typedef struct _compressed_pair<long *, std::__1::allocator<long> > {
	long long __first_;
} compressed_pair<long *, std::__1::allocator<long> >;

typedef struct vector<long, std::__1::allocator<long> > {
	long long __begin_;
	long long __end_;
	compressed_pair<long *, std::__1::allocator<long> > __end_cap_;
} vector<long, std::__1::allocator<long> >;

typedef struct {
	CGRect startBounds;
	CGRect endBounds;
	double startTime;
	double endTime;
	double currentTime;
} SCD_Struct_FB831;

typedef struct FBItemContentViewLayout {
	CGRect titleFrame;
	CGRect subtitleFrame;
	CGRect secondarySubtitleFrame;
	CGRect tertiarySubtitleFrame;
	CGRect boundingRect;
	CGSize constrainedSize;
} FBItemContentViewLayout;

typedef struct {
	CKTypedComponentAction<> field1;
	CKTypedComponentAction<> field2;
	CKTypedComponentAction<> field3;
	id field4;
} SCD_Struct_FB833;

typedef struct _compressed_pair<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> > {
	SerialDispatchQueueExecutor __first_;
} compressed_pair<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> >;

typedef struct unique_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor, std::__1::default_delete<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> > {
	compressed_pair<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> > __ptr_;
} unique_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor, std::__1::default_delete<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> >;

typedef struct _compressed_pair<FB::Input<bool> *, std::__1::default_delete<FB::Input<bool> > > {
	Input<bool> __first_;
} compressed_pair<FB::Input<bool> *, std::__1::default_delete<FB::Input<bool> > >;

typedef struct unique_ptr<FB::Input<bool>, std::__1::default_delete<FB::Input<bool> > > {
	compressed_pair<FB::Input<bool> *, std::__1::default_delete<FB::Input<bool> > > __ptr_;
} unique_ptr<FB::Input<bool>, std::__1::default_delete<FB::Input<bool> > >;

typedef struct shared_ptr<FB::Private::LiveSignal<bool> > {
	LiveSignal<bool> __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<FB::Private::LiveSignal<bool> >;

typedef struct Signal<bool> {
	shared_ptr<FB::Private::LiveSignal<bool> > _liveSignal;
} Signal<bool>;

typedef struct _compressed_pair<FBSectionComponent *__strong *, std::__1::allocator<FBSectionComponent *> > {
	id __first_;
} compressed_pair<FBSectionComponent *__strong *, std::__1::allocator<FBSectionComponent *> >;

typedef struct vector<FBSectionComponent *, std::__1::allocator<FBSectionComponent *> > {
	id __begin_;
	id __end_;
	compressed_pair<FBSectionComponent *__strong *, std::__1::allocator<FBSectionComponent *> > __end_cap_;
} vector<FBSectionComponent *, std::__1::allocator<FBSectionComponent *> >;

typedef struct _compressed_pair<FBSectionComponentGenerator *, std::__1::default_delete<FBSectionComponentGenerator> > {
	FBSectionComponentGenerator __first_;
} compressed_pair<FBSectionComponentGenerator *, std::__1::default_delete<FBSectionComponentGenerator> >;

typedef struct unique_ptr<FBSectionComponentGenerator, std::__1::default_delete<FBSectionComponentGenerator> > {
	compressed_pair<FBSectionComponentGenerator *, std::__1::default_delete<FBSectionComponentGenerator> > __ptr_;
} unique_ptr<FBSectionComponentGenerator, std::__1::default_delete<FBSectionComponentGenerator> >;

typedef struct FBSectionComponentTrackerState {
	FBSectionComponent* component;
	NSDictionary* stateMap;
	NSDictionary* userInfo;
	id sectionComponentGenerationFactory;
	changesetWriter ;
	changesetWriterState ^<FBComponentChangesetWriter>;
} FBSectionComponentTrackerState;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<FBSectionComponentTrackerStateModification> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<FBSectionComponentTrackerStateModification> >;

typedef struct _compressed_pair<FBSectionComponentTrackerStateModification **, std::__1::allocator<FBSectionComponentTrackerStateModification *> > {
	FBSectionComponentTrackerStateModification __first_;
} compressed_pair<FBSectionComponentTrackerStateModification **, std::__1::allocator<FBSectionComponentTrackerStateModification *> >;

typedef struct _split_buffer<FBSectionComponentTrackerStateModification *, std::__1::allocator<FBSectionComponentTrackerStateModification *> > {
	FBSectionComponentTrackerStateModification __first_;
	FBSectionComponentTrackerStateModification __begin_;
	FBSectionComponentTrackerStateModification __end_;
	compressed_pair<FBSectionComponentTrackerStateModification **, std::__1::allocator<FBSectionComponentTrackerStateModification *> > __end_cap_;
} split_buffer<FBSectionComponentTrackerStateModification *, std::__1::allocator<FBSectionComponentTrackerStateModification *> >;

typedef struct deque<FBSectionComponentTrackerStateModification, std::__1::allocator<FBSectionComponentTrackerStateModification> > {
	split_buffer<FBSectionComponentTrackerStateModification *, std::__1::allocator<FBSectionComponentTrackerStateModification *> > __map_;
	unsigned long long __start_;
	compressed_pair<unsigned long, std::__1::allocator<FBSectionComponentTrackerStateModification> > __size_;
} deque<FBSectionComponentTrackerStateModification, std::__1::allocator<FBSectionComponentTrackerStateModification> >;

typedef struct _compressed_pair<FBSectionComponentTrackerComponentStateUpdate *, std::__1::allocator<FBSectionComponentTrackerComponentStateUpdate> > {
	FBSectionComponentTrackerComponentStateUpdate __first_;
} compressed_pair<FBSectionComponentTrackerComponentStateUpdate *, std::__1::allocator<FBSectionComponentTrackerComponentStateUpdate> >;

typedef struct vector<FBSectionComponentTrackerComponentStateUpdate, std::__1::allocator<FBSectionComponentTrackerComponentStateUpdate> > {
	FBSectionComponentTrackerComponentStateUpdate __begin_;
	FBSectionComponentTrackerComponentStateUpdate __end_;
	compressed_pair<FBSectionComponentTrackerComponentStateUpdate *, std::__1::allocator<FBSectionComponentTrackerComponentStateUpdate> > __end_cap_;
} vector<FBSectionComponentTrackerComponentStateUpdate, std::__1::allocator<FBSectionComponentTrackerComponentStateUpdate> >;

typedef struct jpeg_decompress_struct {
	jpeg_error_mgr err;
	jpeg_memory_mgr mem;
	jpeg_progress_mgr progress;
	void client_data;
	int is_decompressor;
	int global_state;
	jpeg_source_mgr src;
	unsigned image_width;
	unsigned image_height;
	int num_components;
	int jpeg_color_space;
	int out_color_space;
	unsigned scale_num;
	unsigned scale_denom;
	double output_gamma;
	int buffered_image;
	int raw_data_out;
	int dct_method;
	int do_fancy_upsampling;
	int do_block_smoothing;
	int quantize_colors;
	int dither_mode;
	int two_pass_quantize;
	int desired_number_of_colors;
	int enable_1pass_quant;
	int enable_external_quant;
	int enable_2pass_quant;
	unsigned output_width;
	unsigned output_height;
	int out_color_components;
	int output_components;
	int rec_outbuf_height;
	int actual_number_of_colors;
	char* colormap;
	unsigned output_scanline;
	int input_scan_number;
	unsigned input_iMCU_row;
	int output_scan_number;
	unsigned output_iMCU_row;
	int coef_bits[64];
	/*function pointer*/void* quant_tbl_ptrs[4];
	/*function pointer*/void* dc_huff_tbl_ptrs[4];
	/*function pointer*/void* ac_huff_tbl_ptrs[4];
	int data_precision;
	/*function pointer*/void* comp_info;
	int is_baseline;
	int progressive_mode;
	int arith_code;
	unsigned char arith_dc_L[16];
	unsigned char arith_dc_U[16];
	unsigned char arith_ac_K[16];
	unsigned restart_interval;
	int saw_JFIF_marker;
	unsigned char JFIF_major_version;
	unsigned char JFIF_minor_version;
	unsigned char density_unit;
	unsigned short X_density;
	unsigned short Y_density;
	int saw_Adobe_marker;
	unsigned char Adobe_transform;
	int CCIR601_sampling;
	jpeg_marker_struct marker_list;
	int max_h_samp_factor;
	int max_v_samp_factor;
	int min_DCT_h_scaled_size;
	int min_DCT_v_scaled_size;
	unsigned total_iMCU_rows;
	char* sample_range_limit;
	int comps_in_scan;
	/*function pointer*/void* cur_comp_info[4];
	unsigned MCUs_per_row;
	unsigned MCU_rows_in_scan;
	int blocks_in_MCU;
	int MCU_membership[10];
	int Ss;
	int Se;
	int Ah;
	int Al;
	int block_size;
	int natural_order;
	int lim_Se;
	int unread_marker;
	jpeg_decomp_master master;
	jpeg_d_main_controller main;
	jpeg_d_coef_controller coef;
	jpeg_d_post_controller post;
	jpeg_input_controller inputctl;
	jpeg_marker_reader marker;
	jpeg_entropy_decoder entropy;
	jpeg_inverse_dct idct;
	jpeg_upsampler upsample;
	jpeg_color_deconverter cconvert;
	jpeg_color_quantizer cquantize;
} jpeg_decompress_struct;

typedef struct jpeg_error_mgr {
	/*function pointer*/void* error_exit;
	/*function pointer*/void* emit_message;
	/*function pointer*/void* output_message;
	/*function pointer*/void* format_message;
	/*function pointer*/void* reset_error_mgr;
	int msg_code;
	/*function pointer*/void* msg_parm;
	int i[8];
	char s[80];
	int trace_level;
	long long num_warnings;
	char* jpeg_message_table;
	int last_jpeg_message;
	char* addon_message_table;
	int first_addon_message;
	int last_addon_message;
} jpeg_error_mgr;

typedef struct FBProgressiveJPEGErrorManager {
	jpeg_error_mgr pub;
	int setjmp_buffer[48];
} FBProgressiveJPEGErrorManager;

typedef struct FBPJPEGEncodingInfo {
	short _version;
	int _fileSize;
	NSArray* _scanOffsets;
} FBPJPEGEncodingInfo;

typedef struct {
	BOOL paddingForHasValue_[1];
	FBPJPEGEncodingInfo value;
} SCD_Struct_FB855;

typedef struct Optional<FBPJPEGEncodingInfo> {
	StorageNonTriviallyDestructible storage_;
} Optional<FBPJPEGEncodingInfo>;

typedef struct _compressed_pair<proxygen::battery::RadioStatusObserver *, std::__1::default_delete<proxygen::battery::RadioStatusObserver> > {
	RadioStatusObserver __first_;
} compressed_pair<proxygen::battery::RadioStatusObserver *, std::__1::default_delete<proxygen::battery::RadioStatusObserver> >;

typedef struct unique_ptr<proxygen::battery::RadioStatusObserver, std::__1::default_delete<proxygen::battery::RadioStatusObserver> > {
	compressed_pair<proxygen::battery::RadioStatusObserver *, std::__1::default_delete<proxygen::battery::RadioStatusObserver> > __ptr_;
} unique_ptr<proxygen::battery::RadioStatusObserver, std::__1::default_delete<proxygen::battery::RadioStatusObserver> >;

typedef struct {
	BOOL field1;
	float field2;
} SCD_Struct_FB859;

typedef struct {
	BOOL field1;
	BOOL field2;
	char field3;
} SCD_Struct_FB860;

typedef struct SSLKeyMaterialCallback* SSLKeyMaterialCallbackRef;

typedef struct shared_ptr<mobileconfig::FBMobileConfigOverridesTable> {
	FBMobileConfigOverridesTable __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigOverridesTable>;

typedef struct config_meta_t {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > configName;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > paramName;
	int key;
	unsigned bufferConfigIndex;
	unsigned bufferParamIndex;
	int paramType;
	BOOL isSessionless;
	BOOL requireCallsiteDefault;
} config_meta_t;

typedef struct _compressed_pair<std::__1::pair<NSString *, NSString *> *, std::__1::allocator<std::__1::pair<NSString *, NSString *> > > {
	pair<NSString *, NSString *> __first_;
} compressed_pair<std::__1::pair<NSString *, NSString *> *, std::__1::allocator<std::__1::pair<NSString *, NSString *> > >;

typedef struct vector<std::__1::pair<NSString *, NSString *>, std::__1::allocator<std::__1::pair<NSString *, NSString *> > > {
	pair<NSString *, NSString *> __begin_;
	pair<NSString *, NSString *> __end_;
	compressed_pair<std::__1::pair<NSString *, NSString *> *, std::__1::allocator<std::__1::pair<NSString *, NSString *> > > __end_cap_;
} vector<std::__1::pair<NSString *, NSString *>, std::__1::allocator<std::__1::pair<NSString *, NSString *> > >;

typedef struct shared_ptr<mobileconfig::FBMobileConfigQEGroupInfo> {
	FBMobileConfigQEGroupInfo __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigQEGroupInfo>;

typedef struct _compressed_pair<mobileconfig::FBMobileConfigQEParamInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEParamInfo> > {
	FBMobileConfigQEParamInfo __first_;
} compressed_pair<mobileconfig::FBMobileConfigQEParamInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEParamInfo> >;

typedef struct vector<mobileconfig::FBMobileConfigQEParamInfo, std::__1::allocator<mobileconfig::FBMobileConfigQEParamInfo> > {
	FBMobileConfigQEParamInfo __begin_;
	FBMobileConfigQEParamInfo __end_;
	compressed_pair<mobileconfig::FBMobileConfigQEParamInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEParamInfo> > __end_cap_;
} vector<mobileconfig::FBMobileConfigQEParamInfo, std::__1::allocator<mobileconfig::FBMobileConfigQEParamInfo> >;

typedef struct shared_ptr<mobileconfig::FBMobileConfigManager> {
	FBMobileConfigManager __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigManager>;

typedef struct function<void (bool, const std::__1::basic_string<char> &)> {
	type __buf_;
	__base<void (bool, const std::__1::basic_string<char> &)> __f_;
} function<void (bool, const std::__1::basic_string<char> &)>;

typedef struct shared_ptr<mobileconfig::FBMobileConfigStorageManager> {
	FBMobileConfigStorageManager __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigStorageManager>;

typedef struct shared_ptr<mobileconfig::FBMobileConfigFileUtils> {
	FBMobileConfigFileUtils __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigFileUtils>;

typedef struct shared_ptr<mobileconfig::FBMobileConfigMetaMap> {
	FBMobileConfigMetaMap __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<mobileconfig::FBMobileConfigMetaMap>;

typedef struct _compressed_pair<mobileconfig::FBMobileConfigQEUniverseInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEUniverseInfo> > {
	FBMobileConfigQEUniverseInfo __first_;
} compressed_pair<mobileconfig::FBMobileConfigQEUniverseInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEUniverseInfo> >;

typedef struct vector<mobileconfig::FBMobileConfigQEUniverseInfo, std::__1::allocator<mobileconfig::FBMobileConfigQEUniverseInfo> > {
	FBMobileConfigQEUniverseInfo __begin_;
	FBMobileConfigQEUniverseInfo __end_;
	compressed_pair<mobileconfig::FBMobileConfigQEUniverseInfo *, std::__1::allocator<mobileconfig::FBMobileConfigQEUniverseInfo> > __end_cap_;
} vector<mobileconfig::FBMobileConfigQEUniverseInfo, std::__1::allocator<mobileconfig::FBMobileConfigQEUniverseInfo> >;

typedef struct _compressed_pair<mobileconfig::FBMobileConfigGKInfo *, std::__1::allocator<mobileconfig::FBMobileConfigGKInfo> > {
	FBMobileConfigGKInfo __first_;
} compressed_pair<mobileconfig::FBMobileConfigGKInfo *, std::__1::allocator<mobileconfig::FBMobileConfigGKInfo> >;

typedef struct vector<mobileconfig::FBMobileConfigGKInfo, std::__1::allocator<mobileconfig::FBMobileConfigGKInfo> > {
	FBMobileConfigGKInfo __begin_;
	FBMobileConfigGKInfo __end_;
	compressed_pair<mobileconfig::FBMobileConfigGKInfo *, std::__1::allocator<mobileconfig::FBMobileConfigGKInfo> > __end_cap_;
} vector<mobileconfig::FBMobileConfigGKInfo, std::__1::allocator<mobileconfig::FBMobileConfigGKInfo> >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, void *> > >;

typedef struct _tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> > __pair3_;
} tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > > > >;

typedef struct map<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > > > > {
	tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > > > > __tree_;
} map<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<FBMobileConfigAliasType, std::__1::basic_string<char> > > > >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, void *> > >;

typedef struct _tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> > > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true> > __pair3_;
} tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> > > >;

typedef struct map<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> > > > {
	tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> > > > __tree_;
} map<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, std::__1::pair<int, int> > > >;

typedef struct _compressed_pair<double *, std::__1::allocator<double> > {
	double __first_;
} compressed_pair<double *, std::__1::allocator<double> >;

typedef struct vector<double, std::__1::allocator<double> > {
	double __begin_;
	double __end_;
	compressed_pair<double *, std::__1::allocator<double> > __end_cap_;
} vector<double, std::__1::allocator<double> >;

typedef struct _compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo> > {
	SubPageInfo __first_;
} compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo> >;

typedef struct vector<SubPageInfo, std::__1::allocator<SubPageInfo> > {
	SubPageInfo __begin_;
	SubPageInfo __end_;
	compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo> > __end_cap_;
} vector<SubPageInfo, std::__1::allocator<SubPageInfo> >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> > >;

typedef struct _tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true> > __pair3_;
} tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *> > >;

typedef struct map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *> > > {
	tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *> > > __tree_;
} map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *> > >;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true> >;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *> > >;

typedef struct _tree<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>, std::__1::allocator<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *> > > {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true> > __pair3_;
} tree<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>, std::__1::allocator<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *> > >;

typedef struct map<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, std::__1::allocator<std::__1::pair<FBConsistentLookasideCacheObservationHandle *const, FBMemModelObject *> > > {
	tree<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>, std::__1::allocator<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *> > > __tree_;
} map<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, std::__1::allocator<std::__1::pair<FBConsistentLookasideCacheObservationHandle *const, FBMemModelObject *> > >;

typedef struct shared_ptr<facebook::mobile::graphstore::TreeShape::Resolver> {
	Resolver __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<facebook::mobile::graphstore::TreeShape::Resolver>;

typedef struct FBFramePerformanceTrackerConfig {
	long long singleFrameDropEventFrameNumber;
	long long twoConsecFrameDropEventFrameNumber;
	long long fourConsecFrameDropEventFrameNumber;
	long long eightConsecFrameDropEventFrameNumber;
	long long maxFrameDropAccount;
	long long initialTrackedFrame;
} FBFramePerformanceTrackerConfig;

typedef struct FrameDrops {
	double singleFrameDrop;
	double twoConsecFrameDrops;
	double fourConsecFrameDrops;
	double eightConsecFrameDrops;
} FrameDrops;

typedef struct CGFont* CGFontRef;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true>, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true>, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *> > >;

typedef struct unordered_map<FBFeedEventBusFactoryKey, FBFeedEventBus *, std::__1::hash<FBFeedEventBusFactoryKey>, std::__1::equal_to<FBFeedEventBusFactoryKey>, std::__1::allocator<std::__1::pair<const FBFeedEventBusFactoryKey, FBFeedEventBus *> > > {
	hash_table<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true>, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *> > > __table_;
} unordered_map<FBFeedEventBusFactoryKey, FBFeedEventBus *, std::__1::hash<FBFeedEventBusFactoryKey>, std::__1::equal_to<FBFeedEventBusFactoryKey>, std::__1::allocator<std::__1::pair<const FBFeedEventBusFactoryKey, FBFeedEventBus *> > >;

typedef struct TexCoordExtent {
	float left;
	float right;
	float bottom;
	float top;
} TexCoordExtent;

typedef struct Snapshot {
	unsigned gl_target;
	unsigned gl_texture;
	TexCoordExtent texCoordExtent;
	unsigned long long bitmapWidth;
	unsigned long long bitmapHeight;
	__CVOpenGLESTextureCache cv_textureCache;
	__CVBuffer cv_pixelBuffer;
	__CVBuffer cv_texture;
} Snapshot;

typedef struct PingPongFilter {
	int pingPong;
	int width;
	int height;
	unsigned bitmapInfo;
	CGColorSpace colorSpace;
	CVBuffer cv_pixelBuffers[2__];
	__CVOpenGLESTextureCache cv_textureCache;
	CVBuffer cv_textures[2__];
	unsigned gl_framebuffers[2];
	unsigned gl_fallback_textures[2];
} PingPongFilter;

typedef struct {
	unsigned texture;
	unsigned saturation;
	unsigned blendWithColor;
} SCD_Struct_FB915;

typedef struct SaturationShader {
	unsigned program;
	SCD_Struct_FB915 uniform;
} SaturationShader;

typedef struct BoxBlur1DShader {
	unsigned program;
	CameraTimeStat uniform;
} BoxBlur1DShader;

typedef struct PositionTexCoordQuad {
	unsigned buffers[2];
} PositionTexCoordQuad;

typedef struct FBFXGeometryEffectShader {
	unsigned program;
	CameraTimeStat uniform;
} FBFXGeometryEffectShader;

typedef struct TextureShader {
	unsigned program;
	CameraTimeStat uniform;
} TextureShader;

typedef struct {
	unsigned transform;
	unsigned texture;
	unsigned invBlockSize;
	unsigned alpha;
} SCD_Struct_FB921;

typedef struct FBFXPixellateEffectShader {
	unsigned program;
	SCD_Struct_FB921 uniform;
} FBFXPixellateEffectShader;

typedef struct __CFString* CFStringRef;

typedef struct FBTextViewComponentActions {
	/*^block*/id shouldChangeTextInRangeBlock;
	CKTypedComponentAction<> textDidChangeAction;
	CKTypedComponentAction<> didBeginEditingAction;
	CKTypedComponentAction<> didEndEditingAction;
} FBTextViewComponentActions;

typedef struct FBTextViewComponentPlaceholderAttributes {
	NSString* text;
	UIColor* textColor;
	BOOL shouldWrap;
	BOOL shouldHideWhenEditing;
	UIFont* font;
} FBTextViewComponentPlaceholderAttributes;

typedef struct FBTextViewComponentLayoutManagerAttributes {
	double hyphenationFactor;
	BOOL usesFontLeading;
} FBTextViewComponentLayoutManagerAttributes;

typedef struct FBTextViewComponentTextContainerAttributes {
	long long lineBreakMode;
	double lineFragmentPadding;
	unsigned long long maximumNumberOfLines;
} FBTextViewComponentTextContainerAttributes;

typedef struct FBTextViewComponentInputAccessoryAttributes {
	BOOL showDoneButton;
} FBTextViewComponentInputAccessoryAttributes;

typedef struct FBTextViewComponentViewConfiguration {
	FBTextViewComponentPlaceholderAttributes placeholder;
	FBTextViewComponentLayoutManagerAttributes layoutManagerAttributes;
	FBTextViewComponentTextContainerAttributes textContainerAttributes;
	FBTextViewComponentInputAccessoryAttributes inputAccessory;
	UIFont* font;
	UIColor* textColor;
	long long autocorrectionType;
	long long spellCheckingType;
	long long textAlignment;
	UIEdgeInsets textContainerInset;
	long long keyboardType;
	long long returnKeyType;
	unsigned long long maximumContainerHeightInLines;
	UIColor* backgroundColor;
	BOOL scrollEnabled;
	BOOL editable;
	NSString* accessibilityIdentifier;
} FBTextViewComponentViewConfiguration;

typedef struct FBTextFieldActions {
	CKTypedComponentAction<> didBeginEditingAction;
	CKTypedComponentAction<> didEndEditingAction;
	CKTypedComponentAction<> returnTappedAction;
	CKTypedComponentAction<> textChangedAction;
} FBTextFieldActions;

typedef struct FBTextFieldInputAccessoryLabelItemConfiguration {
	NSString* text;
	UIFont* font;
	UIColor* color;
} FBTextFieldInputAccessoryLabelItemConfiguration;

typedef struct FBTextFieldInputAccessorySystemItemConfiguration {
	long long item;
	CKTypedComponentAction<> tapAction;
	BOOL resignsFirstResponderOnTap;
	UIColor* color;
} FBTextFieldInputAccessorySystemItemConfiguration;

typedef struct FBTextFieldInputAccessoryCustomItemConfiguration {
	NSString* title;
	long long style;
	CKTypedComponentAction<> tapAction;
	BOOL resignsFirstResponderOnTap;
	UIColor* color;
} FBTextFieldInputAccessoryCustomItemConfiguration;

typedef struct FBTextFieldInputAccessoryViewItemInternalConfiguration {
	long long type;
	FBTextFieldInputAccessorySystemItemConfiguration systemItem;
	FBTextFieldInputAccessoryCustomItemConfiguration customItem;
	FBTextFieldInputAccessoryLabelItemConfiguration labelItem;
} FBTextFieldInputAccessoryViewItemInternalConfiguration;

typedef struct FBTextFieldInputAccessoryViewItemConfiguration {
	FBTextFieldInputAccessoryViewItemInternalConfiguration m_configuration;
} FBTextFieldInputAccessoryViewItemConfiguration;

typedef struct FBTextFieldInputAccessoryViewConfiguration {
	UIColor* backgroundColor;
	double height;
	FBTextFieldInputAccessoryViewItemConfiguration leftItemConfiguration;
	FBTextFieldInputAccessoryViewItemConfiguration rightItemConfiguration;
} FBTextFieldInputAccessoryViewConfiguration;

typedef struct FBTextFieldViewConfiguration {
	long long autocapitalizationType;
	long long autocorrectionType;
	UIColor* backgroundColor;
	long long borderStyle;
	BOOL disabled;
	UIFont* font;
	NSString* accessibilityIdentifier;
	NSString* identifier;
	FBTextFieldInputAccessoryViewConfiguration inputAccessoryViewConfiguration;
	long long keyboardType;
	unsigned long long characterAllowance;
	unsigned long long maxLength;
	NSString* placeholder;
	UIColor* placeholderColor;
	BOOL secureTextEntry;
	NSString* text;
	NSString* initialText;
	UIColor* textColor;
	long long returnKeyType;
	long long textAlignment;
} FBTextFieldViewConfiguration;

typedef struct CKTypedComponentAction<UIScrollView *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<UIScrollView *>;

typedef struct CKTypedComponentAction<FBScrollComponentDelegateActionWillEndDraggingData *> {
	id _targetOrScopeHandle;
	/*^block*/id _block;
	int _variant;
	SEL _selector;
} CKTypedComponentAction<FBScrollComponentDelegateActionWillEndDraggingData *>;

typedef struct FBScrollComponentDelegateActions {
	CKTypedComponentAction<UIScrollView *> scrollViewDidScrollAction;
	CKTypedComponentAction<UIScrollView *> scrollViewWillBeginDraggingAction;
	CKTypedComponentAction<FBScrollComponentDelegateActionWillEndDraggingData *> scrollViewWillEndDraggingAction;
	CKTypedComponentAction<UIScrollView *> scrollViewDidEndScrollingAnimationAction;
} FBScrollComponentDelegateActions;

typedef struct FBQuickButtonStateConfiguration {
	NSString* title;
	UIColor* titleColor;
	UIImage* image;
	UIImage* backgroundImage;
} FBQuickButtonStateConfiguration;

typedef struct array<FBQuickButtonStateConfiguration, 8> {
	FBQuickButtonStateConfiguration __elems_[8];
} array<FBQuickButtonStateConfiguration, 8>;

typedef struct _compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> > {
	id __first_;
} compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> >;

typedef struct vector<CKComponent *, std::__1::allocator<CKComponent *> > {
	id __begin_;
	id __end_;
	compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> > __end_cap_;
} vector<CKComponent *, std::__1::allocator<CKComponent *> >;

typedef struct FBMultiLineStackLayoutComponentStyle {
	double lineSpacing;
	double componentSpacing;
	unsigned long long justifyContent;
} FBMultiLineStackLayoutComponentStyle;

typedef struct _compressed_pair<CGSize *, std::__1::default_delete<CGSize> > {
	CGSize __first_;
} compressed_pair<CGSize *, std::__1::default_delete<CGSize> >;

typedef struct unique_ptr<CGSize, std::__1::default_delete<CGSize> > {
	compressed_pair<CGSize *, std::__1::default_delete<CGSize> > __ptr_;
} unique_ptr<CGSize, std::__1::default_delete<CGSize> >;

typedef struct FBFourPartBorderLayoutChildren {
	CKComponent* top;
	CKComponent* left;
	CKComponent* bottom;
	CKComponent* right;
} FBFourPartBorderLayoutChildren;

typedef struct _compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild> > {
	FBCollageLayoutComponentChild __first_;
} compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild> >;

typedef struct vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild> > {
	FBCollageLayoutComponentChild __begin_;
	FBCollageLayoutComponentChild __end_;
	compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild> > __end_cap_;
} vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild> >;

typedef struct FBComponentHostControllerContext {
	FBComponentHostControllerState* state;
	NSMutableArray* pendingAsynchronousModifications;
} FBComponentHostControllerContext;

typedef struct Synchronized<FBComponentHostControllerContext, std::__1::mutex> {
	FBComponentHostControllerContext datum_;
	mutex mutex_;
} Synchronized<FBComponentHostControllerContext, std::__1::mutex>;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true> > {
	float __first_;
} compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> __first_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> __first_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > __second_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> > > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> > > >;

typedef struct unordered_map<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> > > > {
	hash_table<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> >, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> > > > __table_;
} unordered_map<NSString *, std::__1::pair<MNModelSubscriptionUpdateTracker *, long>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::pair<MNModelSubscriptionUpdateTracker *, long> > > >;

typedef struct atomic<long long> {
	Aq __a_;
} atomic<long long>;

typedef const struct vector<std::__1::pair<MNModelSubscriptionProvider *, long>, std::__1::allocator<std::__1::pair<MNModelSubscriptionProvider *, long> > >* vector<std::__1::pair<MNModelSubscriptionProvider *, long>, std::__1::allocator<std::__1::pair<MNModelSubscriptionProvider *, long> > >Ref;

typedef struct _CCCryptor* CCCryptorRef;

typedef struct CGDataProvider* CGDataProviderRef;

typedef struct z_stream_s {
	char* next_in;
	unsigned avail_in;
	unsigned long long total_in;
	char* next_out;
	unsigned avail_out;
	unsigned long long total_out;
	char* msg;
	internal_state state;
	/*function pointer*/void* zalloc;
	/*function pointer*/void* zfree;
	void opaque;
	int data_type;
	unsigned long long adler;
	unsigned long long reserved;
} z_stream_s;

typedef struct ZZStandardCryptoEngine {
	int keys[3];
} ZZStandardCryptoEngine;

typedef struct {
	tm_zip_s field1;
	unsigned long long field2;
	unsigned long long field3;
	unsigned long long field4;
} SCD_Struct_SS969;

typedef struct {
	long long field1;
	void field2;
	/*function pointer*/void* field3;
	/*function pointer*/void* field4;
	/*function pointer*/void* field5;
} SCD_Struct_NX970;

typedef struct objc_ivar* objc_ivarRef;

typedef struct {
	long long version;
	void info;
	/*function pointer*/void* retain;
	/*function pointer*/void* release;
	/*function pointer*/void* copyDescription;
} SCD_Struct_GC972;

typedef struct __CFReadStream* CFReadStreamRef;

typedef struct __CFWriteStream* CFWriteStreamRef;

typedef struct SSLContext* SSLContextRef;

