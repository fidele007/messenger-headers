/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:26:06 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MQCameraConfigProtocol;
#import <Messenger/Messenger-Structs.h>
@class SCNPlane, SCNNode, SCNScene, SCNMaterial, MQEffectBase;

@interface MQScene3D : NSObject {

	SCNPlane* videoPlane;
	SCNNode* videoNode;
	double videoPlaneWidth;
	double videoPlaneHeight;
	SCNMatrix4 projection;
	SCNNode* faceSpace;
	SCNNode* faceSpace3d;
	SCNNode* globalContainer;
	double cameraFocal;
	SCNMatrix4 convertMatrix;
	CGSize _size;
	SCNNode* _cameraNode;
	SCNScene* _scene;
	SCNNode* _container;
	SCNMaterial* _videoMaterial;
	SCNMaterial* _videoColorMultiplyMaterial;
	SCNMaterial* _saturationMaterial;
	SCNMaterial* _videoGrayScaleNoiseMaterial;
	SCNMaterial* _videoGrayScaleMaterial;
	SCNMaterial* _videoInvertMaterial;
	SCNMaterial* _videoMaskMaterial;
	id<MQCameraConfigProtocol> _cameraSettings;
	MQEffectBase* _currentEffect;
	MQEffectBase* _effect;

}

@property (nonatomic,retain) MQEffectBase * effect;                                  //@synthesize effect=_effect - In the implementation block
@property (nonatomic,readonly) SCNNode * cameraNode;                                 //@synthesize cameraNode=_cameraNode - In the implementation block
@property (nonatomic,retain) SCNScene * scene;                                       //@synthesize scene=_scene - In the implementation block
@property (nonatomic,retain) SCNNode * container;                                    //@synthesize container=_container - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoMaterial;                            //@synthesize videoMaterial=_videoMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoColorMultiplyMaterial;               //@synthesize videoColorMultiplyMaterial=_videoColorMultiplyMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * saturationMaterial;                       //@synthesize saturationMaterial=_saturationMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoGrayScaleNoiseMaterial;              //@synthesize videoGrayScaleNoiseMaterial=_videoGrayScaleNoiseMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoGrayScaleMaterial;                   //@synthesize videoGrayScaleMaterial=_videoGrayScaleMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoInvertMaterial;                      //@synthesize videoInvertMaterial=_videoInvertMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoMaskMaterial;                        //@synthesize videoMaskMaterial=_videoMaskMaterial - In the implementation block
@property (nonatomic,retain) id<MQCameraConfigProtocol> cameraSettings;              //@synthesize cameraSettings=_cameraSettings - In the implementation block
@property (nonatomic,retain) MQEffectBase * currentEffect;                           //@synthesize currentEffect=_currentEffect - In the implementation block
-(id<MQCameraConfigProtocol>)cameraSettings;
-(void)drawFace:(id)arg1 ;
-(void)onEnterFrame:(double)arg1 ;
-(id)customVideoMaterials;
-(void)postConstruct;
-(void)setVideoMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoGrayScaleNoiseMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoGrayScaleMaterial:(SCNMaterial *)arg1 ;
-(void)setSaturationMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoInvertMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoColorMultiplyMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoMaskMaterial:(SCNMaterial *)arg1 ;
-(void)updateVideoMaterial;
-(SCNMaterial *)videoMaskMaterial;
-(SCNMaterial *)videoColorMultiplyMaterial;
-(SCNMaterial *)saturationMaterial;
-(SCNMaterial *)videoGrayScaleNoiseMaterial;
-(SCNMaterial *)videoGrayScaleMaterial;
-(SCNMaterial *)videoInvertMaterial;
-(SCNMaterial *)videoMaterial;
-(MQEffectBase *)currentEffect;
-(void)updateProjection;
-(void)initCamera;
-(void)hideContainer;
-(void)showContainer;
-(BOOL)closeMouth:(id)arg1 ;
-(void)updateEffectContainers;
-(void)drawFaces:(id)arg1 numDetectedFaces:(long long)arg2 ;
-(void)setCameraSettings:(id<MQCameraConfigProtocol>)arg1 ;
-(void)setCurrentEffect:(MQEffectBase *)arg1 ;
-(SCNNode *)container;
-(void)setContainer:(SCNNode *)arg1 ;
-(id)initWithSize:(CGSize)arg1 ;
-(void)setEffect:(MQEffectBase *)arg1 ;
-(MQEffectBase *)effect;
-(SCNScene *)scene;
-(void)setScene:(SCNScene *)arg1 ;
-(SCNNode *)cameraNode;
@end

