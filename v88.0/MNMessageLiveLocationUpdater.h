/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:25:54 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBClassInjectable.h>
#import <Messenger/MNThreadSummarySubscribing.h>

@protocol OS_dispatch_queue, MNThreadSummarySubscribing;
@class NSObject, MNMessageLiveLocationUpdaterInjector, MNMessageLiveLocationLocationManager, MNMessageLiveLocationUpdaterListenerAnnouncer, MNMessageLiveLocationAnalyticsLogger, NSDictionary, NSString;

@interface MNMessageLiveLocationUpdater : NSObject <FBClassInjectable, MNThreadSummarySubscribing> {

	NSObject*<OS_dispatch_queue> _queue;
	MNMessageLiveLocationUpdaterInjector* _injector;
	MNMessageLiveLocationLocationManager* _locationManager;
	MNMessageLiveLocationUpdaterListenerAnnouncer* _announcer;
	id<MNThreadSummarySubscribing> _weakSelfThreadSummarySubscriber;
	MNMessageLiveLocationAnalyticsLogger* _analyticsLogger;
	NSDictionary* _threadKeyToEntryMap;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSDictionary * threadKeyToEntryMap;                //@synthesize threadKeyToEntryMap=_threadKeyToEntryMap - In the implementation block
+(Class)injectorClass;
-(id)initWithInjector:(id)arg1 ;
-(void)didApplyUpdates:(id)arg1 toThreadSummary:(id)arg2 ;
-(void)didDeleteThreadWithKey:(id)arg1 ;
-(void)didReplaceThreadSummary:(id)arg1 withThreadSummary:(id)arg2 forThreadKey:(id)arg3 ;
-(void)didPurgeSummary:(id)arg1 ;
-(void)didPurgeAllThreadSummaries;
-(BOOL)isSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(void)stopSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(BOOL)isSendingLocationUpdatesForThreadKey:(id)arg1 ;
-(void)startSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 duration:(double)arg3 ;
-(void)stopSendingLocationUpdatesForThreadKey:(id)arg1 ;
-(void)_didReceiveLocationManagerUpdateWithLocation:(id)arg1 ;
-(void)_didReceiveLocationManagerError:(id)arg1 ;
-(id)initWithQueue:(id)arg1 injector:(id)arg2 ;
-(BOOL)_shouldSendLocationUpdates;
-(NSDictionary *)threadKeyToEntryMap;
-(void)_startSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 duration:(double)arg3 ;
-(void)_removeCancelableFromMapForThreadKey:(id)arg1 ;
-(void)_liveLocationTimerElapsedForThreadKey:(id)arg1 ;
-(void)setThreadKeyToEntryMap:(NSDictionary *)arg1 ;
-(void)_createLocationManagerIfNecessary;
-(void)_stopSendingLocationUpdatesForThreadKey:(id)arg1 ;
-(void)_stopSendingLocationUpdatesForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(id)_entryForThreadKey:(id)arg1 ;
-(void)_stopRequestingLocationUpdatesIfNecessary;
-(void)_sendExpirationRequestWithMessageLiveLocationId:(id)arg1 ;
-(id)_entryForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(void)_removeCancelableFromMapForThreadKey:(id)arg1 offlineThreadingId:(id)arg2 ;
-(void)_didReceiveThreadUpdateWithThreadKey:(id)arg1 liveLocation:(id)arg2 ;
-(id)_threadKeyToEntryMapDebugString;
-(void)dealloc;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
@end

