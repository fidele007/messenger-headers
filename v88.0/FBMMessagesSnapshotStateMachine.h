/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:25:49 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBMMessagesSnapshotNetworkFetchingDelegate.h>

@protocol FBMMessagesSnapshotStateMachineDelegate, FBMMessagesSnapshotCriticalNetworkFetching;
@class FBAnalytics, NSArray, NSMutableArray, NSString;

@interface FBMMessagesSnapshotStateMachine : NSObject <FBMMessagesSnapshotNetworkFetchingDelegate> {

	id<FBMMessagesSnapshotStateMachineDelegate> _delegate;
	FBAnalytics* _analytics;
	id<FBMMessagesSnapshotCriticalNetworkFetching> _criticalNetworkFetcher;
	NSArray* _nonCriticalFetchersWaitingToFire;
	NSMutableArray* _currentlyRunningNonCriticalFetchers;
	unsigned long long _currentState;

}

@property (assign) unsigned long long currentState;                 //@synthesize currentState=_currentState - In the implementation block
@property (readonly) BOOL isFetching; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)messagesSnapshotNetworkFetcherDidCancel:(id)arg1 ;
-(void)messagesSnapshotNetworkFetcher:(id)arg1 didFailWithError:(id)arg2 ;
-(void)messagesSnapshotNetworkFetcherDidSuccessfullyCompleteFetch:(id)arg1 ;
-(id)initWithCriticalNetworkFetcher:(id)arg1 nonCriticalNetworkFetchers:(id)arg2 delegate:(id)arg3 analytics:(id)arg4 ;
-(void)fetchMessagesSnapshot;
-(void)_setCurrentStateAndAnnounceChange:(unsigned long long)arg1 ;
-(void)_fireOffAnyNonCriticalDataFetchesAndUpdateState;
-(void)_stopTrackingNonCriticalFetcherAndUpdateState:(id)arg1 ;
-(void)_updateStateAfterCriticalFetchIsCompleteAndNonCriticalFetchesHaveBeenFiredOff;
-(void)cancel;
-(NSString *)description;
-(unsigned long long)currentState;
-(void)setCurrentState:(unsigned long long)arg1 ;
-(BOOL)isFetching;
@end

