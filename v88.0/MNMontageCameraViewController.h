/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:25:48 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIViewController.h>
#import <Messenger/FBCaptureManagerListener.h>
#import <Messenger/MNMontageCameraViewDelegate.h>
#import <Messenger/MNMontageCaptureInteractionControllerDelegate.h>
#import <Messenger/MNMontagePermissionsViewDelegate.h>
#import <Messenger/MNMontageComposerHudCameraListener.h>

@protocol MNCameraSettingsInterface, MNCameraDeviceCycling, MNMontageCameraViewControllerDelegate;
@class FBCaptureManager, MNSoundController, FBTimer, FBUserSession, FBLazyCreator, MNMontageCameraState, MNMontageCameraStateListenerAnnouncer, NSTimer, MNCameraPermissionsLogger, MNCameraCapturedPhoto, MNCameraCapturedVideo, NSNotificationCenter, MNMontageCaptureInteractionController, NSString;

@interface MNMontageCameraViewController : UIViewController <FBCaptureManagerListener, MNMontageCameraViewDelegate, MNMontageCaptureInteractionControllerDelegate, MNMontagePermissionsViewDelegate, MNMontageComposerHudCameraListener> {

	FBCaptureManager* _captureManager;
	MNSoundController* _soundController;
	FBTimer* _startRecordingTimer;
	FBUserSession* _userSession;
	FBLazyCreator* _cameraViewCreator;
	FBLazyCreator* _permissionsViewCreator;
	MNMontageCameraState* _cameraState;
	MNMontageCameraStateListenerAnnouncer* _cameraStateAnnouncer;
	NSTimer* _videoTimer;
	id<MNCameraSettingsInterface> _cameraSettings;
	id<MNCameraDeviceCycling> _cameraCycler;
	unsigned long long _appearanceState;
	MNCameraPermissionsLogger* _permissionsLogger;
	MNCameraCapturedPhoto* _photoCapture;
	MNCameraCapturedVideo* _videoCapture;
	long long _flashMode;
	double _pinchZoomFactor;
	double _panZoomFactor;
	NSNotificationCenter* _notificationCenter;
	id _willResignActiveNotificationHandler;
	id _didBecomeActiveNotificationHandler;
	BOOL _isCameraActive;
	BOOL _appIsActive;
	BOOL _waitingToLoadAudioSessionBeforeBeginningRecording;
	BOOL _waitingToFinishPlayingCaptureSoundBeforeBeginningRecording;
	BOOL _captureManagerNeedSetup;
	BOOL _isFullscreen;
	BOOL _canUseCamera;
	id<MNMontageCameraViewControllerDelegate> _delegate;
	MNMontageCaptureInteractionController* _captureInteractionController;

}

@property (assign,nonatomic,__weak) id<MNMontageCameraViewControllerDelegate> delegate;                         //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MNMontageCameraState * cameraState; 
@property (nonatomic,retain) MNMontageCaptureInteractionController * captureInteractionController;              //@synthesize captureInteractionController=_captureInteractionController - In the implementation block
@property (assign,nonatomic) BOOL isFullscreen;                                                                 //@synthesize isFullscreen=_isFullscreen - In the implementation block
@property (assign,nonatomic) BOOL canUseCamera;                                                                 //@synthesize canUseCamera=_canUseCamera - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)captureManagerCapturedImage:(id)arg1 metadata:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 ;
-(void)captureManagerCapturedVideo:(id)arg1 thumbnail:(id)arg2 cameraPosition:(long long)arg3 ;
-(void)captureManagerDidFailToCaptureImage;
-(void)captureManagerDidFailToCaptureVideo;
-(void)captureManagerPreviewDidLoad:(id)arg1 ;
-(void)captureManagerHasFinishedLoadingAudioSession;
-(void)captureManagerDidFailToLoadAudioSessionWithError:(id)arg1 ;
-(void)captureManagerHasFinishedLoadingCaptureSession;
-(void)captureManagerHasEndedCaptureSession;
-(void)captureManagerUpdatedPreviousCaptureDevice:(id)arg1 toCurrentCaptureDevice:(id)arg2 ;
-(id)initWithSoundController:(id)arg1 captureManager:(id)arg2 cameraSettings:(id)arg3 userSession:(id)arg4 cameraCycler:(id)arg5 ;
-(void)montageCameraView:(id)arg1 didTapAtPoint:(CGPoint)arg2 ;
-(void)montageCameraViewDidDoubleTap:(id)arg1 ;
-(void)montageCameraViewDidPinch:(id)arg1 ;
-(BOOL)_isAuthorized;
-(void)_setupCaptureManagerIfNecessary;
-(void)_willResignActive;
-(void)_didBecomeActive;
-(void)_updateCameraActiveState;
-(void)_updatePreviewLayerFramerate;
-(void)_stopSession;
-(void)_swapCameraPosition;
-(double)_maxZoomFactor;
-(void)_captureImage;
-(void)_startRecording;
-(void)_beginRecordingIfPossible;
-(void)_finishRecordingReachedMaxVideoCaptureLength:(BOOL)arg1 wasCancelled:(BOOL)arg2 ;
-(void)_endRecording;
-(void)_photoDidCapture;
-(void)_completePhotoCapture:(id)arg1 ;
-(void)_completeVideoCapture:(id)arg1 ;
-(void)_videoDidCapture;
-(void)_loadPreviewLayerCameraOptions;
-(void)_toggleFlashMode;
-(void)_cameraPermissionGrantedWithMicrophonePermission:(BOOL)arg1 ;
-(void)_cameraPermissionDenied;
-(void)_startSession;
-(void)_completeCapture;
-(BOOL)montageCaptureInteractionControllerShouldBeginCapture:(id)arg1 ;
-(void)montageCaptureInteractionControllerDidCaptureImage:(id)arg1 ;
-(void)montageCaptureInteractionControllerStartedRecording:(id)arg1 ;
-(void)montageCaptureInteractionControllerDidCancelRecording:(id)arg1 ;
-(void)montageCaptureInteractionControllerFinishedRecording:(id)arg1 reachedMaxVideoCaptureLength:(BOOL)arg2 ;
-(void)montageCaptureInteractionController:(id)arg1 didDragUpFromCameraButton:(double)arg2 ;
-(void)montageCaptureInteractionControllerDidChangeState:(id)arg1 ;
-(void)montagePermissisonsViewDidRequestPermissions:(id)arg1 ;
-(void)montageComposerHudDidTapFlip;
-(void)montageComposerHudDidTapFlash;
-(void)setCaptureInteractionController:(MNMontageCaptureInteractionController *)arg1 ;
-(void)setCanUseCamera:(BOOL)arg1 ;
-(void)addCameraStateListener:(id)arg1 announceCurrentState:(BOOL)arg2 ;
-(id)addFilterToPhoto:(id)arg1 ;
-(MNMontageCaptureInteractionController *)captureInteractionController;
-(void)setDelegate:(id<MNMontageCameraViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNMontageCameraViewControllerDelegate>)delegate;
-(BOOL)prefersStatusBarHidden;
-(unsigned long long)supportedInterfaceOrientations;
-(void)reset;
-(BOOL)shouldAutorotate;
-(void)loadView;
-(void)_updateView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(MNMontageCameraState *)cameraState;
-(void)_updateCameraState;
-(BOOL)isFullscreen;
-(void)setIsFullscreen:(BOOL)arg1 ;
-(BOOL)canUseCamera;
-(BOOL)_isCapturing;
@end

