/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:26:06 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class SCNMaterial, NSString, MQProgramCompileDelegate;

@interface MQMaterialCollection : NSObject {

	BOOL _useSampleScreenTexture;
	SCNMaterial* _occluderMaterial;
	NSString* _shadersHeaderCode;
	MQProgramCompileDelegate* _programDelegate;

}

@property (nonatomic,readonly) SCNMaterial * occluderMaterial; 
@property (assign,nonatomic) BOOL useSampleScreenTexture;                   //@synthesize useSampleScreenTexture=_useSampleScreenTexture - In the implementation block
+(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 inDirectory:(id)arg4 ;
+(id)occluderMaterial;
+(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ;
+(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ;
+(void)loadDiffuseTextureWithTarget:(id)arg1 assetStorage:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 ;
+(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 inDirectory:(id)arg4 ;
+(id)createMaterialWithMaterialType:(long long)arg1 textureName:(id)arg2 ofType:(id)arg3 ;
+(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 inDirectory:(id)arg5 ;
+(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 ;
+(BOOL)useSampleScreenTexture;
+(void)setUseSampleScreenTexture:(BOOL)arg1 ;
+(id)createMaterialWithMaterialType:(long long)arg1 textureName:(id)arg2 ofType:(id)arg3 inDirectory:(id)arg4 ;
+(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 ;
+(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 inDirectory:(id)arg5 ;
+(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 ;
+(id)_getShaderHeader;
+(id)getProgramDelegate;
+(id)URLForShaderWithName:(id)arg1 extension:(id)arg2 ;
+(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 ;
+(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 inDirectory:(id)arg6 ;
+(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 isRepeat:(BOOL)arg6 ;
+(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 inDirectory:(id)arg6 isRepeat:(BOOL)arg7 ;
+(id)getFragmentShaderSourceWithName:(id)arg1 ;
+(id)getVertexShaderSourceWithName:(id)arg1 ;
+(id)createVideoTextureMaterialWithShaderName:(id)arg1 ;
+(id)sharedInstance;
-(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 inDirectory:(id)arg4 ;
-(SCNMaterial *)occluderMaterial;
-(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ;
-(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ;
-(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 inDirectory:(id)arg4 ;
-(id)createMaterialWithMaterialType:(long long)arg1 textureName:(id)arg2 ofType:(id)arg3 ;
-(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 inDirectory:(id)arg5 ;
-(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 ;
-(BOOL)useSampleScreenTexture;
-(void)setUseSampleScreenTexture:(BOOL)arg1 ;
-(id)createMaterialWithMaterialType:(long long)arg1 textureName:(id)arg2 ofType:(id)arg3 inDirectory:(id)arg4 ;
-(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 ;
-(id)createMaterialWithVertexName:(id)arg1 fragmentName:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 inDirectory:(id)arg5 ;
-(id)createVideoShaderMaterialWithVertex:(id)arg1 fragment:(id)arg2 textureName:(id)arg3 ofType:(id)arg4 ;
-(id)_getShaderHeader;
-(id)getProgramDelegate;
-(id)URLForShaderWithName:(id)arg1 extension:(id)arg2 ;
-(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 ;
-(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 inDirectory:(id)arg6 ;
-(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 isRepeat:(BOOL)arg6 ;
-(void)loadTextureWithTarget:(id)arg1 symbol:(id)arg2 unit:(long long)arg3 textureName:(id)arg4 ofType:(id)arg5 inDirectory:(id)arg6 isRepeat:(BOOL)arg7 ;
-(id)getFragmentShaderSourceWithName:(id)arg1 ;
-(id)getVertexShaderSourceWithName:(id)arg1 ;
-(id)createVideoTextureMaterialWithShaderName:(id)arg1 ;
@end

