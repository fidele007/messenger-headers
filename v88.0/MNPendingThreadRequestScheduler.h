/*
* This header is generated by classdump-dyld 1.0
* on Sunday, September 18, 2016 at 3:25:52 PM Central European Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FF4BCEA7-3F74-4B1C-9F1F-FFFFF37A922E/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNPendingThreadRequestScheduling.h>

@protocol MNPendingThreadCreateWithMessageAPIRequester, MNPendingThreadCreateAsGroupAPIRequester, MNPendingThreadCreateAsMontageAPIRequester, MNMessageSendScheduling, FBClock, MNPendingThreadRequestListening, MNMessageSendAttachmentProgressListening, OS_dispatch_queue;
@class MNThreadCreatorExtensionController, MNPendingThreadStore, NSObject, NSString;

@interface MNPendingThreadRequestScheduler : NSObject <MNPendingThreadRequestScheduling> {

	id<MNPendingThreadCreateWithMessageAPIRequester> _createWithMessageAPIRequester;
	id<MNPendingThreadCreateAsGroupAPIRequester> _createAsGroupAPIRequester;
	id<MNPendingThreadCreateAsMontageAPIRequester> _createAsMontageAPIRequester;
	MNThreadCreatorExtensionController* _threadCreatorExtensionController;
	id<MNMessageSendScheduling> _messageSendScheduler;
	BOOL _shouldCreateCanonicalThreadsImplicitly;
	MNPendingThreadStore* _pendingThreadStore;
	id<FBClock> _clock;
	id<MNPendingThreadRequestListening> _listener;
	id<MNMessageSendAttachmentProgressListening> _attachmentProgressListener;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelThreadCreationWithOfflineId:(id)arg1 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 name:(id)arg2 profileImage:(id)arg3 inviteeByUserId:(id)arg4 shouldPinGroup:(BOOL)arg5 ;
-(void)sendMessage:(id)arg1 toPendingThreadWithOfflineId:(id)arg2 ;
-(void)cancelMessageSendWithOfflineThreadingId:(id)arg1 fromPendingThreadWithOfflineId:(id)arg2 ;
-(void)retryThreadCreationWithOfflineId:(id)arg1 messageOfflineThreadingId:(id)arg2 ;
-(void)retryThreadCreationWithOfflineId:(id)arg1 ;
-(void)createCanonicalThreadWithOtherUserId:(id)arg1 message:(id)arg2 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 invitees:(id)arg3 useExistingGroup:(BOOL)arg4 ;
-(void)createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 inviteeByUserId:(id)arg3 useExistingGroup:(BOOL)arg4 ;
-(void)createMontageThreadWithOfflineId:(id)arg1 message:(id)arg2 ;
-(void)threadDidSync:(id)arg1 withMessageOfflineThreadingIds:(id)arg2 ;
-(id)initWithCreateWithMessageAPIRequester:(id)arg1 createAsGroupAPIRequester:(id)arg2 createAsMontageAPIRequester:(id)arg3 threadCreatorExtensionController:(id)arg4 messageSendScheduler:(id)arg5 createCanonicalThreadsImplicitly:(BOOL)arg6 pendingThreadStore:(id)arg7 clock:(id)arg8 listener:(id)arg9 attachmentProgressListener:(id)arg10 queue:(id)arg11 ;
-(BOOL)_isTrackingPendingThreadWithOfflineId:(id)arg1 ;
-(void)_createThreadForPendingThread:(id)arg1 message:(id)arg2 ;
-(void)_createGroupThreadWithOfflineId:(id)arg1 message:(id)arg2 inviteeByUserId:(id)arg3 inviteeByPhoneNumber:(id)arg4 useExistingGroup:(BOOL)arg5 ;
-(void)_retryThreadCreationWithOfflineId:(id)arg1 messageOfflineThreadingId:(id)arg2 ;
-(void)_updateStatesAfterCancellingMessage:(id)arg1 pendingThread:(id)arg2 updateBlock:(/*^block*/id)arg3 ;
-(void)_didThreadCreationSucceedWithThreadKey:(id)arg1 messageOfflineThreadingId:(id)arg2 forPendingThreadWithOfflineId:(id)arg3 ;
-(void)_sendThreadCreationRequestForPendingThread:(id)arg1 ;
-(void)_didThreadCreationFailWithError:(id)arg1 forPendingThreadWithOfflineId:(id)arg2 ;
-(void)_didAttachmentPreparationProgressUpdate:(id)arg1 message:(id)arg2 forPendingThreadWithOfflineId:(id)arg3 ;
@end

