/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:41 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNListModelItemKeysLoading.h>

@protocol MNSecureThreadServiceControlling, MNPendingThreadQuerying, MNThreadSummaryOptimisticStateApplying, OS_dispatch_queue;
@class MNThreadListItemsLoader, MNThreadStore, NSObject, NSMutableDictionary, NSMutableSet, NSString;

@interface MNThreadListItemKeysLoader : NSObject <MNListModelItemKeysLoading> {

	long long _threadListType;
	MNThreadListItemsLoader* _threadListItemsLoader;
	MNThreadStore* _threadStore;
	id<MNSecureThreadServiceControlling> _secureMessagingController;
	id<MNPendingThreadQuerying> _pendingThreadQuerier;
	id<MNThreadSummaryOptimisticStateApplying> _optimisticStateApplier;
	NSObject*<OS_dispatch_queue> _queue;
	long long _currentRequestId;
	NSMutableDictionary* _requestIdToCancelableMap;
	NSMutableSet* _longOperationRequestIds;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelForKey:(id)arg1 ;
-(id)initWithThreadListType:(long long)arg1 threadListItemsLoader:(id)arg2 threadStore:(id)arg3 secureMessagingController:(id)arg4 pendingThreadQuerier:(id)arg5 optimisticStateApplier:(id)arg6 queue:(id)arg7 ;
-(id)_allPendingThreads;
-(void)_loadItemKeysForKey:(id)arg1 update:(id)arg2 existingItemKeys:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)_ensureSecureMessagingStoreIsOpen:(/*^block*/id)arg1 ;
-(void)_reloadWithExistingThreadCount:(long long)arg1 callback:(/*^block*/id)arg2 ;
-(void)_loadAdditionalThreadWithKey:(id)arg1 existingThreadKeys:(id)arg2 existingListMetadata:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)_loadAdditionalPageWithAdditionalThreadCount:(long long)arg1 existingThreadKeys:(id)arg2 existingListMetadata:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)_loadThreadListWithSyncedFilter:(id)arg1 secureFilter:(id)arg2 existingValidThreadKeys:(id)arg3 existingValidListMetadata:(id)arg4 callback:(/*^block*/id)arg5 ;
-(long long)_generateRequestId;
-(void)_handleThreadLoadSuccess:(id)arg1 existingValidThreadKeys:(id)arg2 existingValidListMetadata:(id)arg3 requestId:(long long)arg4 callback:(/*^block*/id)arg5 ;
-(void)_handleLoadFailure:(id)arg1 requestId:(long long)arg2 callback:(/*^block*/id)arg3 ;
-(void)_handleThreadListLoadSuccess:(id)arg1 filter:(id)arg2 existingValidThreadKeys:(id)arg3 existingValidListMetadata:(id)arg4 requestId:(long long)arg5 callback:(/*^block*/id)arg6 ;
-(void)_handleLoadProgressBegin:(long long)arg1 callback:(/*^block*/id)arg2 ;
-(void)_handleLoadProgressEnd:(long long)arg1 callback:(/*^block*/id)arg2 ;
-(void)_buildItemKeysForThreadSummaries:(id)arg1 secureThreads:(id)arg2 pendingThreads:(id)arg3 didReachEndOfList:(BOOL)arg4 existingValidThreadKeys:(id)arg5 existingValidListMetadata:(id)arg6 trimToNewerThanTimestamp:(unsigned long long)arg7 callback:(/*^block*/id)arg8 ;
-(void)loadItemKeysForKey:(id)arg1 update:(id)arg2 existingItemKeys:(id)arg3 callback:(/*^block*/id)arg4 ;
@end

