/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:42 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@class NSMutableArray, NSMutableSet, NSSet, EAGLContext;

@interface IGContext : NSObject {

	CVOpenGLESTextureCacheRef _textureCache;
	unsigned _squareVertexBuffer;
	NSMutableArray* _resources;
	NSMutableSet* _surfacesToFlush;
	NSMutableSet* _cachedSurfaces;
	NSSet* _extensions;
	EAGLContext* _openglContext;
	CGSize _maxTextureSize;

}

@property (nonatomic,retain) EAGLContext * openglContext;                           //@synthesize openglContext=_openglContext - In the implementation block
@property (nonatomic,readonly) CVOpenGLESTextureCacheRef textureCache; 
@property (nonatomic,readonly) unsigned squareVertexBuffer; 
@property (nonatomic,readonly) CGSize maxTextureSize;                               //@synthesize maxTextureSize=_maxTextureSize - In the implementation block
@property (nonatomic,readonly) NSSet * extensions; 
@property (nonatomic,readonly) BOOL supportsMappedBuffer; 
@property (nonatomic,readonly) BOOL supportsMappedBufferRange; 
@property (nonatomic,readonly) BOOL supportsVAO; 
+(CGSize)allowedSizeMatchingAspectOf:(CGSize)arg1 ;
+(id)currentContext;
-(BOOL)supportsMappedBufferRange;
-(BOOL)supportsMappedBuffer;
-(BOOL)supportsVAO;
-(id)popReusableSurfaceWithSize:(CGSize)arg1 ;
-(void)pushReusableSurface:(id)arg1 ;
-(void)addSurfaceToFlush:(id)arg1 ;
-(EAGLContext *)openglContext;
-(unsigned)squareVertexBuffer;
-(void)makeCurrent;
-(CGSize)maxTextureSize;
-(CVOpenGLESTextureCacheRef)textureCache;
-(void)setResource:(id)arg1 forFilter:(id)arg2 ;
-(id)resourceForFilter:(id)arg1 ;
-(void)removeAllReusableSurfaces;
-(void)setOpenglContext:(EAGLContext *)arg1 ;
-(id)init;
-(void)dealloc;
-(void)flush;
-(NSSet *)extensions;
@end

