/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:35 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <FBSharedFramework/FBKeyboardObserverDelegate.h>
#import <Messenger/MNComposerLongPressAudioControllerDelegate.h>
#import <Messenger/MNComposerPrimaryExtension.h>
#import <Messenger/MNComposerLongPressTriggerExtensionDelegate.h>

@protocol MNComposerExtensionDelegate, MNComposerExtensionEditDelegate, MNComposerExtensionSendDelegate, MNActionNuxPresenter, MNComposerTooltipPresenting;
@class FBKeyboardObserver, MNSoundController, FBLazyCreator, FBTimer, MNComposerLongPressAudioController, MNUserSettings, UIColor, MNComposerLongPressTriggerExtension, NSString;

@interface MNComposerLongPressAudioExtension : NSObject <FBKeyboardObserverDelegate, MNComposerLongPressAudioControllerDelegate, MNComposerPrimaryExtension, MNComposerLongPressTriggerExtensionDelegate> {

	FBKeyboardObserver* _keyboardObserver;
	MNSoundController* _soundController;
	FBLazyCreator* _composerIconCreator;
	FBTimer* _longPressTooltipDismissTimer;
	MNComposerLongPressAudioController* _longPressAudioController;
	id _sendingContextToken;
	MNUserSettings* _userSettings;
	id<MNComposerExtensionDelegate> _delegate;
	id<MNComposerExtensionEditDelegate> _editDelegate;
	id<MNComposerExtensionSendDelegate> _sendDelegate;
	UIColor* _tintColor;
	id<MNActionNuxPresenter> _actionNuxPresenter;
	id<MNComposerTooltipPresenting> _tooltipPresenter;
	MNComposerLongPressTriggerExtension* _longPressTriggerExtension;

}

@property (nonatomic,readonly) MNComposerLongPressTriggerExtension * longPressTriggerExtension;              //@synthesize longPressTriggerExtension=_longPressTriggerExtension - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<MNComposerExtensionEditDelegate> editDelegate;                        //@synthesize editDelegate=_editDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<MNComposerExtensionSendDelegate> sendDelegate;                        //@synthesize sendDelegate=_sendDelegate - In the implementation block
@property (nonatomic,copy,readonly) NSString * placeholderText; 
@property (nonatomic,copy,readonly) NSString * searchPlaceholderText; 
@property (nonatomic,retain) UIColor * tintColor;                                                            //@synthesize tintColor=_tintColor - In the implementation block
@property (nonatomic,retain) id<MNActionNuxPresenter> actionNuxPresenter;                                    //@synthesize actionNuxPresenter=_actionNuxPresenter - In the implementation block
@property (nonatomic,readonly) BOOL autoFocusSearchBar; 
@property (nonatomic,copy,readonly) id longPressGestureHandler; 
@property (nonatomic,readonly) UIView*<MNComposerActionButton> primaryActionButton; 
@property (nonatomic,readonly) long long primaryExtensionType; 
@property (nonatomic,retain) id<MNComposerTooltipPresenting> tooltipPresenter;                               //@synthesize tooltipPresenter=_tooltipPresenter - In the implementation block
-(MNComposerLongPressTriggerExtension *)longPressTriggerExtension;
-(id)_composerIcon;
-(void)setUpWithInitiator:(id)arg1 ;
-(void)applyOptions:(id)arg1 ;
-(id)extensionModule;
-(BOOL)shouldPromote;
-(BOOL)isInSegmentedControl;
-(void)didSelect:(BOOL)arg1 ;
-(BOOL)shouldPresent:(BOOL)arg1 ;
-(id)presentationStrategy;
-(long long)inputSource;
-(BOOL)isEligible;
-(id)activeSubExtension;
-(id)subExtensions;
-(void)didUpdateComposingContext:(BOOL)arg1 ;
-(NSString *)searchPlaceholderText;
-(id)initWithAudioRecorderProvider:(id)arg1 composerIconProvider:(id)arg2 modalPresentationStackManagerProvider:(id)arg3 soundController:(id)arg4 applicationName:(id)arg5 webRTCHandler:(id)arg6 userSettings:(id)arg7 ;
-(long long)primaryExtensionType;
-(UIView*<MNComposerActionButton>)primaryActionButton;
-(id)_threadComposingContext;
-(void)didPresentMoreDrawer;
-(id<MNActionNuxPresenter>)actionNuxPresenter;
-(void)setActionNuxPresenter:(id<MNActionNuxPresenter>)arg1 ;
-(BOOL)autoFocusSearchBar;
-(id)longPressGestureHandler;
-(id<MNComposerTooltipPresenting>)tooltipPresenter;
-(void)setTooltipPresenter:(id<MNComposerTooltipPresenting>)arg1 ;
-(void)longPressAudioControllerWillStartRecording:(id)arg1 ;
-(void)longPressAudioController:(id)arg1 didFinishRecordingWithAttachment:(id)arg2 ;
-(void)longPressAudioControllerDidCancelRecording:(id)arg1 ;
-(void)longPressAudioControllerDidReachRecordingLimit:(id)arg1 ;
-(void)longPressAudioController:(id)arg1 showBannerText:(id)arg2 ;
-(void)longPressAudioControllerHideBannerText:(id)arg1 ;
-(id)longPressAudioControllerRequestTintColor:(id)arg1 ;
-(void)_dismissTooltip:(BOOL)arg1 longPressTooltip:(BOOL)arg2 animated:(BOOL)arg3 ;
-(void)_stopLongPressTooltipDismissTimer;
-(void)_startLongPressTooltipDismissTimer;
-(void)keyboardObserver:(id)arg1 keyboardWillShowWithBeginFrame:(CGRect)arg2 endFrame:(CGRect)arg3 duration:(double)arg4 curve:(long long)arg5 ;
-(void)keyboardObserverKeyboardDidHide:(id)arg1 ;
-(id)extensionIdentifier;
-(void)setDelegate:(id<MNComposerExtensionDelegate>)arg1 ;
-(void)dealloc;
-(id<MNComposerExtensionDelegate>)delegate;
-(long long)category;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
-(id)tabBarItem;
-(long long)soundName;
-(id<MNComposerExtensionEditDelegate>)editDelegate;
-(void)setEditDelegate:(id<MNComposerExtensionEditDelegate>)arg1 ;
-(NSString *)placeholderText;
-(void)tearDown;
-(id<MNComposerExtensionSendDelegate>)sendDelegate;
-(void)setSendDelegate:(id<MNComposerExtensionSendDelegate>)arg1 ;
-(BOOL)isThirdParty;
@end

