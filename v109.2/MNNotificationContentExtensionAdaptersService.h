/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:41 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FBSharedFramework/FBClassInjectable.h>
#import <FBSharedFramework/MNServiceControllable.h>

@protocol FBBackgroundingListener, MNThreadSummarySubscribing, MNThreadMessageSubscribing, MNMessagesSyncSnapshotListening, OS_dispatch_queue;
@class MNNotificationContentExtensionInboxThreadListIdentifiersPersister, MNNCEOutgoingSendQueueRestorer, MNNCEThreadClientUpdateOptimisticCacheRestorer, MNThreadStore, MNNotificationContentExtensionThreadDataAppEventThrottler, MNNotificationContentExtensionAdaptersServiceInjector, NSObject, NSString;

@interface MNNotificationContentExtensionAdaptersService : NSObject <FBClassInjectable, MNServiceControllable> {

	MNNotificationContentExtensionInboxThreadListIdentifiersPersister* _inboxListPersister;
	MNNCEOutgoingSendQueueRestorer* _outgoingSendQueueRestorer;
	MNNCEThreadClientUpdateOptimisticCacheRestorer* _clientUpdateOptimisticCacheRestorer;
	MNThreadStore* _threadStore;
	MNNotificationContentExtensionThreadDataAppEventThrottler* _extensionThreadDataUpdateThrottler;
	MNNotificationContentExtensionAdaptersServiceInjector* _injector;
	id<FBBackgroundingListener> _dispatchedSelfBackgroundListener;
	id<MNThreadSummarySubscribing> _dispatchedThreadSummarySubscriber;
	id<MNThreadMessageSubscribing> _dispatchedMessageSubscriber;
	id<MNMessagesSyncSnapshotListening> _dispatchedSnapshotListener;
	id<FBBackgroundingListener> _dispatchedBackgroundListenerForDataPreparingSystem;
	NSObject*<OS_dispatch_queue> _queue;
	BOOL _didSetupThreadDataSubscriptions;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(Class)injectorClass;
-(BOOL)_shouldBePersistingExtensionThreadData;
-(void)_restoreContentExtensionSendQueue;
-(void)_performInitialPersistOfExtensionThreadDataIfNecessary;
-(void)_endBackgroundTaskWithId:(unsigned long long)arg1 ;
-(void)_restoredSendQueueFromContentExtension:(id)arg1 ;
-(void)handleIdle;
-(id)initWithInjector:(id)arg1 ;
-(void)didEnterForeground;
-(void)stop;
-(void)start:(id)arg1 ;
-(void)didEnterBackground;
@end

