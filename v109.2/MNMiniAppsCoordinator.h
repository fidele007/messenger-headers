/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:34 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <FBSharedFramework/FBViewerContextClassProvidable.h>
#import <Messenger/MNFlowStateServiceListener.h>
#import <Messenger/MNMiniAppOverlayViewControllerDelegate.h>

@protocol MNMiniAppsCoordinatorPresenting, MNTypingStateListener;
@class MNMiniAppsListeningAnnouncer, MNFlowStateService, MNMiniAppNotificationDataSource, MNUserStore, MNUserSettings, FBMobileConfigContextManager, NSString, NSDictionary, MNMiniAppLocationManager, MNMiniAppOverlayViewController, FBLazyCreator, MNMiniAppDummyHeaderViewFactory;

@interface MNMiniAppsCoordinator : NSObject <FBViewerContextClassProvidable, MNFlowStateServiceListener, MNMiniAppOverlayViewControllerDelegate> {

	MNMiniAppsListeningAnnouncer* _miniAppListeningAnnouncer;
	MNFlowStateService* _flowStateService;
	MNMiniAppNotificationDataSource* _notificationDataSource;
	MNUserStore* _userStore;
	MNUserSettings* _userSettings;
	FBMobileConfigContextManager* _configManager;
	NSString* _currentMiniAppURL;
	NSString* _currentFlowStateIdentifier;
	NSString* _currentSuggestionId;
	NSString* _currentEntrypoint;
	NSDictionary* _currentInitialProperties;
	MNMiniAppLocationManager* _locationManager;
	MNMiniAppOverlayViewController* _miniAppOverlayViewController;
	FBLazyCreator* _inAppNotificationManagerCreator;
	long long _currentMiniAppId;
	BOOL _minimizedInDrawerPresentation;
	MNMiniAppDummyHeaderViewFactory* _dummyHeaderFactory;
	/*^block*/id _actionNotificationCompletionBlock;
	BOOL _miniAppMinimized;
	id<MNMiniAppsCoordinatorPresenting> _presenter;
	id<MNTypingStateListener> _typingStateListener;

}

@property (assign,nonatomic,__weak) id<MNMiniAppsCoordinatorPresenting> presenter;              //@synthesize presenter=_presenter - In the implementation block
@property (nonatomic,retain) id<MNTypingStateListener> typingStateListener;                     //@synthesize typingStateListener=_typingStateListener - In the implementation block
@property (assign,nonatomic) BOOL miniAppMinimized;                                             //@synthesize miniAppMinimized=_miniAppMinimized - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handleNotificationTapWithDataSource:(id)arg1 ;
-(BOOL)shouldShowMessageNotificationForThreadSummary:(id)arg1 ;
-(void)showMessageNotificationIfNecessaryForMessage:(id)arg1 threadSummary:(id)arg2 ;
-(void)setTypingStateListener:(id<MNTypingStateListener>)arg1 ;
-(void)saveMiniAppState;
-(void)restoreMiniAppState;
-(id)dummyHeaderView;
-(BOOL)isShowingMiniApp;
-(void)setBackgroundMaskHidden:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)dismissMiniAppWithSuccess:(BOOL)arg1 ;
-(void)subscribeToFlowStateChanges:(id)arg1 ;
-(void)showActionNotificationWithSenderId:(id)arg1 text:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setMiniAppMinimized:(BOOL)arg1 ;
-(BOOL)hasLocationPermission;
-(void)requestLocationPermissionWithGrantedBlock:(/*^block*/id)arg1 permissionDeniedBlock:(/*^block*/id)arg2 ;
-(void)requestLocationwithSuccessBlock:(/*^block*/id)arg1 failureBlock:(/*^block*/id)arg2 ;
-(void)signalUserInteractionBeganForMiniApp:(long long)arg1 ;
-(void)signalUserInteractionEndedForMiniApp:(long long)arg1 ;
-(void)miniAppWillMount:(id)arg1 ;
-(void)miniAppDidMount:(id)arg1 ;
-(void)miniAppWillUnmount:(id)arg1 ;
-(void)didTapDummyHeader;
-(void)presentMiniAppViewWithConfig:(id)arg1 ;
-(void)_dismissMiniAppWithSuccess:(BOOL)arg1 showMinimizedHeader:(BOOL)arg2 ;
-(void)_dispatchUpdatedFlowStateWithObjectID:(id)arg1 flowState:(id)arg2 ;
-(void)_minimizeMiniAppFromDrawer;
-(void)_expandMiniAppInDrawer;
-(id)_dummyHeaderFactory;
-(BOOL)_isMiniAppExpanded;
-(void)_showNotificationForThreadSummary:(id)arg1 message:(id)arg2 text:(id)arg3 sender:(id)arg4 ;
-(void)_fetchUserWithSenderId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_handleNotificationTapWithDataSource:(id)arg1 ;
-(id<MNTypingStateListener>)typingStateListener;
-(void)_dispatchMiniAppEventWithName:(id)arg1 body:(id)arg2 ;
-(BOOL)miniAppMinimized;
-(void)_minimizeMiniAppFromLegacyPresentation;
-(void)didModifyFlowState:(id)arg1 forName:(id)arg2 ;
-(CGSize)miniAppOverlayViewController:(id)arg1 miniAppBoundingSizeThatFitsSize:(CGSize)arg2 ;
-(void)miniAppOverlayViewControllerDidTapNotification:(id)arg1 dataSource:(id)arg2 ;
-(BOOL)shouldDismissDrawerWithSource:(long long)arg1 ;
-(void)addMiniAppListener:(id)arg1 ;
-(void)removeMiniAppListener:(id)arg1 ;
-(BOOL)isEligibleForDrawerPresentation;
-(id)initWithProviderMapData:(id)arg1 ;
-(void)dismissKeyboard;
-(id<MNMiniAppsCoordinatorPresenting>)presenter;
-(void)setPresenter:(id<MNMiniAppsCoordinatorPresenting>)arg1 ;
@end

