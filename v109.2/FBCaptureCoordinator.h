/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:40 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBCaptureCoordinatorBase.h>
#import <Messenger/FBCaptureEventListener.h>
#import <Messenger/FBMPPreviewResizeDelegate.h>
#import <Messenger/FBCameraCaptureCoordinatorSubclassProtocol.h>
#import <Messenger/FBCaptureCameraController.h>
#import <Messenger/FBCaptureSessionController.h>
#import <Messenger/FBCapturePerformanceTrackerController.h>

@protocol FBCCLogger, FBMPVideoRecorderProtocol, FBOrientationTracking;
@class FBCaptureManager, FBMPPreview, FBFramePerformanceTracker, FBMPMovingPhotosCapturer, NSURL, FBMPYUVToBGRAFilter, NSString;

@interface FBCaptureCoordinator : FBCaptureCoordinatorBase <FBCaptureEventListener, FBMPPreviewResizeDelegate, FBCameraCaptureCoordinatorSubclassProtocol, FBCaptureCameraController, FBCaptureSessionController, FBCapturePerformanceTrackerController> {

	FBCaptureManager* _captureManager;
	id<FBCCLogger> _logger;
	FBFramePerformanceTracker* _framePerformanceTracker;
	long long _framerateCap;
	FBMPPreview* _cameraPreview;
	id<FBMPVideoRecorderProtocol> _videoRecorder;
	FBMPMovingPhotosCapturer* _movingPhotosCapturer;
	id<FBOrientationTracking> _orientationTracker;
	NSURL* _directoryPathForVideoStorage;
	BOOL _supportMovingPhotos;
	FBMPYUVToBGRAFilter* _yuvToBgraFilter;
	SCD_Struct_FB205 _recordingConfig;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) FBCaptureManager * captureManager;              //@synthesize captureManager=_captureManager - In the implementation block
@property (nonatomic,readonly) FBMPPreview * cameraPreview;                    //@synthesize cameraPreview=_cameraPreview - In the implementation block
-(void)addCaptureManagerListener:(id)arg1 ;
-(id)capturePreview;
-(void)captureImageWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)performCameraAction:(id)arg1 ;
-(FBCaptureManager *)captureManager;
-(void)connectOutputToVideoInput:(id)arg1 pixelFormat:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithCaptureCoordinatorCameraConfiguration:(id)arg1 productAnalyticsName:(id)arg2 orientationTracker:(id)arg3 framePerformanceTracker:(id)arg4 filterFactory:(id)arg5 logger:(id)arg6 directoryPathForVideoStorage:(id)arg7 recordingConfig:(SCD_Struct_FB205)arg8 ;
-(id)framePerformanceResultDisplayer;
-(BOOL)doesCurrentDeviceSupportSessionPreset:(id)arg1 ;
-(void)cancelRecordingIfAny;
-(void)stopRecordingWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(double)maxZoomFactor;
-(void)startRecordingWithStartCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(void)startRecordingWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)canZoomToZoomFactor:(double)arg1 ;
-(void)removeCaptureManagerListener:(id)arg1 ;
-(BOOL)doesCurrentDeviceSupportTorchMode:(long long)arg1 ;
-(void)filterTopologyDidChange;
-(void)setFramerateCap:(long long)arg1 ;
-(void)connectOutputToVideoInput:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)videoFilterChainInput;
-(id)videoFilterChainOutput;
-(FBMPPreview *)cameraPreview;
-(id)initWithCaptureCoordinator:(id)arg1 ;
-(void)_restartFramePerformanceTracking;
-(void)_captureImageInHighResolution:(BOOL)arg1 completion:(/*^block*/id)arg2 callbackQueue:(id)arg3 ;
-(id)_performanceLoggingParameters;
-(void)_handleCaptureManagerCapturedImageWithImage:(id)arg1 isHighResolution:(BOOL)arg2 previewSize:(CGSize)arg3 processImageBlock:(/*^block*/id)arg4 cameraPosition:(long long)arg5 orientation:(long long)arg6 error:(id)arg7 completion:(/*^block*/id)arg8 ;
-(void)_capturedImage:(id)arg1 highResolutionImage:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(id)_capturePhotoPerfParamsWithEffect:(BOOL)arg1 image:(id)arg2 ;
-(void)_captureFilteredImage:(id)arg1 highResolutionImage:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 imageInput:(id)arg5 degrees:(float)arg6 completion:(/*^block*/id)arg7 ;
-(void)_connectLocalImageInput:(id)arg1 ;
-(void)_disconnectLocalImageInput:(id)arg1 ;
-(void)_setupRecordingWithCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(BOOL)_audioCaptureWasDetermined;
-(void)_startRecordingWithCompletion:(/*^block*/id)arg1 segmentCompletion:(/*^block*/id)arg2 ;
-(void)_didFinishStartRecordingVideoWithError:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_cancelRecording;
-(void)_stopRecordingWithCompletion:(/*^block*/id)arg1 callbackQueue:(id)arg2 ;
-(void)_handleVideoRecordingCompletionWithAsset:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)supportsCaptureSessionPreset:(id)arg1 cameraPosition:(long long)arg2 ;
-(void)captureDeviceDidChangeTo:(id)arg1 ;
-(void)preview:(id)arg1 didChangeSizeTo:(CGSize)arg2 ;
-(id)filterPerformanceExtras;
-(void)captureImageWithHighResolutionIfNoEffect:(BOOL)arg1 callbackQueue:(id)arg2 comletion:(/*^block*/id)arg3 ;
-(void)captureMovingPhotosWithCompletion:(/*^block*/id)arg1 ;
-(void)requestNextFrameDidRenderToPreviewCallback:(/*^block*/id)arg1 ;
-(id)currentDevice;
-(void)dealloc;
-(BOOL)isRunning;
-(id)sessionID;
-(void)_initCommon;
-(id)preview;
-(void)startSession;
-(void)stopSession;
@end

