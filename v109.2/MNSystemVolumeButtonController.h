/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:42 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBAudioSessionManagerClient.h>

@class NSHashTable, NSDate, MPVolumeView, NSString;

@interface MNSystemVolumeButtonController : NSObject <FBAudioSessionManagerClient> {

	NSHashTable* _volumeButtonClients;
	unsigned long long _volumeButtonsState;
	BOOL _observingVolumeButtons;
	BOOL _lockingVolume;
	BOOL _hidingSystemVolumeHud;
	float _volume;
	BOOL _isActive;
	NSDate* _lastVolumeChangeNotificationDate;
	MPVolumeView* _volumeView;

}

@property (nonatomic,retain) MPVolumeView * volumeView;                                //@synthesize volumeView=_volumeView - In the implementation block
@property (nonatomic,readonly) unsigned long long volumeButtonsState; 
@property (nonatomic,readonly) float volume;                                           //@synthesize volume=_volume - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long audioDirection; 
@property (nonatomic,readonly) unsigned long long outputCoordinationMode; 
@property (nonatomic,readonly) unsigned long long outputOptions; 
@property (nonatomic,readonly) unsigned long long inputOptions; 
@property (nonatomic,readonly) unsigned long long clientPriority; 
@property (nonatomic,readonly) unsigned long long audioSessionMode; 
+(id)sharedInstance;
-(void)finishInterruptionAndResume:(BOOL)arg1 ;
-(unsigned long long)audioDirection;
-(unsigned long long)outputCoordinationMode;
-(unsigned long long)outputOptions;
-(void)addOrUpdateClient:(id)arg1 ;
-(unsigned long long)volumeButtonsState;
-(void)_willResignActive;
-(void)_didBecomeActive;
-(void)_updateObservingVolumeButtons;
-(void)_updateLockingVolume;
-(void)_updateHidingSystemVolumeHud;
-(void)volumeDidChange:(id)arg1 ;
-(void)_systemVolumeDidStopChanging;
-(void)_setVolumeButtonsState:(unsigned long long)arg1 ;
-(void)setVolumeView:(MPVolumeView *)arg1 ;
-(id)init;
-(void)_update;
-(float)volume;
-(void)removeClient:(id)arg1 ;
-(void)beginInterruption;
-(MPVolumeView *)volumeView;
@end

