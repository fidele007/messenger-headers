/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 18, 2017 at 1:27:39 PM Central European Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/982F7718-F913-4C3D-AECC-191FDA119619/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBARServiceHostBase.h>
#import <Messenger/FBARAudioServiceOutputDelegate.h>
#import <Messenger/FBARAudioServiceHosting.h>

@protocol FBARIdentityService, FBARAudioServiceHostingAudioOutput;
@class FBARLiveStreamingService, FBARDeviceMotionDataProvider, FBARCameraShareService, FBARLocaleService, FBAROpticalFlowDataProvider, FBARAudioBufferDataProvider, FBARAudioService, NSString, FBARLogger;

@interface FBARServiceHostMain : FBARServiceHostBase <FBARAudioServiceOutputDelegate, FBARAudioServiceHosting> {

	tuple<std::__1::shared_ptr<msqrd::services::IHTTPClientService>, std::__1::shared_ptr<msqrd::services::IExternalAssetProvider> >* _networkServices;
	BOOL _currentEffectUsesAudio;
	FBARLiveStreamingService* _deviceLiveStreamingService;
	FBARDeviceMotionDataProvider* _deviceMotionDataProvider;
	FBARCameraShareService* _deviceCameraShareService;
	FBARLocaleService* _deviceLocaleService;
	FBAROpticalFlowDataProvider* _deviceOpticalFlowDataProvider;
	id<FBARIdentityService> _appIdentityService;
	FBARAudioBufferDataProvider* _deviceAudioBufferDataProvider;
	FBARAudioService* _deviceAudioService;
	id<FBARAudioServiceHostingAudioOutput> _audioOutput;

}

@property (nonatomic,readonly) FBAROpticalFlowDataProvider * deviceOpticalFlowDataProvider;              //@synthesize deviceOpticalFlowDataProvider=_deviceOpticalFlowDataProvider - In the implementation block
@property (nonatomic,readonly) FBARCameraShareService * deviceCameraShareService;                        //@synthesize deviceCameraShareService=_deviceCameraShareService - In the implementation block
@property (nonatomic,readonly) FBARLiveStreamingService * deviceLiveStreamingService;                    //@synthesize deviceLiveStreamingService=_deviceLiveStreamingService - In the implementation block
@property (nonatomic,readonly) FBARDeviceMotionDataProvider * deviceMotionDataProvider;                  //@synthesize deviceMotionDataProvider=_deviceMotionDataProvider - In the implementation block
@property (nonatomic,readonly) FBARLocaleService * deviceLocaleService;                                  //@synthesize deviceLocaleService=_deviceLocaleService - In the implementation block
@property (nonatomic,retain) id<FBARIdentityService> appIdentityService;                                 //@synthesize appIdentityService=_appIdentityService - In the implementation block
@property (nonatomic,readonly) FBARAudioBufferDataProvider * deviceAudioBufferDataProvider;              //@synthesize deviceAudioBufferDataProvider=_deviceAudioBufferDataProvider - In the implementation block
@property (nonatomic,readonly) FBARAudioService * deviceAudioService;                                    //@synthesize deviceAudioService=_deviceAudioService - In the implementation block
@property (nonatomic,readonly) BOOL currentEffectUsesAudio;                                              //@synthesize currentEffectUsesAudio=_currentEffectUsesAudio - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) FBARLogger * logger; 
@property (nonatomic,readonly) FBARLogger * scriptLogger; 
@property (nonatomic,readonly) EffectServiceHost* engineServiceHost; 
@property (assign,nonatomic,__weak) id<FBARAudioServiceHostingAudioOutput> audioOutput;                  //@synthesize audioOutput=_audioOutput - In the implementation block
-(void)resetAllServices;
-(void)prepareServicesForEffectWithManifest:(const Manifest*)arg1 assetsPath:(id)arg2 ;
-(FBARDeviceMotionDataProvider *)deviceMotionDataProvider;
-(BOOL)currentEffectUsesAudioService;
-(FBARAudioService *)deviceAudioService;
-(id<FBARAudioServiceHostingAudioOutput>)audioOutput;
-(FBARAudioBufferDataProvider *)deviceAudioBufferDataProvider;
-(FBARCameraShareService *)deviceCameraShareService;
-(FBARLiveStreamingService *)deviceLiveStreamingService;
-(FBAROpticalFlowDataProvider *)deviceOpticalFlowDataProvider;
-(FBARLocaleService *)deviceLocaleService;
-(id<FBARIdentityService>)appIdentityService;
-(void)audioService:(id)arg1 didRenderAudioSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)updateAudioServicesWithAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)setAudioOutput:(id<FBARAudioServiceHostingAudioOutput>)arg1 ;
-(shared_ptr<msqrd::dataprovider::IAudioBufferDataProvider>*)audioBufferDataProvider;
-(shared_ptr<msqrd::services::IHTTPClientService>*)httpClientService;
-(shared_ptr<msqrd::services::IExternalAssetProvider>*)externalAssetProvider;
-(shared_ptr<msqrd::services::IDeepLinkAssetProvider>*)deepLinkAssetProvider;
-(shared_ptr<msqrd::services::ILiveStreamingService>*)liveStreamingService;
-(shared_ptr<msqrd::dataprovider::IOpticalFlowDataProvider>*)opticalFlowDataProvider;
-(shared_ptr<msqrd::services::IAudioService>*)audioService;
-(shared_ptr<msqrd::services::ICameraShareService>*)cameraShareService;
-(shared_ptr<msqrd::dataprovider::IMotionDataProvider>*)motionDataProvider;
-(shared_ptr<msqrd::services::ILocaleService>*)localeService;
-(shared_ptr<msqrd::services::IIdentityService>*)identityService;
-(void)setAppIdentityService:(id<FBARIdentityService>)arg1 ;
-(BOOL)currentEffectUsesAudio;
@end

