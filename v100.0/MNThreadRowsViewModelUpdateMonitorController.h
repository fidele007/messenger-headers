/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 18, 2016 at 3:09:29 AM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/D90B4FBB-2659-42DA-B3C0-734CC32E6C6C/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MNThreadSummarySubscribing, MNThreadSummaryOptimisticCacheUpdateListening, MNThreadMessageSubscribing, MNSecureThreadSubscribing, FBMMessageSendListening, MNPendingThreadRequestListening, MNPushMessageReceivedListening, FBMThreadTypingStateTrackerListener, MNMessagesSyncSnapshotListening, FBMSPForcedFetchDeltaHandlerListening, FBFriendChangedMonitorListener, FBMSPFolderCountDeltaHandlerListener, MNEphemeralMessageExpirationTimerStoreListening, MNThreadRowsViewModelEnterForegroundListening;
@class MNThreadRowsViewModelUpdateMonitor, MNThreadListViewModelSubscriptionServiceDependencies;

@interface MNThreadRowsViewModelUpdateMonitorController : NSObject {

	MNThreadRowsViewModelUpdateMonitor* _monitor;
	MNThreadListViewModelSubscriptionServiceDependencies* _dependencies;
	id<MNThreadSummarySubscribing> _threadSummarySubscriber;
	id<MNThreadSummaryOptimisticCacheUpdateListening> _threadSummaryOptimisticUpdateSubscriber;
	id<MNThreadMessageSubscribing> _threadMessageSubscriber;
	id<MNSecureThreadSubscribing> _secureThreadSubscriber;
	id<FBMMessageSendListening> _messageSendListener;
	id<MNPendingThreadRequestListening> _pendingThreadListener;
	id<MNPushMessageReceivedListening> _pushMessageListener;
	id<FBMThreadTypingStateTrackerListener> _threadTypingStateListener;
	id<MNMessagesSyncSnapshotListening> _messagesSyncSnapshotListener;
	id<FBMSPForcedFetchDeltaHandlerListening> _syncProtocolForceFetchListener;
	id<FBFriendChangedMonitorListener> _friendChangedMonitorListener;
	id<FBMSPFolderCountDeltaHandlerListener> _folderCountDeltaHandlerListener;
	id<MNEphemeralMessageExpirationTimerStoreListening> _ephemeralTimerStoreListener;
	id<MNThreadRowsViewModelEnterForegroundListening> _enterForegroundListener;

}
-(id)initWithMonitor:(id)arg1 dependencies:(id)arg2 queue:(id)arg3 ;
-(void)startMonitoring;
-(void)stopMonitoring;
@end

