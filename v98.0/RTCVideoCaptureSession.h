/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 3, 2016 at 12:32:15 PM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/51214F70-E877-4284-9DAC-5D8552407255/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>
#import <Messenger/RTCVideoSnapshotSource.h>

@protocol OS_dispatch_queue, RTCVideoFilterHandler, RTCVideoPreviewContainer;
@class NSObject, AVCaptureVideoPreviewLayer, AVCaptureSession, AVCaptureVideoDataOutput, NSMutableArray, RTCVideoSnapshotRequestManager, RTCVideoPreviewView, RTCVideoCaptureSessionListenerAnnouncer, NSString;

@interface RTCVideoCaptureSession : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, RTCVideoSnapshotSource> {

	NSObject*<OS_dispatch_queue> _captureSessionQueue;
	long long _videoOrientation;
	AVCaptureVideoPreviewLayer* _videoPreviewLayer;
	AVCaptureSession* _captureSession;
	AVCaptureVideoDataOutput* _captureOutput;
	BOOL _running;
	BOOL _mirrorOutgoingFrontFacingVideoData;
	NSMutableArray* _activeListeners;
	NSMutableArray* _pendingDeviceChanges;
	RTCVideoSnapshotRequestManager* _captureSnapshotManager;
	RtcContext* _rtcContext;
	BOOL _vcapSimplify;
	BOOL _isLiveWith;
	id<RTCVideoFilterHandler> _filterHandler;
	id<RTCVideoPreviewContainer> _activePreviewContainer;
	id<RTCVideoPreviewContainer> _activeCustomPreviewContainer;
	RTCVideoPreviewView* _previewView;
	RTCVideoCaptureSessionListenerAnnouncer* _announcer;
	double _basePortraitAspectRatio;

}

@property (readonly) double basePortraitAspectRatio;                //@synthesize basePortraitAspectRatio=_basePortraitAspectRatio - In the implementation block
@property (readonly) BOOL isRunning; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)activeSession;
+(void)clearActiveSession:(id)arg1 ;
+(void)setActiveSession:(id)arg1 ;
-(void)becomeActiveSession;
-(void)startCaptureForListener:(id)arg1 width:(int)arg2 height:(int)arg3 maxFPS:(int)arg4 ;
-(void)addCaptureSessionListener:(id)arg1 ;
-(void)resignActiveSession;
-(void)closeWithCompletion:(/*^block*/id)arg1 ;
-(void)removeCaptureSessionListener:(id)arg1 ;
-(void)setCaptureVideoOrientation:(long long)arg1 ;
-(void)setInputByDeviceId:(id)arg1 ;
-(id)getFilter;
-(void)setActiveVideoCustomPreviewContainer:(id)arg1 ;
-(void)setActiveVideoPreviewContainer:(id)arg1 ;
-(double)basePortraitAspectRatio;
-(void)setMirrorOutgoingFrontFacingVideoData:(BOOL)arg1 ;
-(void)captureSnapshotWithTimeout:(double)arg1 callbackQueue:(id)arg2 onComplete:(/*^block*/id)arg3 ;
-(void)stopCaptureForListener:(id)arg1 ;
-(void)_setVideoPreviewLayer:(id)arg1 ;
-(void)_updatePreviewLayer:(id)arg1 ;
-(void)_changeInputDevice;
-(void)_updateToVideoOrientation:(long long)arg1 ;
-(void)_updateMirrorOutgoingFrontFacingVideoData:(BOOL)arg1 ;
-(void)_manuallyMirrorOutgoingDataConnection;
-(void)_automaticallyMirrorOutgoingDataConnection;
-(void)_addToCapture:(id)arg1 ;
-(id)_itemForListener:(id)arg1 ;
-(void)_removeFromCapture:(id)arg1 ;
-(void)setRtcContext:(RtcContext*)arg1 ;
-(void)_stopCaptureAndClose;
-(void)_processCaptureSnapshotRequest:(id)arg1 ;
-(void)_captureSessionDidStart:(id)arg1 ;
-(void)_interruptingCaptureSessionDidStop:(id)arg1 ;
-(BOOL)_captureSessionUsesCamera:(id)arg1 ;
-(void)_startListeningForInterruptionEnd:(id)arg1 ;
-(void)_notifyVideoCaptureSessionInterruptionBegan;
-(void)_stopListeningForInterruptionEnd;
-(void)_notifyVideoCaptureSessionInterruptionEnded;
-(void)_notifyVideoCaptureSessionStarted;
-(void)_notifyVideoCaptureSessionEnded;
-(void)_updateVideoPreviewLayerVideoOrientationIfNotLiveWith;
-(void)_createSessionIfNeeded;
-(void)_updateSessionWithListeners:(id)arg1 ;
-(void)_stopListeningForInterruption;
-(void)_updateVideoCaptureToWidth:(long long)arg1 height:(long long)arg2 maxFPS:(long long)arg3 ;
-(void)_startListeningForInterruption;
-(void)_setInput:(id)arg1 ;
-(void)captureOutputSimplified:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)captureOutputOriginal:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)_completePendingSnapshotRequestsWithProvider:(CVBufferRef)arg1 ;
-(void)_completePendingSnapshotRequestsWithVideoFrame:(char*)arg1 dataSize:(unsigned long long)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 stride:(unsigned long long)arg5 ;
-(void)setIsLiveWith:(BOOL)arg1 ;
-(void)setUseSimplifiedCapturing:(BOOL)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setFilter:(id)arg1 ;
-(BOOL)isRunning;
-(void)_setRunning:(BOOL)arg1 ;
-(void)_stopListeningForNotifications;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
@end

