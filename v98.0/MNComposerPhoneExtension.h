/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 3, 2016 at 12:31:57 PM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/51214F70-E877-4284-9DAC-5D8552407255/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBKeyboardObserverDelegate.h>
#import <Messenger/MNLongPressPhoneExtensionControllerDelegate.h>
#import <Messenger/MNPresenceUpdateListening.h>
#import <Messenger/FBWebRTCActiveCallTrackerDelegate.h>
#import <Messenger/MNComposerPrimaryExtension.h>

@protocol MNComposerExtensionPresentationStrategy, MNComposerExtensionDelegate, MNComposerExtensionEditDelegate, MNComposerExtensionSendDelegate, MNActionNuxPresenter;
@class FBWebRTCCallStarter, FBWebRTCGroupCallStarter, FBWebRTCCallButtonImageProvider, FBKeyboardObserver, MNSoundController, MNPresenceSubscriptionService, FBWebRTCActiveCallTracker, MNLongPressPhoneExtensionController, MNComposerTextBannerView, FBWebRTCCallButton, UIColor, NSString;

@interface MNComposerPhoneExtension : NSObject <FBKeyboardObserverDelegate, MNLongPressPhoneExtensionControllerDelegate, MNPresenceUpdateListening, FBWebRTCActiveCallTrackerDelegate, MNComposerPrimaryExtension> {

	FBWebRTCCallStarter* _callStarter;
	FBWebRTCGroupCallStarter* _groupCallStarter;
	FBWebRTCCallButtonImageProvider* _buttonImageProvider;
	id<MNComposerExtensionPresentationStrategy> _presentationStrategy;
	FBKeyboardObserver* _keyboardObserver;
	MNSoundController* _soundController;
	MNPresenceSubscriptionService* _presenceSubscriptionService;
	FBWebRTCActiveCallTracker* _activeCallTracker;
	MNLongPressPhoneExtensionController* _longPressPhoneExtensionController;
	id _sendingContextToken;
	MNComposerTextBannerView* _textBannerView;
	FBWebRTCCallButton* _callButton;
	id<MNComposerExtensionDelegate> _delegate;
	id<MNComposerExtensionEditDelegate> _editDelegate;
	id<MNComposerExtensionSendDelegate> _sendDelegate;
	UIColor* _tintColor;
	id<MNActionNuxPresenter> _actionNuxPresenter;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionDelegate> delegate;                      //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<MNComposerExtensionEditDelegate> editDelegate;              //@synthesize editDelegate=_editDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<MNComposerExtensionSendDelegate> sendDelegate;              //@synthesize sendDelegate=_sendDelegate - In the implementation block
@property (nonatomic,copy,readonly) NSString * placeholderText; 
@property (nonatomic,copy,readonly) NSString * searchPlaceholderText; 
@property (nonatomic,retain) UIColor * tintColor;                                                  //@synthesize tintColor=_tintColor - In the implementation block
@property (nonatomic,retain) id<MNActionNuxPresenter> actionNuxPresenter;                          //@synthesize actionNuxPresenter=_actionNuxPresenter - In the implementation block
@property (nonatomic,readonly) BOOL autoFocusSearchBar; 
@property (nonatomic,copy,readonly) id longPressGestureHandler; 
@property (nonatomic,readonly) UIView*<MNComposerActionButton> primaryActionButton; 
@property (nonatomic,readonly) long long primaryExtensionType; 
-(void)keyboardObserver:(id)arg1 keyboardWillShowWithBeginFrame:(CGRect)arg2 endFrame:(CGRect)arg3 duration:(double)arg4 curve:(long long)arg5 ;
-(void)keyboardObserverKeyboardDidHide:(id)arg1 ;
-(id)_composerIcon;
-(void)setUpWithInitiator:(id)arg1 ;
-(void)applyOptions:(id)arg1 ;
-(id)extensionModule;
-(BOOL)shouldPromote;
-(BOOL)isInSegmentedControl;
-(void)didSelect:(BOOL)arg1 ;
-(BOOL)shouldPresent:(BOOL)arg1 ;
-(id)presentationStrategy;
-(long long)inputSource;
-(BOOL)isEligible;
-(id)activeSubExtension;
-(id)subExtensions;
-(id<MNComposerExtensionSendDelegate>)sendDelegate;
-(void)setSendDelegate:(id<MNComposerExtensionSendDelegate>)arg1 ;
-(NSString *)searchPlaceholderText;
-(void)didReceivePresenceUpdate:(id)arg1 ;
-(id)initWithCallStarter:(id)arg1 groupCallStarter:(id)arg2 presenceSubscriptionService:(id)arg3 activeCallTracker:(id)arg4 buttonImageProvider:(id)arg5 modalPresentationStackManagerProvider:(id)arg6 soundController:(id)arg7 audioRecorderProvider:(id)arg8 applicationName:(id)arg9 webRTCDevice:(id)arg10 ;
-(void)_showBannerText:(id)arg1 ;
-(void)_hideBannerText;
-(id)_bannerViewPresenter;
-(void)didUpdateComposingContext;
-(id<MNActionNuxPresenter>)actionNuxPresenter;
-(void)setActionNuxPresenter:(id<MNActionNuxPresenter>)arg1 ;
-(BOOL)autoFocusSearchBar;
-(id)longPressGestureHandler;
-(UIView*<MNComposerActionButton>)primaryActionButton;
-(long long)primaryExtensionType;
-(void)_startCall;
-(id)_threadComposingContext;
-(id)_canonicalThreadUserId;
-(void)callTracker:(id)arg1 isInActiveCall:(BOOL)arg2 ;
-(BOOL)_isPeerUserPresentOnCanonicalThread;
-(void)longPressPhoneExtensionControllerWillStartRecording:(id)arg1 ;
-(void)longPressPhoneExtensionController:(id)arg1 didFinishRecordingWithAttachment:(id)arg2 ;
-(void)longPressPhoneExtensionControllerDidCancelRecording:(id)arg1 ;
-(void)longPressPhoneExtensionControllerDidReachRecordingLimit:(id)arg1 ;
-(void)longPressPhoneExtensionController:(id)arg1 showBannerText:(id)arg2 ;
-(void)longPressPhoneExtensionControllerHideBannerText:(id)arg1 ;
-(id)longPressPhoneExtensionControllerRequestTintColor:(id)arg1 ;
-(id)extensionIdentifier;
-(void)setDelegate:(id<MNComposerExtensionDelegate>)arg1 ;
-(void)dealloc;
-(id<MNComposerExtensionDelegate>)delegate;
-(long long)category;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
-(id)tabBarItem;
-(long long)soundName;
-(void)setEditDelegate:(id<MNComposerExtensionEditDelegate>)arg1 ;
-(id<MNComposerExtensionEditDelegate>)editDelegate;
-(void)_updateButton;
-(NSString *)placeholderText;
-(void)tearDown;
-(BOOL)isThirdParty;
@end

