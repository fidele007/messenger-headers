/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 3, 2016 at 12:32:17 PM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/51214F70-E877-4284-9DAC-5D8552407255/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/RCTEventEmitter.h>
#import <Messenger/RCTBridgeModule.h>
#import <Messenger/RCTValueAnimatedNodeObserver.h>
#import <Messenger/RCTEventDispatcherObserver.h>

@class NSMutableDictionary, NSMutableSet, CADisplayLink, NSString, RCTBridge;

@interface RCTNativeAnimatedModule : RCTEventEmitter <RCTBridgeModule, RCTValueAnimatedNodeObserver, RCTEventDispatcherObserver> {

	NSMutableDictionary* _animationNodes;
	NSMutableDictionary* _animationDrivers;
	NSMutableDictionary* _eventAnimationDrivers;
	NSMutableSet* _activeAnimations;
	NSMutableSet* _finishedAnimations;
	NSMutableSet* _updatedValueNodes;
	NSMutableSet* _propAnimationNodes;
	CADisplayLink* _displayLink;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) RCTBridge * bridge; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> methodQueue; 
+(id)moduleName;
+(id)__rct_export__760;
+(id)__rct_export__1111;
+(id)__rct_export__1262;
+(id)__rct_export__1433;
+(id)__rct_export__1734;
+(id)__rct_export__1855;
+(id)__rct_export__2036;
+(id)__rct_export__2167;
+(id)__rct_export__2288;
+(id)__rct_export__2419;
+(id)__rct_export__25010;
+(id)__rct_export__25811;
+(id)__rct_export__27212;
+(id)__rct_export__28013;
+(id)__rct_export__29014;
+(id)__rct_export__31415;
+(void)load;
-(NSObject*<OS_dispatch_queue>)methodQueue;
-(id)supportedEvents;
-(void)animatedNode:(id)arg1 didUpdateValue:(double)arg2 ;
-(void)startAnimationLoopIfNeeded;
-(void)updateViewsProps;
-(void)stopAnimationLoopIfNeeded;
-(BOOL)eventDispatcherWillDispatchEvent:(id)arg1 ;
-(void)createAnimatedNode:(id)arg1 config:(id)arg2 ;
-(void)connectAnimatedNodes:(id)arg1 childTag:(id)arg2 ;
-(void)disconnectAnimatedNodes:(id)arg1 childTag:(id)arg2 ;
-(void)startAnimatingNode:(id)arg1 nodeTag:(id)arg2 config:(id)arg3 endCallback:(/*^block*/id)arg4 ;
-(void)setAnimatedNodeValue:(id)arg1 value:(id)arg2 ;
-(void)setAnimatedNodeOffset:(id)arg1 offset:(id)arg2 ;
-(void)flattenAnimatedNodeOffset:(id)arg1 ;
-(void)extractAnimatedNodeOffset:(id)arg1 ;
-(void)connectAnimatedNodeToView:(id)arg1 viewTag:(id)arg2 ;
-(void)disconnectAnimatedNodeFromView:(id)arg1 viewTag:(id)arg2 ;
-(void)dropAnimatedNode:(id)arg1 ;
-(void)startListeningToAnimatedNodeValue:(id)arg1 ;
-(void)stopListeningToAnimatedNodeValue:(id)arg1 ;
-(void)addAnimatedEventToView:(id)arg1 eventName:(id)arg2 eventMapping:(id)arg3 ;
-(void)removeAnimatedEventFromView:(id)arg1 eventName:(id)arg2 ;
-(void)dealloc;
-(void)stopAnimation:(id)arg1 ;
-(void)updateAnimations;
-(void)setBridge:(RCTBridge *)arg1 ;
@end

