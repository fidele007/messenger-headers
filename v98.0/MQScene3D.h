/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 3, 2016 at 12:32:16 PM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/51214F70-E877-4284-9DAC-5D8552407255/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCNSceneRenderer;
#import <Messenger/Messenger-Structs.h>
@class SCNPlane, SCNNode, SCNMaterial, MQEffectBase;

@interface MQScene3D : NSObject {

	CGSize _frameSize;
	SCNPlane* _videoPlane;
	SCNNode* _videoNode;
	SCNMatrix4 _projection;
	double _cameraFocal;
	SCNMatrix4 _convertMatrix;
	id<SCNSceneRenderer> _renderer;
	SCNNode* _container;
	SCNNode* _videoPlaneSpace;
	SCNNode* _centerContainer;
	SCNNode* _cameraNode;
	SCNMaterial* _videoMaterial;
	SCNMaterial* _videoColorMultiplyMaterial;
	SCNMaterial* _saturationMaterial;
	SCNMaterial* _videoGrayScaleNoiseMaterial;
	SCNMaterial* _videoGrayScaleMaterial;
	SCNMaterial* _videoInvertMaterial;
	SCNMaterial* _videoMaskMaterial;
	SCNMaterial* _videoDisplaceMaterial;
	SCNMaterial* _videoNightVisionMaterial;
	SCNMaterial* _videoLUTMaterial;
	long long _projectionScaleMode;
	MQEffectBase* _effect;

}

@property (nonatomic,retain) MQEffectBase * effect;                                  //@synthesize effect=_effect - In the implementation block
@property (nonatomic,retain) id<SCNSceneRenderer> renderer;                          //@synthesize renderer=_renderer - In the implementation block
@property (nonatomic,retain) SCNNode * container;                                    //@synthesize container=_container - In the implementation block
@property (nonatomic,retain) SCNNode * videoPlaneSpace;                              //@synthesize videoPlaneSpace=_videoPlaneSpace - In the implementation block
@property (nonatomic,retain) SCNNode * centerContainer;                              //@synthesize centerContainer=_centerContainer - In the implementation block
@property (nonatomic,retain) SCNNode * cameraNode;                                   //@synthesize cameraNode=_cameraNode - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoMaterial;                            //@synthesize videoMaterial=_videoMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoColorMultiplyMaterial;               //@synthesize videoColorMultiplyMaterial=_videoColorMultiplyMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * saturationMaterial;                       //@synthesize saturationMaterial=_saturationMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoGrayScaleNoiseMaterial;              //@synthesize videoGrayScaleNoiseMaterial=_videoGrayScaleNoiseMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoGrayScaleMaterial;                   //@synthesize videoGrayScaleMaterial=_videoGrayScaleMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoInvertMaterial;                      //@synthesize videoInvertMaterial=_videoInvertMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoMaskMaterial;                        //@synthesize videoMaskMaterial=_videoMaskMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoDisplaceMaterial;                    //@synthesize videoDisplaceMaterial=_videoDisplaceMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoNightVisionMaterial;                 //@synthesize videoNightVisionMaterial=_videoNightVisionMaterial - In the implementation block
@property (nonatomic,retain) SCNMaterial * videoLUTMaterial;                         //@synthesize videoLUTMaterial=_videoLUTMaterial - In the implementation block
@property (assign,nonatomic) long long projectionScaleMode;                          //@synthesize projectionScaleMode=_projectionScaleMode - In the implementation block
@property (nonatomic,readonly) MQEffectBase * currentEffect; 
-(void)drawFace:(id)arg1 ;
-(void)onEnterFrame:(double)arg1 ;
-(id)customVideoMaterials;
-(SCNMaterial *)videoMaterial;
-(void)setVideoMaterial:(SCNMaterial *)arg1 ;
-(SCNNode *)videoPlaneSpace;
-(void)setVideoPlaneSpace:(SCNNode *)arg1 ;
-(SCNNode *)centerContainer;
-(void)setCenterContainer:(SCNNode *)arg1 ;
-(void)updateProjection;
-(void)initCamera;
-(void)updateVideoMaterial;
-(SCNMaterial *)videoColorMultiplyMaterial;
-(SCNMaterial *)videoInvertMaterial;
-(SCNMaterial *)saturationMaterial;
-(SCNMaterial *)videoGrayScaleNoiseMaterial;
-(SCNMaterial *)videoGrayScaleMaterial;
-(SCNMaterial *)videoDisplaceMaterial;
-(SCNMaterial *)videoNightVisionMaterial;
-(SCNMaterial *)videoLUTMaterial;
-(void)hideContainer;
-(void)showContainer;
-(BOOL)closeMouth:(id)arg1 isHighPoly:(BOOL)arg2 ;
-(void)resetEffect;
-(void)postConstruct;
-(MQEffectBase *)currentEffect;
-(void)drawFaces:(id)arg1 numDetectedFaces:(long long)arg2 ;
-(void)drawWithoutFace;
-(void)updateFrameSize:(CGSize)arg1 ;
-(void)setVideoColorMultiplyMaterial:(SCNMaterial *)arg1 ;
-(void)setSaturationMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoGrayScaleNoiseMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoGrayScaleMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoInvertMaterial:(SCNMaterial *)arg1 ;
-(SCNMaterial *)videoMaskMaterial;
-(void)setVideoMaskMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoDisplaceMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoNightVisionMaterial:(SCNMaterial *)arg1 ;
-(void)setVideoLUTMaterial:(SCNMaterial *)arg1 ;
-(long long)projectionScaleMode;
-(void)setProjectionScaleMode:(long long)arg1 ;
-(SCNNode *)container;
-(void)setContainer:(SCNNode *)arg1 ;
-(void)setEffect:(MQEffectBase *)arg1 ;
-(MQEffectBase *)effect;
-(void)setRenderer:(id<SCNSceneRenderer>)arg1 ;
-(id<SCNSceneRenderer>)renderer;
-(SCNNode *)cameraNode;
-(void)setCameraNode:(SCNNode *)arg1 ;
@end

