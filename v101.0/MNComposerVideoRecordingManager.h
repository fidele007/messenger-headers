/*
* This header is generated by classdump-dyld 1.0
* on Sunday, January 22, 2017 at 11:26:21 AM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/DB24BCEF-8CEA-41B1-9C55-8893795309EE/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBCaptureManagerListener.h>

@protocol OS_dispatch_group, MNComposerVideoRecordingManagerDelegate;
@class FBLazyCreator, NSString, FBWebRTCDevicePermissionManager, FBTimer, NSObject, MNComposerVideoRecordingResult;

@interface MNComposerVideoRecordingManager : NSObject <FBCaptureManagerListener> {

	FBLazyCreator* _captureControllersLazyCreator;
	NSString* _captureSessionPreset;
	FBWebRTCDevicePermissionManager* _permissionManager;
	FBTimer* _recordingUpdateTimer;
	double _recordingStartTime;
	NSObject*<OS_dispatch_group> _recordingStoppingDispatchGroup;
	MNComposerVideoRecordingResult* _recordingResult;
	BOOL _isPreviewReady;
	BOOL _isRecording;
	id<MNComposerVideoRecordingManagerDelegate> _delegate;
	double _recordingDuration;

}

@property (assign,nonatomic,__weak) id<MNComposerVideoRecordingManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL isPreviewReady;                                                    //@synthesize isPreviewReady=_isPreviewReady - In the implementation block
@property (nonatomic,readonly) BOOL isRecording;                                                       //@synthesize isRecording=_isRecording - In the implementation block
@property (nonatomic,readonly) double recordingDuration;                                               //@synthesize recordingDuration=_recordingDuration - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)captureManagerPreviewDidLoad;
-(void)captureManagerHasFinishedLoadingAudioSession;
-(void)captureManagerDidFailToLoadAudioSessionWithError:(id)arg1 ;
-(void)captureManagerHasFinishedLoadingCaptureSession;
-(void)captureManagerHasEndedCaptureSession;
-(void)captureManagerUpdatedPreviousCaptureDevice:(id)arg1 toCurrentCaptureDevice:(id)arg2 ;
-(void)captureManagerDidBecomeInterruptedWithReason:(unsigned char)arg1 ;
-(void)captureManagerDidResignInterrupted;
-(void)captureManagerDidEncounterRuntimeError:(id)arg1 ;
-(void)cancelRecordingIfAny;
-(id)initWithCaptureControllersLazyCreator:(id)arg1 captureSessionPreset:(id)arg2 ;
-(void)promptForPermissions;
-(double)recordingDuration;
-(void)initPreview;
-(BOOL)isPreviewReady;
-(void)_stopRecordingSession;
-(double)_updateRecordingDuration;
-(void)_startRecordingSession;
-(void)_setIsRecording:(BOOL)arg1 ;
-(void)_startRecordingUpdateTimer;
-(void)_stopRecordingWithCompletion:(/*^block*/id)arg1 ;
-(void)_stopRecordingUpdateTimer;
-(void)_onRecordingUpdate;
-(double)getRecordingDuration;
-(void)setDelegate:(id<MNComposerVideoRecordingManagerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNComposerVideoRecordingManagerDelegate>)delegate;
-(void)stopRecording;
-(void)captureImage;
-(BOOL)isRecording;
-(void)startRecording;
@end

