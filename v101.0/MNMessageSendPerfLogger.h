/*
* This header is generated by classdump-dyld 1.0
* on Sunday, January 22, 2017 at 11:26:16 AM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/DB24BCEF-8CEA-41B1-9C55-8893795309EE/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBViewerContextClassProvidable.h>
#import <Messenger/MNMessageSendEventListener.h>
#import <Messenger/MNMessageCellElementAppearanceListener.h>
#import <Messenger/FBMThreadMessageSenderListening.h>
#import <Messenger/MNPendingThreadRequestListening.h>

@protocol MNThreadSummaryCaching;
@class NSString, FBMSendLatencyLogger;

@interface MNMessageSendPerfLogger : NSObject <FBViewerContextClassProvidable, MNMessageSendEventListener, MNMessageCellElementAppearanceListener, FBMThreadMessageSenderListening, MNPendingThreadRequestListening> {

	NSString* _event;
	NSString* _offlineThreadingId;
	BOOL _isNewThread;
	long long _sendSource;
	id<MNThreadSummaryCaching> _threadSummaryCache;
	FBMSendLatencyLogger* _sendLatencyLogger;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)messageSendEventDidBeginSendFromSource:(long long)arg1 ;
-(void)_markStartForMessageSendEvent:(id)arg1 ;
-(void)_markStopForCurrentMessageSendEventWithMessage:(id)arg1 status:(id)arg2 ;
-(void)_cleanUpCachedStates;
-(void)messageCellWillAppear:(id)arg1 withMessageRow:(id)arg2 ;
-(void)threadMessageSenderWillSendOutgoingMessage:(id)arg1 toTarget:(id)arg2 ;
-(void)threadMessageSenderDidCommitSendingOutgoingMessage:(id)arg1 toTarget:(id)arg2 ;
-(void)willCreateThreadForPendingThread:(id)arg1 ;
-(void)didCreateThreadWithKey:(id)arg1 forPendingThread:(id)arg2 ;
-(void)didFailToCreateThreadForPendingThread:(id)arg1 error:(id)arg2 ;
-(void)didCancelCreatingThreadForPendingThread:(id)arg1 ;
-(void)willRetryCreatingThreadForPendingThread:(id)arg1 ;
-(void)didScheduleSendingMessage:(id)arg1 toPendingThread:(id)arg2 ;
-(void)didCancelSendingMessage:(id)arg1 fromPendingThread:(id)arg2 ;
@end

